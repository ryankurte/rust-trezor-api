initSidebarItems({"mod":[["ethereum_sign_tx_eip1559","Nested message and enum types in `EthereumSignTxEIP1559`."]],"struct":[["EthereumAddress","Response: Contains an Ethereum address derived from device private seed @end"],["EthereumGetAddress","Request: Ask device for Ethereum address corresponding to address_n path @start @next EthereumAddress @next Failure"],["EthereumGetPublicKey","Request: Ask device for public key corresponding to address_n path @start @next EthereumPublicKey @next Failure"],["EthereumMessageSignature","Response: Signed message @end"],["EthereumPublicKey","Response: Contains public key derived from device private seed @end"],["EthereumSignMessage","Request: Ask device to sign message @start @next EthereumMessageSignature @next Failure"],["EthereumSignTx","Request: Ask device to sign transaction gas_price, gas_limit and chain_id must be provided and non-zero. All other fields are optional and default to value `0` if missing. Note: the first at most 1024 bytes of data MUST be transmitted as part of this message. @start @next EthereumTxRequest @next Failure"],["EthereumSignTxEip1559","Request: Ask device to sign EIP1559 transaction Note: the first at most 1024 bytes of data MUST be transmitted as part of this message. @start @next EthereumTxRequest @next Failure"],["EthereumSignTypedHash","Request: Ask device to sign hash of typed data @start @next EthereumTypedDataSignature @next Failure"],["EthereumTxAck","Request: Transaction payload data. @next EthereumTxRequest"],["EthereumTxRequest","Response: Device asks for more data from transaction payload, or returns the signature. If data_length is set, device awaits that many more bytes of payload. Otherwise, the signature_* fields contain the computed transaction signature. All three fields will be present. @end @next EthereumTxAck"],["EthereumTypedDataSignature","Response: Signed typed data @end"],["EthereumVerifyMessage","Request: Ask device to verify message @start @next Success @next Failure"]]});