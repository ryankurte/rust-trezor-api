initSidebarItems({"enum":[["AmountUnit","Unit to be used when showing amounts on the display"],["DecredStakingSpendType","Type of script which will be used for decred stake transaction input"],["InputScriptType","Type of script which will be used for transaction input"],["OutputScriptType","Type of script which will be used for transaction output"]],"mod":[["multisig_redeem_script_type","Nested message and enum types in `MultisigRedeemScriptType`."],["tx_ack","Nested message and enum types in `TxAck`."],["tx_ack_input","Nested message and enum types in `TxAckInput`."],["tx_ack_output","Nested message and enum types in `TxAckOutput`."],["tx_ack_payment_request","Nested message and enum types in `TxAckPaymentRequest`."],["tx_ack_prev_extra_data","Nested message and enum types in `TxAckPrevExtraData`."],["tx_ack_prev_input","Nested message and enum types in `TxAckPrevInput`."],["tx_ack_prev_output","Nested message and enum types in `TxAckPrevOutput`."],["tx_request","Nested message and enum types in `TxRequest`."]],"struct":[["Address","Response: Contains address derived from device private seed @end"],["AuthorizeCoinJoin","Request: Ask device to prompt the user to authorize a CoinJoin transaction @start @next Success @next Failure"],["GetAddress","Request: Ask device for address corresponding to address_n path @start @next Address @next Failure"],["GetOwnershipId","Request: Ask device for ownership identifier corresponding to scriptPubKey for address_n path @start @next OwnershipId @next Failure"],["GetOwnershipProof","Request: Ask device for a proof of ownership corresponding to address_n path @start @next OwnershipProof @next Failure"],["GetPublicKey","Request: Ask device for public key corresponding to address_n path @start @next PublicKey @next Failure"],["MessageSignature","Response: Signed message @end"],["MultisigRedeemScriptType","Type of redeem script used in input @embed"],["OwnershipId","Response: Contains the ownership identifier for the scriptPubKey and device private seed @end"],["OwnershipProof","Response: Contains the proof of ownership @end"],["PrevInput","Data type for inputs of previous transactions.When adding fields, take care to not conflict with TxInput @embed"],["PrevOutput","Data type for outputs of previous transactions. @embed"],["PrevTx","Data type for metadata about previous transaction which contains the UTXO being spent. @embed"],["PublicKey","Response: Contains public key derived from device private seed @end"],["SignMessage","Request: Ask device to sign message @start @next MessageSignature @next Failure"],["SignTx","Request: Ask device to sign transaction @start @next TxRequest @next Failure"],["TxAck","Request: Reported transaction data (legacy)"],["TxAckInput","Request: Data about input to be signed. Wire-alias of TxAck."],["TxAckOutput","Request: Data about output to be signed. Wire-alias of TxAck."],["TxAckPaymentRequest","Data type of a payment request for a set of outputs. @next TxRequest"],["TxAckPrevExtraData","Request: Content of the extra data of a previous transaction Wire-alias of TxAck."],["TxAckPrevInput","Request: Data about previous transaction input Wire-alias of TxAck."],["TxAckPrevMeta","Request: Data about previous transaction metadata Wire-alias of TxAck."],["TxAckPrevOutput","Request: Data about previous transaction output Wire-alias of TxAck."],["TxInput","Data type for transaction input to be signed.When adding fields, take care to not conflict with PrevInput"],["TxOutput","Data type for transaction output to be signed. @embed"],["TxRequest","Response: Device asks for information for signing transaction or returns the last result If request_index is set, device awaits TxAck matching the request type. If signature_index is set, ‘signature’ contains signed input of signature_index’s input @end @next TxAckInput @next TxAckOutput @next TxAckPrevMeta @next TxAckPrevInput @next TxAckPrevOutput @next TxAckPrevExtraData @next TxAckPaymentRequest"],["VerifyMessage","Request: Ask device to verify message @start @next Success @next Failure"]]});