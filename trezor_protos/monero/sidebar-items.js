initSidebarItems({"enum":[["MoneroNetworkType",""]],"mod":[["monero_key_image_export_init_request","Nested message and enum types in `MoneroKeyImageExportInitRequest`."],["monero_key_image_sync_step_ack","Nested message and enum types in `MoneroKeyImageSyncStepAck`."],["monero_key_image_sync_step_request","Nested message and enum types in `MoneroKeyImageSyncStepRequest`."],["monero_transaction_all_out_set_ack","Nested message and enum types in `MoneroTransactionAllOutSetAck`."],["monero_transaction_destination_entry","Nested message and enum types in `MoneroTransactionDestinationEntry`."],["monero_transaction_init_request","Nested message and enum types in `MoneroTransactionInitRequest`."],["monero_transaction_source_entry","Nested message and enum types in `MoneroTransactionSourceEntry`."]],"struct":[["DebugMoneroDiagAck","Response: Response to Monero diagnosis protocol. @end"],["DebugMoneroDiagRequest","Request: Universal Monero protocol implementation diagnosis request. @start @next DebugMoneroDiagAck"],["MoneroAddress","Response: Contains Monero watch-only credentials derived from device private seed @end"],["MoneroGetAddress","Request: Ask device for public address derived from seed and address_n @start @next MoneroAddress @next Failure"],["MoneroGetTxKeyAck","Response: Response with the re-encrypted private keys and derivations blob under view key @end"],["MoneroGetTxKeyRequest","Request: Decrypt tx private keys blob @next MoneroGetTxKeyAck"],["MoneroGetWatchKey","Request: Ask device for watch only credentials @start @next MoneroWatchKey @next Failure"],["MoneroKeyImageExportInitAck","Response: Response to key image sync initialization. @next MoneroKeyImageSyncStepRequest"],["MoneroKeyImageExportInitRequest","Request: Sub request of MoneroKeyImageSync. Initializing key image sync. @start @next MoneroKeyImageExportInitAck"],["MoneroKeyImageSyncFinalAck","Response: Response to key image sync step. Contains encryption keys for exported key images. @end"],["MoneroKeyImageSyncFinalRequest","Request: Sub request of MoneroKeyImageSync. Final message of the sync protocol. @next MoneroKeyImageSyncFinalAck"],["MoneroKeyImageSyncStepAck","Response: Response to key image sync step. Contains encrypted exported key image. @next MoneroKeyImageSyncStepRequest @next MoneroKeyImageSyncFinalRequest"],["MoneroKeyImageSyncStepRequest","Request: Sub request of MoneroKeyImageSync. Contains batch of the UTXO to export key image for. @next MoneroKeyImageSyncStepAck"],["MoneroLiveRefreshFinalAck","Response: Response on termination of live refresh mode. @end"],["MoneroLiveRefreshFinalRequest","Request: Request terminating live refresh mode. @next MoneroLiveRefreshFinishedAck"],["MoneroLiveRefreshStartAck","Response after user gave permission @next MoneroLiveRefreshStepRequest @next MoneroLiveRefreshFinalRequest"],["MoneroLiveRefreshStartRequest","Request: Starts live refresh flow. Asks user permission, switches state @next MoneroLiveRefreshStartAck"],["MoneroLiveRefreshStepAck","Response: Response with the encrypted key image + signature @next MoneroLiveRefreshStepRequest @next MoneroLiveRefreshFinishedRequest"],["MoneroLiveRefreshStepRequest","Request: Request to compute a single key image during live sync @next MoneroLiveRefreshStepAck"],["MoneroTransactionAllInputsSetAck","Response: Response to after all inputs have been set. @next MoneroTransactionSetOutputRequest"],["MoneroTransactionAllInputsSetRequest","Request: Sub request of MoneroTransactionSign. Sent after all inputs have been sent. Useful for rangeisg offloading. @next MoneroTransactionAllInputsSetAck"],["MoneroTransactionAllOutSetAck","Response: After all outputs are sent the initial RCT signature fields are sent. @next MoneroTransactionSignInputRequest"],["MoneroTransactionAllOutSetRequest","Request: Sub request of MoneroTransactionSign. Sent after all outputs are sent. @next MoneroTransactionAllOutSetAck"],["MoneroTransactionDestinationEntry","Structure representing Monero transaction destination entry @embed"],["MoneroTransactionFinalAck","Response: Contains transaction metadata and encryption keys needed for further transaction operations (e.g. multisig, send proof). @end"],["MoneroTransactionFinalRequest","Request: Sub request of MoneroTransactionSign. Final message of the procol after all UTXOs are signed @next MoneroTransactionFinalAck"],["MoneroTransactionInitAck","Response: Response to transaction signing initialization. @next MoneroTransactionSetInputRequest"],["MoneroTransactionInitRequest","Request: Sub request of MoneroTransactionSign. Initializes transaction signing. @start @next MoneroTransactionInitAck"],["MoneroTransactionInputViniAck","Response: Response to setting UTXO to the device @next MoneroTransactionInputViniRequest @next MoneroTransactionAllInputsSetRequest"],["MoneroTransactionInputViniRequest","Request: Sub request of MoneroTransactionSign. Sends one UTXO to device together with sealed values. @next MoneroTransactionInputViniAck"],["MoneroTransactionRsigData","Range sig parameters / data. @embed"],["MoneroTransactionSetInputAck","Response: Response to setting UTXO for signature. Contains sealed values needed for further protocol steps. @next MoneroTransactionSetInputAck @next MoneroTransactionInputViniRequest"],["MoneroTransactionSetInputRequest","Request: Sub request of MoneroTransactionSign. Sends one UTXO to device @next MoneroTransactionSetInputAck"],["MoneroTransactionSetOutputAck","Response: Response to setting transaction destination. Contains sealed values needed for further protocol steps. @next MoneroTransactionSetOutputRequest @next MoneroTransactionAllOutSetRequest"],["MoneroTransactionSetOutputRequest","Request: Sub request of MoneroTransactionSign. Sends one transaction destination to device (HMACed) @next MoneroTransactionSetOutputAck"],["MoneroTransactionSignInputAck","Response: Contains full MG signature of the UTXO + multisig data if applicable. @next MoneroTransactionSignInputRequest @next MoneroTransactionFinalRequest"],["MoneroTransactionSignInputRequest","Request: Sub request of MoneroTransactionSign. Sends UTXO for the signing. @next MoneroTransactionSignInputAck"],["MoneroTransactionSourceEntry","Structure representing Monero transaction source entry, UTXO @embed"],["MoneroWatchKey","Response: Contains Monero watch-only credentials derived from device private seed @end"]]});