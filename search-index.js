var searchIndex = JSON.parse('{\
"trezor_client":{"doc":"Trezor API library","t":[3,13,18,4,13,13,13,8,11,11,11,11,0,11,11,11,12,11,0,5,5,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,5,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,4,13,13,13,13,13,13,13,6,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["AvailableDevice","Emulator","MESSAGE_TYPE","Model","Trezor1","Trezor2","Trezor2Bl","TrezorMessage","borrow","borrow","borrow_mut","borrow_mut","client","clone","clone_into","connect","debug","eq","error","find_devices","find_hid_devices","fmt","fmt","fmt","fmt","from","from","into","into","model","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unique","Trezor","apply_settings","backup","borrow","borrow_mut","call","call_raw","change_pin","features","from","init_device","initialize","into","model","new_with_transport","ping","recover_device","reset_device","try_from","try_into","type_id","wipe_device","ButtonRequest","DecodeError","DeviceNotUnique","EncodeError","Error","FailureResponse","InvalidEntropy","InvalidPsbt","MalformedTxRequest","NoDeviceFound","PassphraseRequest","PinMatrixRequest","Result","ToString","TransportBeginSession","TransportConnect","TransportEndSession","TransportReceiveMessage","TransportSendMessage","TxRequestInvalidIndex","UnexpectedMessageType","UnsupportedNetwork","borrow","borrow_mut","fmt","fmt","from","from","from","into","to_string","try_from","try_into","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"q":["trezor_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trezor_client::client","","","","","","","","","","","","","","","","","","","","","","trezor_client::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trezor_client::error::Error","","","","","","","","","","","","","","",""],"d":["A device found by the <code>find_devices()</code> method.  It can be …","","","The different kind of Trezor device models.","","","","This trait extends the protobuf Message trait to also have …","","","","","","","","Connect to the device.","","","Error Handling","Search for all available devices. Most devices will show …","Search for old HID devices. This should only be used for …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Try to get a single device.  Optionally specify whether …","A Trezor device","","","","","Sends a message and returns a TrezorResponse with either …","Sends a message and returns the raw ProtoMessage struct …","","Get the features of the Trezor device.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Get the model of the Trezor device.","Create a trezor device instance with the provided transport","","","","","","","","Button request","Error reading or writing protobuf messages.","More than one device was plugged in.","Error encoding protobuf messages","Trezor error.","A failure message was returned by the device.","Provided entropy is not 32 bytes.","User provided invalid PSBT.","Device produced invalid TxRequest message.","Less than one device was plugged in.","Passphrase request","Pin matrix request","Result type alias for this crate.","Failed to parse from string","Transport error while beginning a session.","Transport error connecting to device.","Transport error while ending a session.","Transport error while receiving a message.","Transport error while sending a message.","The device referenced a non-existing input or output index.","Received an unexpected message type from the device.","The given Bitcoin network is not supported.","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,2,0,1,1,1,0,1,3,1,3,0,1,1,3,3,1,0,0,0,1,1,3,3,1,3,1,3,3,1,1,3,1,3,1,3,1,3,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,0,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"f":[null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]],["model",4]],[[["",0],["",0]]],[[],["result",6,[["trezor",3]]]],null,[[["",0],["model",4]],["bool",0]],null,[[["bool",0]],["result",6,[["vec",3,[["availabledevice",3]]]]]],[[],["result",6,[["vec",3,[["availabledevice",3]]]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["bool",0]],["result",6,[["trezor",3]]]],null,[[["",0],["option",4,[["string",3]]],["option",4,[["bool",0]]],["option",4,[["vec",3,[["u8",0]]]]],["option",4,[["usize",0]]]],["result",6,[["success",3]]]],[[["",0]],["result",6,[["success",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["trezormessage",8]],["result",6,[["trezormessage",8]]]],[[["",0],["trezormessage",8]],["result",6,[["protomessage",3]]]],[[["",0],["bool",0]],["result",6]],[[["",0]],["option",4,[["features",3]]]],[[]],[[["",0],["option",4,[["vec",3,[["u8",0]]]]]],["result",6]],[[["",0],["option",4,[["vec",3,[["u8",0]]]]]],["result",6,[["features",3]]]],[[]],[[["",0]],["model",4]],[[["model",4],["box",3,[["transport",8]]]]],[[["",0],["str",0]],["result",6,[["success",3]]]],[[["",0],["u32",0],["bool",0],["bool",0],["string",3],["bool",0]],["result",6,[["success",3]]]],[[["",0],["bool",0],["usize",0],["bool",0],["bool",0],["string",3],["bool",0],["bool",0]],["result",6,[["entropyrequest",3]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["result",6,[["success",3]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["decodeerror",3]],["error",4]],[[]],[[["encodeerror",3]],["error",4]],[[]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"Model"],[8,"TrezorMessage"],[3,"AvailableDevice"],[3,"Trezor"],[4,"Error"],[13,"TransportConnect"],[13,"TransportBeginSession"],[13,"TransportEndSession"],[13,"TransportSendMessage"],[13,"TransportReceiveMessage"],[13,"UnexpectedMessageType"],[13,"DecodeError"],[13,"EncodeError"],[13,"FailureResponse"],[13,"TxRequestInvalidIndex"],[13,"MalformedTxRequest"],[13,"InvalidPsbt"],[13,"ToString"],[13,"ButtonRequest"],[13,"PinMatrixRequest"],[13,"PassphraseRequest"]]},\
"trezor_protos":{"doc":"","tn":["Address","ApplyFlags","ApplySettings","AuthorizeCoinJoin","BackupDevice","BinanceAddress","BinanceCancelMsg","BinanceGetAddress","BinanceGetPublicKey","BinanceOrderMsg","BinancePublicKey","BinanceSignTx","BinanceSignedTx","BinanceTransferMsg","BinanceTxRequest","ButtonAck","ButtonRequest","Cancel","CancelAuthorization","CardanoAddress","CardanoAssetGroup","CardanoGetAddress","CardanoGetNativeScriptHash","CardanoGetPublicKey","CardanoNativeScriptHash","CardanoPoolOwner","CardanoPoolRelayParameters","CardanoPublicKey","CardanoSignTxFinished","CardanoSignTxInit","CardanoToken","CardanoTxAuxiliaryData","CardanoTxAuxiliaryDataSupplement","CardanoTxBodyHash","CardanoTxCertificate","CardanoTxCollateralInput","CardanoTxHostAck","CardanoTxInput","CardanoTxItemAck","CardanoTxMint","CardanoTxOutput","CardanoTxRequiredSigner","CardanoTxWithdrawal","CardanoTxWitnessRequest","CardanoTxWitnessResponse","ChangePin","ChangeWipeCode","CipherKeyValue","CipheredKeyValue","CosiCommit","CosiCommitment","CosiSign","CosiSignature","DebugLinkDecision","DebugLinkEraseSdCard","DebugLinkFlashErase","DebugLinkGetState","DebugLinkLayout","DebugLinkLog","DebugLinkMemory","DebugLinkMemoryRead","DebugLinkMemoryWrite","DebugLinkRecordScreen","DebugLinkReseedRandom","DebugLinkState","DebugLinkStop","DebugLinkWatchLayout","DebugMoneroDiagAck","DebugMoneroDiagRequest","DeprecatedPassphraseStateAck","DeprecatedPassphraseStateRequest","DoPreauthorized","EcdhSessionKey","EndSession","Entropy","EntropyAck","EntropyRequest","EosGetPublicKey","EosPublicKey","EosSignTx","EosSignedTx","EosTxActionAck","EosTxActionRequest","EthereumAddress","EthereumGetAddress","EthereumGetPublicKey","EthereumMessageSignature","EthereumPublicKey","EthereumSignMessage","EthereumSignTx","EthereumSignTxEip1559","EthereumSignTypedData","EthereumSignTypedHash","EthereumTxAck","EthereumTxRequest","EthereumTypedDataSignature","EthereumTypedDataStructAck","EthereumTypedDataStructRequest","EthereumTypedDataValueAck","EthereumTypedDataValueRequest","EthereumVerifyMessage","Failure","Features","FirmwareChunk","FirmwareChunkAck","FirmwareErase","FirmwareHash","FirmwareRequest","FirmwareUpload","GetAddress","GetEcdhSessionKey","GetEntropy","GetFeatures","GetFirmware","GetFirmwareHash","GetNextU2fCounter","GetNonce","GetOwnershipId","GetOwnershipProof","GetPublicKey","Initialize","LoadDevice","LockDevice","MESSAGE_TYPE","MESSAGE_TYPE","MessageSignature","MessageType","MoneroAddress","MoneroGetAddress","MoneroGetTxKeyAck","MoneroGetTxKeyRequest","MoneroGetWatchKey","MoneroKeyImageExportInitAck","MoneroKeyImageExportInitRequest","MoneroKeyImageSyncFinalAck","MoneroKeyImageSyncFinalRequest","MoneroKeyImageSyncStepAck","MoneroKeyImageSyncStepRequest","MoneroLiveRefreshFinalAck","MoneroLiveRefreshFinalRequest","MoneroLiveRefreshStartAck","MoneroLiveRefreshStartRequest","MoneroLiveRefreshStepAck","MoneroLiveRefreshStepRequest","MoneroTransactionAllInputsSetAck","MoneroTransactionAllInputsSetRequest","MoneroTransactionAllOutSetAck","MoneroTransactionAllOutSetRequest","MoneroTransactionFinalAck","MoneroTransactionFinalRequest","MoneroTransactionInitAck","MoneroTransactionInitRequest","MoneroTransactionInputViniAck","MoneroTransactionInputViniRequest","MoneroTransactionSetInputAck","MoneroTransactionSetInputRequest","MoneroTransactionSetOutputAck","MoneroTransactionSetOutputRequest","MoneroTransactionSignInputAck","MoneroTransactionSignInputRequest","MoneroWatchKey","NemAddress","NemDecryptMessage","NemDecryptedMessage","NemGetAddress","NemSignTx","NemSignedTx","NextU2fCounter","Nonce","OwnershipId","OwnershipProof","PassphraseAck","PassphraseRequest","PinMatrixAck","PinMatrixRequest","Ping","PreauthorizedRequest","PublicKey","RebootToBootloader","RecoveryDevice","ResetDevice","RippleAddress","RippleGetAddress","RippleSignTx","RippleSignedTx","SdProtect","SelfTest","SetU2fCounter","SignIdentity","SignMessage","SignTx","SignedIdentity","StellarAccountMergeOp","StellarAddress","StellarAllowTrustOp","StellarBumpSequenceOp","StellarChangeTrustOp","StellarCreateAccountOp","StellarCreatePassiveSellOfferOp","StellarGetAddress","StellarManageBuyOfferOp","StellarManageDataOp","StellarManageSellOfferOp","StellarPathPaymentStrictReceiveOp","StellarPathPaymentStrictSendOp","StellarPaymentOp","StellarSetOptionsOp","StellarSignTx","StellarSignedTx","StellarTxOpRequest","Success","TezosAddress","TezosGetAddress","TezosGetPublicKey","TezosPublicKey","TezosSignTx","TezosSignedTx","TrezorMessage","TxAck","TxAckPaymentRequest","TxRequest","VerifyMessage","WebAuthnAddResidentCredential","WebAuthnCredentials","WebAuthnListResidentCredentials","WebAuthnRemoveResidentCredential","WipeDevice","WordAck","WordRequest","bitcoin","bootloader","borrow","borrow_mut","cardano","clone","clone_into","cmp","common","debug","default","eq","ethereum","ethereum_eip712","fmt","from","from_i32","hash","into","is_valid","management","monero","nem","partial_cmp","ripple","stellar","tezos","to_owned","try_from","try_into","type_id","webauthn","Address","AmountUnit","AuthorizeCoinJoin","Bitcoin","DecredStakingSpendType","External","GetAddress","GetOwnershipId","GetOwnershipProof","GetPublicKey","InputScriptType","MessageSignature","Microbitcoin","Millibitcoin","MultisigRedeemScriptType","OutputScriptType","OwnershipId","OwnershipProof","Paytoaddress","Paytomultisig","Paytoopreturn","Paytop2shwitness","Paytoscripthash","Paytotaproot","Paytowitness","PrevInput","PrevOutput","PrevTx","PublicKey","Satoshi","SignMessage","SignTx","Spendaddress","Spendmultisig","Spendp2shwitness","Spendtaproot","Spendwitness","SsGen","Ssrtx","TxAck","TxAckInput","TxAckOutput","TxAckPaymentRequest","TxAckPrevExtraData","TxAckPrevInput","TxAckPrevMeta","TxAckPrevOutput","TxInput","TxOutput","TxRequest","VerifyMessage","address","address","address","address","address","address_n","address_n","address_n","address_n","address_n","address_n","address_n","address_n","address_n","amount","amount","amount","amount","amount","amount_unit","amount_unit","amount_unit","amount_unit","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch_id","branch_id","branch_id","branch_id","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","coin_name","coin_name","coin_name","coin_name","coin_name","coin_name","coin_name","coin_name","coin_name","coin_name","coin_name","coin_name","coin_name","coin_name","coin_name","coin_name","commitment_data","commitment_data","commitment_data","commitment_data","coordinator","decred_script_version","decred_script_version","decred_staking_spend","decred_staking_spend","decred_staking_ticket","decred_staking_ticket","decred_tree","decred_tree","decred_tree","decred_tree","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","details","ecdsa_curve_name","ecdsa_curve_name","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","expiry","expiry","expiry","expiry","extra_data_len","extra_data_len","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_i32","from_i32","from_i32","from_i32","hash","hash","hash","hash","ignore_xpub_magic","ignore_xpub_magic","ignore_xpub_magic","ignore_xpub_magic","inputs_count","inputs_count","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_valid","is_valid","is_valid","is_valid","lock_time","lock_time","lock_time","m","mac","mac","max_coordinator_fee_rate","max_fee_per_kvbyte","max_rounds","memos","message","message","multisig","multisig","multisig","multisig","multisig","multisig_redeem_script_type","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","no_script_type","no_script_type","node","nodes","nonce","nonce","op_return_data","op_return_data","orig_hash","orig_hash","orig_hash","orig_hash","orig_index","orig_index","orig_index","orig_index","outputs_count","outputs_count","overwintered","overwintered","ownership_id","ownership_ids","ownership_proof","ownership_proof","ownership_proof","partial_cmp","partial_cmp","partial_cmp","partial_cmp","payment_req_index","payment_req_index","prev_hash","prev_hash","prev_index","prev_index","pubkeys","recipient_name","request_type","request_type","root_fingerprint","root_fingerprint","script_pubkey","script_pubkey","script_pubkey","script_sig","script_sig","script_sig","script_type","script_type","script_type","script_type","script_type","script_type","script_type","script_type","script_type","script_type","script_type","script_type","script_type","script_type","script_type","script_type","sequence","sequence","sequence","serialized","set_amount_unit","set_amount_unit","set_decred_staking_spend","set_request_type","set_script_type","set_script_type","set_script_type","set_script_type","set_script_type","set_script_type","set_script_type","set_script_type","show_display","show_display","show_display","show_display","signature","signature","signature","signature","signatures","timestamp","timestamp","timestamp","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx","tx","tx","tx","tx","tx","tx","tx_ack","tx_ack_input","tx_ack_output","tx_ack_payment_request","tx_ack_prev_extra_data","tx_ack_prev_input","tx_ack_prev_output","tx_request","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_confirmation","user_confirmation","version","version","version","version_group_id","version_group_id","version_group_id","version_group_id","witness","witness","xpub","HdNodePathType","address_n","borrow","borrow_mut","clear","clone","clone_into","default","encoded_len","eq","fmt","from","into","ne","node","to_owned","try_from","try_into","type_id","TransactionType","bin_outputs","borrow","borrow_mut","branch_id","branch_id","clear","clone","clone_into","default","encoded_len","eq","expiry","expiry","extra_data","extra_data","extra_data_len","extra_data_len","fmt","from","inputs","inputs_cnt","inputs_cnt","into","lock_time","lock_time","ne","outputs","outputs_cnt","outputs_cnt","overwintered","overwintered","timestamp","timestamp","to_owned","transaction_type","try_from","try_into","type_id","version","version","version_group_id","version_group_id","TxInputType","TxOutputBinType","TxOutputType","address","address","address_n","address_n","amount","amount","amount","amount","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","commitment_data","commitment_data","decred_script_version","decred_script_version","decred_staking_spend","decred_staking_spend","decred_tree","decred_tree","default","default","default","encoded_len","encoded_len","encoded_len","eq","eq","eq","fmt","fmt","fmt","from","from","from","into","into","into","multisig","multisig","ne","ne","ne","op_return_data","op_return_data","orig_hash","orig_hash","orig_hash","orig_hash","orig_index","orig_index","orig_index","orig_index","ownership_proof","ownership_proof","payment_req_index","payment_req_index","prev_hash","prev_index","script_pubkey","script_pubkey","script_pubkey","script_sig","script_sig","script_type","script_type","script_type","script_type","sequence","sequence","set_decred_staking_spend","set_script_type","set_script_type","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","witness","witness","TxAckInputWrapper","borrow","borrow_mut","clear","clone","clone_into","default","encoded_len","eq","fmt","from","input","into","ne","to_owned","try_from","try_into","type_id","TxAckOutputWrapper","borrow","borrow_mut","clear","clone","clone_into","default","encoded_len","eq","fmt","from","into","ne","output","to_owned","try_from","try_into","type_id","CoinPurchaseMemo","PaymentRequestMemo","RefundMemo","TextMemo","address","address","amount","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","coin_purchase_memo","coin_type","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","mac","mac","ne","ne","ne","ne","refund_memo","text","text_memo","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","TxAckPrevExtraDataWrapper","borrow","borrow_mut","clear","clone","clone_into","default","encoded_len","eq","extra_data_chunk","fmt","from","into","ne","to_owned","try_from","try_into","type_id","TxAckPrevInputWrapper","borrow","borrow_mut","clear","clone","clone_into","default","encoded_len","eq","fmt","from","input","into","ne","to_owned","try_from","try_into","type_id","TxAckPrevOutputWrapper","borrow","borrow_mut","clear","clone","clone_into","default","encoded_len","eq","fmt","from","into","ne","output","to_owned","try_from","try_into","type_id","RequestType","TxRequestDetailsType","TxRequestSerializedType","Txextradata","Txfinished","Txinput","Txmeta","Txoriginput","Txorigoutput","Txoutput","Txpaymentreq","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","cmp","default","default","default","encoded_len","encoded_len","eq","eq","eq","extra_data_len","extra_data_len","extra_data_offset","extra_data_offset","fmt","fmt","fmt","from","from","from","from_i32","hash","into","into","into","is_valid","ne","ne","partial_cmp","request_index","request_index","serialized_tx","serialized_tx","signature","signature","signature_index","signature_index","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","tx_hash","tx_hash","type_id","type_id","type_id","FirmwareErase","FirmwareRequest","FirmwareUpload","SelfTest","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","hash","hash","into","into","into","into","length","length","length","length","ne","ne","ne","ne","offset","offset","payload","payload","payload","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","All","Any","Base","BaseKeyScript","BaseScriptKey","BaseScriptScript","Bech32","Byron","ByronWitness","CardanoAddress","CardanoAddressParametersType","CardanoAddressType","CardanoAssetGroup","CardanoBlockchainPointerType","CardanoCatalystRegistrationParametersType","CardanoCertificateType","CardanoDerivationType","CardanoGetAddress","CardanoGetNativeScriptHash","CardanoGetPublicKey","CardanoNativeScript","CardanoNativeScriptHash","CardanoNativeScriptHashDisplayFormat","CardanoNativeScriptType","CardanoPoolMetadataType","CardanoPoolOwner","CardanoPoolParametersType","CardanoPoolRelayParameters","CardanoPoolRelayType","CardanoPublicKey","CardanoSignTxFinished","CardanoSignTxInit","CardanoToken","CardanoTxAuxiliaryData","CardanoTxAuxiliaryDataSupplement","CardanoTxAuxiliaryDataSupplementType","CardanoTxBodyHash","CardanoTxCertificate","CardanoTxCollateralInput","CardanoTxHostAck","CardanoTxInput","CardanoTxItemAck","CardanoTxMint","CardanoTxOutput","CardanoTxRequiredSigner","CardanoTxSigningMode","CardanoTxWithdrawal","CardanoTxWitnessRequest","CardanoTxWitnessResponse","CardanoTxWitnessType","CatalystRegistrationSignature","Enterprise","EnterpriseScript","Hide","Icarus","IcarusTrezor","InvalidBefore","InvalidHereafter","Ledger","MultipleHostName","MultisigTransaction","NOfK","None","OrdinaryTransaction","PlutusTransaction","Pointer","PointerScript","PolicyId","PoolRegistrationAsOwner","PubKey","Reward","RewardScript","ShelleyWitness","SingleHostIp","SingleHostName","StakeDelegation","StakeDeregistration","StakePoolRegistration","StakeRegistration","address","address","address","address_n","address_n","address_n_staking","address_parameters","address_parameters","address_type","address_type","amount","amount","amount","amount","asset_groups_count","asset_groups_count","asset_name_bytes","auxiliary_data_hash","auxiliary_data_hash","block_index","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","catalyst_registration_parameters","catalyst_signature","catalyst_signature","certificate_index","certificate_pointer","certificates_count","chain_code","chain_code","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","collateral_inputs_count","cost","datum_hash","datum_hash","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","derivation_type","derivation_type","derivation_type","derivation_type","derivation_type","derivation_type","derivation_type","derivation_type","display_format","display_format","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fee","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_i32","from_i32","from_i32","from_i32","from_i32","from_i32","from_i32","from_i32","from_i32","has_auxiliary_data","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","host_name","host_name","include_network_id","include_network_id","inputs_count","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","invalid_before","invalid_before","invalid_hereafter","invalid_hereafter","ipv4_address","ipv4_address","ipv6_address","ipv6_address","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","key_hash","key_hash","key_hash","key_hash","key_hash","key_hash","key_hash","key_hash","key_path","key_path","margin_denominator","margin_numerator","metadata","mint_amount","mint_amount","minting_asset_groups_count","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","network_id","network_id","node","nonce","outputs_count","owners_count","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","path","path","pledge","policy_id","pool","pool","pool_id","pool_parameters","port","port","prev_hash","prev_hash","prev_index","prev_index","protocol_magic","protocol_magic","pub_key","relays_count","required_signatures_count","required_signatures_count","required_signers_count","reward_account","reward_address_parameters","script","script_data_hash","script_data_hash","script_hash","script_hash","script_hash","script_hash","script_hash","script_payment_hash","script_payment_hash","script_staking_hash","script_staking_hash","scripts","set_address_type","set_derivation_type","set_derivation_type","set_derivation_type","set_derivation_type","set_display_format","set_signing_mode","set_type","set_type","set_type","set_type","set_type","show_display","show_display","show_display","show_display","signature","signing_mode","signing_mode","staking_key_hash","staking_key_hash","staking_key_hash","staking_key_hash","staking_key_path","staking_path","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","tokens_count","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttl","ttl","tx_hash","tx_index","type","type","type","type","type","type","type","type","type","type","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","validity_interval_start","validity_interval_start","voting_public_key","vrf_key_hash","withdrawals_count","witness_requests_count","xpub","ButtonAck","ButtonRequest","DeprecatedPassphraseStateAck","DeprecatedPassphraseStateRequest","Failure","HdNodeType","PassphraseAck","PassphraseRequest","PinMatrixAck","PinMatrixRequest","Success","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button_request","chain_code","child_num","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","code","code","code","default","default","default","default","default","default","default","default","default","default","default","depth","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","failure","fingerprint","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","message","message","message","message","ne","ne","ne","ne","ne","ne","ne","ne","ne","on_device","on_device","on_device","on_device","pages","pages","passphrase","passphrase","pin","pin_matrix_request","private_key","private_key","public_key","set_code","set_code","set_type","state","state","state","state","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type","type","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ButtonRequestAddress","ButtonRequestConfirmOutput","ButtonRequestConfirmWord","ButtonRequestFeeOverThreshold","ButtonRequestFirmwareCheck","ButtonRequestMnemonicInput","ButtonRequestMnemonicWordCount","ButtonRequestOther","ButtonRequestPassphraseEntry","ButtonRequestPinEntry","ButtonRequestProtectCall","ButtonRequestPublicKey","ButtonRequestRecoveryHomepage","ButtonRequestResetDevice","ButtonRequestSignTx","ButtonRequestSuccess","ButtonRequestType","ButtonRequestUnknownDerivationPath","ButtonRequestWarning","ButtonRequestWipeDevice","DeprecatedButtonRequestPassphraseType","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","FailureActionCancelled","FailureButtonExpected","FailureDataError","FailureFirmwareError","FailureInvalidSession","FailureInvalidSignature","FailureNotEnoughFunds","FailureNotInitialized","FailurePinCancelled","FailurePinExpected","FailurePinInvalid","FailurePinMismatch","FailureProcessError","FailureType","FailureUnexpectedMessage","FailureWipeCodeMismatch","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","Current","NewFirst","NewSecond","PinMatrixRequestType","WipeCodeFirst","WipeCodeSecond","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","DebugLinkDecision","DebugLinkEraseSdCard","DebugLinkFlashErase","DebugLinkGetState","DebugLinkLayout","DebugLinkLog","DebugLinkMemory","DebugLinkMemoryRead","DebugLinkMemoryWrite","DebugLinkRecordScreen","DebugLinkReseedRandom","DebugLinkState","DebugLinkStop","DebugLinkWatchLayout","address","address","address","address","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bucket","bucket","button","button","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","debug_link_decision","default","default","default","default","default","default","default","default","default","default","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","flash","flash","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hold_ms","hold_ms","input","input","into","into","into","into","into","into","into","into","into","into","into","into","into","into","layout","layout","layout_lines","length","length","level","level","lines","matrix","matrix","memory","memory","memory","memory","mnemonic_secret","mnemonic_secret","mnemonic_type","mnemonic_type","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","node","passphrase_protection","passphrase_protection","pin","pin","recovery_fake_word","recovery_fake_word","recovery_word_pos","recovery_word_pos","reset_entropy","reset_entropy","reset_word","reset_word","reset_word_pos","reset_word_pos","sector","sector","set_button","set_mnemonic_type","set_swipe","swipe","swipe","target_directory","target_directory","text","text","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","wait","wait","wait_layout","wait_layout","wait_word_list","wait_word_list","wait_word_pos","wait_word_pos","watch","watch","x","x","y","y","DebugButton","DebugSwipeDirection","Down","Info","Left","No","Right","Up","Yes","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","default","eq","eq","fmt","fmt","from","from","from_i32","from_i32","hash","hash","into","into","is_valid","is_valid","partial_cmp","partial_cmp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","EthereumAddress","EthereumGetAddress","EthereumGetPublicKey","EthereumMessageSignature","EthereumPublicKey","EthereumSignMessage","EthereumSignTx","EthereumSignTxEip1559","EthereumSignTypedHash","EthereumTxAck","EthereumTxRequest","EthereumTypedDataSignature","EthereumVerifyMessage","access_list","address","address","address","address","address","address_n","address_n","address_n","address_n","address_n","address_n","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_id","chain_id","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data_chunk","data_initial_chunk","data_initial_chunk","data_initial_chunk","data_initial_chunk","data_length","data_length","data_length","data_length","data_length","default","default","default","default","default","default","default","default","default","default","default","default","default","domain_separator_hash","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","ethereum_sign_tx_eip1559","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","gas_limit","gas_limit","gas_price","into","into","into","into","into","into","into","into","into","into","into","into","into","max_gas_fee","max_priority_fee","message","message","message_hash","message_hash","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","node","nonce","nonce","nonce","old_address","old_address","show_display","show_display","show_display","show_display","signature","signature","signature","signature_r","signature_r","signature_s","signature_s","signature_v","signature_v","to","to","to","to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_type","tx_type","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","value","xpub","EthereumAccessList","address","borrow","borrow_mut","clear","clone","clone_into","default","encoded_len","eq","fmt","from","into","ne","storage_keys","to_owned","try_from","try_into","type_id","EthereumSignTypedData","EthereumTypedDataStructAck","EthereumTypedDataStructRequest","EthereumTypedDataValueAck","EthereumTypedDataValueRequest","address_n","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","ethereum_typed_data_struct_ack","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","member_path","members","metamask_v4_compat","metamask_v4_compat","name","ne","ne","ne","ne","ne","primary_type","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","value","Address","Array","Bool","Bytes","EthereumDataType","EthereumFieldType","EthereumStructMember","Int","String","Struct","Uint","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","cmp","data_type","data_type","default","default","default","encoded_len","encoded_len","entry_type","eq","eq","eq","fmt","fmt","fmt","from","from","from","from_i32","hash","into","into","into","is_valid","name","ne","ne","partial_cmp","set_data_type","size","size","struct_name","struct_name","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type","type_id","type_id","type_id","ApplyFlags","ApplySettings","BackupDevice","BackupType","Bip39","Cancel","CancelAuthorization","ChangePin","ChangeWipeCode","DoPreauthorized","EndSession","Entropy","EntropyAck","EntropyRequest","Features","FirmwareChunk","FirmwareChunkAck","FirmwareHash","GetEntropy","GetFeatures","GetFirmware","GetFirmwareHash","GetNextU2fCounter","GetNonce","Initialize","LoadDevice","LockDevice","NextU2fCounter","Nonce","Ping","PreauthorizedRequest","PromptAlways","PromptTemporarily","RebootToBootloader","RecoveryDevice","ResetDevice","SafetyCheckLevel","SdProtect","SetU2fCounter","Slip39Advanced","Slip39Basic","Strict","WipeDevice","WordAck","WordRequest","auto_lock_delay_ms","auto_lock_delay_ms","auto_lock_delay_ms","auto_lock_delay_ms","backup_type","backup_type","backup_type","backup_type","bootloader_hash","bootloader_hash","bootloader_mode","bootloader_mode","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button_protection","button_protection","capabilities","capabilities","challenge","challenge","chunk","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","derive_cardano","derive_cardano","device_id","device_id","display_random","display_random","display_rotation","display_rotation","display_rotation","display_rotation","dry_run","dry_run","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","enforce_wordlist","enforce_wordlist","entropy","entropy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","experimental_features","experimental_features","experimental_features","experimental_features","features","firmware_present","firmware_present","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_i32","from_i32","fw_major","fw_major","fw_minor","fw_minor","fw_patch","fw_patch","fw_vendor","fw_vendor","hash","hash","hash","homescreen","homescreen","imported","imported","initialized","initialized","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_valid","is_valid","label","label","label","label","label","label","label","label","label","label","language","language","language","language","language","language","language","language","language","language","major_version","message","message","minor_version","mnemonics","model","model","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","needs_backup","needs_backup","needs_backup","needs_backup","no_backup","no_backup","no_backup","no_backup","no_backup","no_backup","nonce","operation","operation","partial_cmp","partial_cmp","passphrase_always_on_device","passphrase_always_on_device","passphrase_always_on_device","passphrase_always_on_device","passphrase_cached","passphrase_cached","passphrase_protection","passphrase_protection","passphrase_protection","passphrase_protection","passphrase_protection","passphrase_protection","passphrase_protection","passphrase_protection","passphrase_source","passphrase_source","patch_version","pin","pin","pin_protection","pin_protection","pin_protection","pin_protection","pin_protection","pin_protection","push_capabilities","recovery_device","recovery_mode","recovery_mode","remove","remove","remove","remove","revision","revision","safety_checks","safety_checks","safety_checks","safety_checks","sd_card_present","sd_card_present","sd_protect","sd_protection","sd_protection","session_id","session_id","session_id","session_id","set_backup_type","set_backup_type","set_operation","set_safety_checks","set_safety_checks","set_type","set_type","size","skip_backup","skip_backup","skip_checksum","skip_checksum","skip_passphrase","skip_passphrase","strength","strength","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type","type","type","type","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u2f_counter","u2f_counter","u2f_counter","u2f_counter","u2f_counter","u2f_counter","u2f_counter","u2f_counter","unfinished_backup","unfinished_backup","unlocked","unlocked","use_passphrase","use_passphrase","vendor","vendor","wipe_code_protection","wipe_code_protection","word","word_count","word_count","word_request","Binance","Bitcoin","BitcoinLike","Capability","Cardano","Crypto","Eos","Ethereum","Lisk","Monero","Nem","PassphraseEntry","Ripple","Shamir","ShamirGroups","Stellar","Tezos","U2f","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","Matrix","RecoveryDeviceType","ScrambledWords","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","Disable","Enable","Refresh","SdProtectOperationType","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","Matrix6","Matrix9","Plain","WordRequestType","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","DebugMoneroDiagAck","DebugMoneroDiagRequest","Fakechain","Mainnet","MoneroAddress","MoneroGetAddress","MoneroGetTxKeyAck","MoneroGetTxKeyRequest","MoneroGetWatchKey","MoneroKeyImageExportInitAck","MoneroKeyImageExportInitRequest","MoneroKeyImageSyncFinalAck","MoneroKeyImageSyncFinalRequest","MoneroKeyImageSyncStepAck","MoneroKeyImageSyncStepRequest","MoneroLiveRefreshFinalAck","MoneroLiveRefreshFinalRequest","MoneroLiveRefreshStartAck","MoneroLiveRefreshStartRequest","MoneroLiveRefreshStepAck","MoneroLiveRefreshStepRequest","MoneroNetworkType","MoneroTransactionAllInputsSetAck","MoneroTransactionAllInputsSetRequest","MoneroTransactionAllOutSetAck","MoneroTransactionAllOutSetRequest","MoneroTransactionDestinationEntry","MoneroTransactionFinalAck","MoneroTransactionFinalRequest","MoneroTransactionInitAck","MoneroTransactionInitRequest","MoneroTransactionInputViniAck","MoneroTransactionInputViniRequest","MoneroTransactionRsigData","MoneroTransactionSetInputAck","MoneroTransactionSetInputRequest","MoneroTransactionSetOutputAck","MoneroTransactionSetOutputRequest","MoneroTransactionSignInputAck","MoneroTransactionSignInputRequest","MoneroTransactionSourceEntry","MoneroWatchKey","Stagenet","Testnet","account","account","addr","address","address","address","address","address_n","address_n","address_n","address_n","address_n","address_n","amount","amount","amount","amount","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bp_version","bp_version","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cout_key","cout_key","data1","data1","data1","data1","data2","data2","data2","data2","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","dst_entr","dst_entr_hmac","dst_entr_hmac","ecdh_info","ecdh_info","enc_key","enc_key","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extra","extra","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_i32","full_message_hash","full_message_hash","grouping","hash","hash","hmacs","ins","ins","ins","ins","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_integrated","is_integrated","is_offloaded_bp","is_offloaded_bp","is_subaddress","is_subaddress","is_valid","key_image","key_image","kis","mask","mask","mask","mask","minor","minor","monero_key_image_export_init_request","monero_key_image_sync_step_ack","monero_key_image_sync_step_request","monero_transaction_all_out_set_ack","monero_transaction_destination_entry","monero_transaction_init_request","monero_transaction_source_entry","multisig_k_l_rki","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","network_type","network_type","network_type","network_type","network_type","network_type","network_type","network_type","network_type","network_type","network_type","network_type","num","offload_type","offload_type","opening_key","opening_key","orig_idx","orig_idx","orig_idx","orig_idx","original","original","out_key","out_pk","out_pk","outputs","p1","p1","p1","p1","p2","p2","p2","p2","partial_cmp","payment_id","payment_id","pd","pd","pseudo_out","pseudo_out","pseudo_out","pseudo_out","pseudo_out","pseudo_out","pseudo_out","pseudo_out","pseudo_out_alpha","pseudo_out_alpha","pseudo_out_alpha","pseudo_out_alpha","pseudo_out_hmac","pseudo_out_hmac","pseudo_out_hmac","pseudo_out_hmac","pseudo_out_hmac","pseudo_out_hmac","rand_mult","rand_mult","rct","rct","real_out_additional_tx_keys","real_out_idx","real_out_tx_key","real_out_tx_key","real_output","real_output","real_output_in_tx_index","real_output_in_tx_index","reason","reason","recv_deriv","rsig","rsig","rsig_data","rsig_data","rsig_data","rsig_data","rsig_data","rsig_parts","rsig_type","rsig_type","rv","salt","salt","salt","salt","salt","salt","salt1","salt2","set_network_type","set_network_type","set_network_type","set_network_type","set_network_type","set_network_type","show_display","show_display","signature","signature","spend_key","spend_key","spend_key","spend_key","src_entr","src_entr","src_entr","sub_addr_major","sub_addr_minor","subaddr_minor","subaddr_minor","subs","tdis","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tsx_data","tx_derivations","tx_derivations","tx_enc_keys","tx_enc_keys","tx_enc_keys","tx_keys","tx_keys","tx_out","tx_out","tx_prefix_hash","tx_prefix_hash","tx_prefix_hash","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","version","view_public_key","view_public_key","vini","vini","vini","vini","vini","vini","vini_hmac","vini_hmac","vini_hmac","vini_hmac","vini_hmac","vini_hmac","vouti_hmac","vouti_hmac","watch_key","watch_key","MoneroSubAddressIndicesList","account","borrow","borrow_mut","clear","clone","clone_into","default","encoded_len","eq","fmt","from","into","minor_indices","ne","to_owned","try_from","try_into","type_id","MoneroExportedKeyImage","blob","blob","borrow","borrow_mut","clear","clone","clone_into","default","encoded_len","eq","fmt","from","into","iv","iv","ne","to_owned","try_from","try_into","type_id","MoneroTransferDetails","additional_tx_pub_keys","borrow","borrow_mut","clear","clone","clone_into","default","encoded_len","eq","fmt","from","internal_output_index","into","ne","out_key","sub_addr_major","sub_addr_major","sub_addr_minor","sub_addr_minor","to_owned","try_from","try_into","tx_pub_key","type_id","MoneroRingCtSig","borrow","borrow_mut","clear","clone","clone_into","default","encoded_len","eq","fmt","from","into","message","message","ne","rv_type","rv_type","to_owned","try_from","try_into","txn_fee","txn_fee","type_id","MoneroAccountPublicAddress","borrow","borrow_mut","clear","clone","clone_into","default","encoded_len","eq","fmt","from","into","ne","spend_public_key","spend_public_key","to_owned","try_from","try_into","type_id","view_public_key","view_public_key","MoneroTransactionData","account","account","borrow","borrow_mut","change_dts","clear","client_version","client_version","clone","clone_into","default","encoded_len","eq","fee","fee","fmt","from","hard_fork","hard_fork","integrated_indices","into","minor_indices","mixin","mixin","monero_version","monero_version","ne","num_inputs","num_inputs","outputs","payment_id","payment_id","rsig_data","to_owned","try_from","try_into","type_id","unlock_time","unlock_time","version","version","MoneroMultisigKlRki","MoneroOutputEntry","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","default","default","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","idx","idx","into","into","k","k","key","ki","ki","l","l","monero_output_entry","ne","ne","r","r","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","MoneroRctKeyPublic","borrow","borrow_mut","clear","clone","clone_into","commitment","default","dest","encoded_len","eq","fmt","from","into","ne","to_owned","try_from","try_into","type_id","NemAddress","NemDecryptMessage","NemDecryptedMessage","NemGetAddress","NemSignTx","NemSignedTx","address","address_n","address_n","aggregate_modification","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cosigning","cosigning","data","default","default","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","importance_transfer","into","into","into","into","into","into","mosaic_creation","multisig","ne","ne","ne","ne","ne","ne","nem_sign_tx","network","network","network","network","payload","payload","payload","provision_namespace","public_key","public_key","show_display","show_display","signature","supply_change","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transaction","transfer","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","NemAggregateModification","NemImportanceTransfer","NemMosaicCreation","NemMosaicSupplyChange","NemProvisionNamespace","NemTransactionCommon","NemTransfer","address_n","amount","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deadline","default","default","default","default","default","default","default","definition","delta","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","fee","fee","fee","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","mode","mode","modifications","mosaic","mosaics","namespace","namespace","ne","ne","ne","ne","ne","ne","ne","nem_aggregate_modification","nem_importance_transfer","nem_mosaic_creation","nem_mosaic_supply_change","nem_transfer","network","network","parent","parent","payload","payload","public_key","public_key","public_key","recipient","relative_change","relative_change","set_mode","set_type","signer","signer","sink","sink","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type","type","type_id","type_id","type_id","type_id","type_id","type_id","type_id","NemCosignatoryModification","borrow","borrow_mut","clear","clone","clone_into","default","encoded_len","eq","fmt","from","into","ne","nem_cosignatory_modification","public_key","set_type","to_owned","try_from","try_into","type","type","type_id","CosignatoryModificationAdd","CosignatoryModificationDelete","NemModificationType","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","ImportanceTransferActivate","ImportanceTransferDeactivate","NemImportanceTransferMode","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","NemMosaicDefinition","borrow","borrow_mut","clear","clone","clone_into","default","description","divisibility","divisibility","encoded_len","eq","fee","fee","fmt","from","into","levy","levy","levy_address","levy_address","levy_mosaic","levy_mosaic","levy_namespace","levy_namespace","mosaic","mutable_supply","mutable_supply","name","name","namespace","ne","nem_mosaic_definition","networks","set_levy","supply","supply","ticker","ticker","to_owned","transferable","transferable","try_from","try_into","type_id","MosaicLevyAbsolute","MosaicLevyPercentile","NemMosaicLevy","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","NemSupplyChangeType","SupplyChangeDecrease","SupplyChangeIncrease","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","NemMosaic","borrow","borrow_mut","clear","clone","clone_into","default","encoded_len","eq","fmt","from","into","mosaic","namespace","ne","quantity","to_owned","try_from","try_into","type_id","RippleAddress","RippleGetAddress","RippleSignTx","RippleSignedTx","address","address_n","address_n","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","fee","flags","flags","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","last_ledger_sequence","last_ledger_sequence","ne","ne","ne","ne","payment","ripple_sign_tx","sequence","serialized_tx","show_display","show_display","signature","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","RipplePayment","amount","borrow","borrow_mut","clear","clone","clone_into","default","destination","destination_tag","destination_tag","encoded_len","eq","fmt","from","into","ne","to_owned","try_from","try_into","type_id","Alphanum12","Alphanum4","Native","StellarAccountMergeOp","StellarAddress","StellarAllowTrustOp","StellarAsset","StellarAssetType","StellarBumpSequenceOp","StellarChangeTrustOp","StellarCreateAccountOp","StellarCreatePassiveSellOfferOp","StellarGetAddress","StellarManageBuyOfferOp","StellarManageDataOp","StellarManageSellOfferOp","StellarPathPaymentStrictReceiveOp","StellarPathPaymentStrictSendOp","StellarPaymentOp","StellarSetOptionsOp","StellarSignTx","StellarSignedTx","StellarTxOpRequest","address","address_n","address_n","amount","amount","amount","amount","asset","asset","asset_code","asset_code","asset_type","asset_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump_to","buying_asset","buying_asset","buying_asset","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear_flags","clear_flags","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","code","code","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","destination_account","destination_account","destination_account","destination_account","destination_amount","destination_asset","destination_asset","destination_min","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fee","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_i32","hash","high_threshold","high_threshold","home_domain","home_domain","inflation_destination_account","inflation_destination_account","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_authorized","is_valid","issuer","issuer","key","limit","low_threshold","low_threshold","master_weight","master_weight","medium_threshold","medium_threshold","memo_hash","memo_hash","memo_id","memo_id","memo_text","memo_text","memo_type","memo_type","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","network_passphrase","new_account","num_operations","offer_id","offer_id","partial_cmp","paths","paths","price_d","price_d","price_d","price_n","price_n","price_n","public_key","selling_asset","selling_asset","selling_asset","send_amount","send_asset","send_asset","send_max","sequence_number","set_asset_type","set_flags","set_flags","set_memo_type","set_signer_type","set_type","show_display","show_display","signature","signer_key","signer_key","signer_type","signer_type","signer_weight","signer_weight","source_account","source_account","source_account","source_account","source_account","source_account","source_account","source_account","source_account","source_account","source_account","source_account","source_account","source_account","source_account","source_account","source_account","source_account","source_account","source_account","source_account","source_account","source_account","source_account","source_account","source_account","source_account","starting_balance","stellar_set_options_op","stellar_sign_tx","timebounds_end","timebounds_start","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","trusted_account","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type","type","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","Account","Hash","PreAuth","StellarSignerType","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","Hash","Id","None","Return","StellarMemoType","Text","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","TezosAddress","TezosGetAddress","TezosGetPublicKey","TezosPublicKey","TezosSignTx","TezosSignedTx","address","address_n","address_n","address_n","ballot","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","delegation","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","ne","ne","ne","ne","ne","ne","operation_hash","origination","proposal","public_key","reveal","show_display","show_display","show_display","show_display","sig_op_contents","signature","tezos_sign_tx","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","TezosBallotOp","TezosContractId","TezosDelegationOp","TezosOriginationOp","TezosProposalOp","TezosRevealOp","TezosTransactionOp","amount","balance","ballot","ballot","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","counter","counter","counter","counter","default","default","default","default","default","default","default","delegatable","delegatable","delegate","delegate","delegate","destination","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","fee","fee","fee","fee","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","gas_limit","gas_limit","gas_limit","gas_limit","hash","into","into","into","into","into","into","into","manager_pubkey","manager_pubkey","ne","ne","ne","ne","ne","ne","ne","parameters","parameters","parameters_manager","period","period","proposal","proposals","public_key","script","set_ballot","set_tag","source","source","source","source","source","source","spendable","spendable","storage_limit","storage_limit","storage_limit","storage_limit","tag","tag","tezos_ballot_op","tezos_contract_id","tezos_transaction_op","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Nay","Pass","TezosBallotType","Yay","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","Implicit","Originated","TezosContractType","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","TezosParametersManager","borrow","borrow_mut","cancel_delegate","cancel_delegate","clear","clone","clone_into","default","encoded_len","eq","fmt","from","into","ne","set_delegate","set_delegate","tezos_parameters_manager","to_owned","transfer","try_from","try_into","type_id","TezosManagerTransfer","amount","borrow","borrow_mut","clear","clone","clone_into","default","destination","encoded_len","eq","fmt","from","into","ne","to_owned","try_from","try_into","type_id","WebAuthnAddResidentCredential","WebAuthnCredentials","WebAuthnListResidentCredentials","WebAuthnRemoveResidentCredential","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","credential_id","credential_id","credentials","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","index","index","into","into","into","into","ne","ne","ne","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","web_authn_credentials","WebAuthnCredential","algorithm","algorithm","borrow","borrow_mut","clear","clone","clone_into","creation_time","creation_time","curve","curve","default","encoded_len","eq","fmt","from","hmac_secret","hmac_secret","id","id","index","index","into","ne","rp_id","rp_id","rp_name","rp_name","to_owned","try_from","try_into","type_id","use_sign_count","use_sign_count","user_display_name","user_display_name","user_id","user_id","user_name","user_name"],"q":["trezor_protostrezor_protos::bitcointrezor_protos::bitcoin::multisig_redeem_script_type","","","","","","","","","","","","","","","","","","","trezor_protos::bitcoin::tx_ack","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trezor_protos::bitcoin::tx_ack::transaction_type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trezor_protos::bitcoin::tx_ack_input","","","","","","","","","","","","","","","","","","trezor_protos::bitcoin::tx_ack_output","","","","","","","","","","","","","","","","","","trezor_protos::bitcoin::tx_ack_payment_request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trezor_protos::bitcoin::tx_ack_prev_extra_data","","","","","","","","","","","","","","","","","","trezor_protos::bitcoin::tx_ack_prev_input","","","","","","","","","","","","","","","","","","trezor_protos::bitcoin::tx_ack_prev_output","","","","","","","","","","","","","","","","","","trezor_protos::bitcoin::tx_request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trezor_protos::bootloader","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trezor_protos::cardanotrezor_protos::common","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trezor_protos::common::button_request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trezor_protos::common::failure","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trezor_protos::common::pin_matrix_request","","","","","","","","","","","","","","","","","","","","","","","","trezor_protos::debug","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trezor_protos::debug::debug_link_decision","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trezor_protos::ethereumtrezor_protos::ethereum::ethereum_sign_tx_eip1559","","","","","","","","","","","","","","","","","","","trezor_protos::ethereum_eip712","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trezor_protos::ethereum_eip712::ethereum_typed_data_struct_ack","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trezor_protos::managementtrezor_protos::management::features","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trezor_protos::management::recovery_device","","","","","","","","","","","","","","","","","","","","","trezor_protos::management::sd_protect","","","","","","","","","","","","","","","","","","","","","","trezor_protos::management::word_request","","","","","","","","","","","","","","","","","","","","","","trezor_protos::monerotrezor_protos::monero::monero_key_image_export_init_request","","","","","","","","","","","","","","","","","","","trezor_protos::monero::monero_key_image_sync_step_ack","","","","","","","","","","","","","","","","","","","","","trezor_protos::monero::monero_key_image_sync_step_request","","","","","","","","","","","","","","","","","","","","","","","","","trezor_protos::monero::monero_transaction_all_out_set_ack","","","","","","","","","","","","","","","","","","","","","","","trezor_protos::monero::monero_transaction_destination_entry","","","","","","","","","","","","","","","","","","","","","trezor_protos::monero::monero_transaction_init_request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trezor_protos::monero::monero_transaction_source_entry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trezor_protos::monero::monero_transaction_source_entry::monero_output_entry","","","","","","","","","","","","","","","","","","","trezor_protos::nem","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trezor_protos::nem::nem_sign_tx","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trezor_protos::nem::nem_sign_tx::nem_aggregate_modification","","","","","","","","","","","","","","","","","","","","","","trezor_protos::nem::nem_sign_tx::nem_aggregate_modification::nem_cosignatory_modification","","","","","","","","","","","","","","","","","","","","","trezor_protos::nem::nem_sign_tx::nem_importance_transfer","","","","","","","","","","","","","","","","","","","","","trezor_protos::nem::nem_sign_tx::nem_mosaic_creation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trezor_protos::nem::nem_sign_tx::nem_mosaic_creation::nem_mosaic_definition","","","","","","","","","","","","","","","","","","","","","trezor_protos::nem::nem_sign_tx::nem_mosaic_supply_change","","","","","","","","","","","","","","","","","","","","","trezor_protos::nem::nem_sign_tx::nem_transfer","","","","","","","","","","","","","","","","","","","","trezor_protos::ripple","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trezor_protos::ripple::ripple_sign_tx","","","","","","","","","","","","","","","","","","","","","trezor_protos::stellar","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trezor_protos::stellar::stellar_set_options_op","","","","","","","","","","","","","","","","","","","","","","trezor_protos::stellar::stellar_sign_tx","","","","","","","","","","","","","","","","","","","","","","","","trezor_protos::tezos","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trezor_protos::tezos::tezos_sign_txtrezor_protos::tezos::tezos_sign_tx::tezos_ballot_op","","","","","","","","","","","","","","","","","","","","","","trezor_protos::tezos::tezos_sign_tx::tezos_contract_id","","","","","","","","","","","","","","","","","","","","","trezor_protos::tezos::tezos_sign_tx::tezos_transaction_op","","","","","","","","","","","","","","","","","","","","","","","trezor_protos::tezos::tezos_sign_tx::tezos_transaction_op::tezos_parameters_manager","","","","","","","","","","","","","","","","","","","trezor_protos::webauthn","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trezor_protos::webauthn::web_authn_credentials","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","Binance","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Crypto","","","","","","Debug","","","","","","","","","","","","","","","","","Deprecated messages, kept for protobuf compatibility. Both …","","","","","","","EOS","","","","","","","","Ethereum","","","","","","","","","","","","","","","","","","","","Bootloader","","","","","","","","","","","","","","Bitcoin","Management","","","","","","Mapping between Trezor wire identifier (uint) and a …","","","","","","","","","","","","","","","","","","","","","","","","","Monero","","","","","","","","","","","","","NEM","","","","","","","","","","","","","","","","","","Ripple","","","","","","","","","","","","","","","","","","","omitted: StellarInflationOp is not a supported operation, …","","","","","","Stellar","","","","","Tezos","","","","","This trait extends the protobuf Message trait to also have …","","","","","","","WebAuthn","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>MessageType</code>, or <code>None</code> if <code>value</code> is not …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>MessageType</code>.","","","","","","","","","","","","","Response: Contains address derived from device private seed","Unit to be used when showing amounts on the display","Request: Ask device to prompt the user to authorize a …","BTC","Type of script which will be used for decred stake …","reserved for external inputs (coinjoin)","Request: Ask device for address corresponding to address_n …","Request: Ask device for ownership identifier corresponding …","Request: Ask device for a proof of ownership corresponding …","Request: Ask device for public key corresponding to …","Type of script which will be used for transaction input","Response: Signed message @end","uBTC","mBTC","Type of redeem script used in input @embed","Type of script which will be used for transaction output","Response: Contains the ownership identifier for the …","Response: Contains the proof of ownership @end","used for all addresses (bitcoin, p2sh, witness)","only for change output","op_return","only for change output","p2sh address (deprecated; use PAYTOADDRESS)","only for change output","only for change output","Data type for inputs of previous transactions.When adding …","Data type for outputs of previous transactions. @embed","Data type for metadata about previous transaction which …","Response: Contains public key derived from device private …","sat","Request: Ask device to sign message @start @next …","Request: Ask device to sign transaction @start @next …","standard P2PKH address","P2SH multisig address","SegWit over P2SH (backward compatible)","Taproot","native SegWit","","","Request: Reported transaction data (legacy)","Request: Data about input to be signed. Wire-alias of …","Request: Data about output to be signed. Wire-alias of …","Data type of a payment request for a set of outputs. @next …","Request: Content of the extra data of a previous …","Request: Data about previous transaction input Wire-alias …","Request: Data about previous transaction metadata …","Request: Data about previous transaction output Wire-alias …","Data type for transaction input to be signed.When adding …","Data type for transaction output to be signed. @embed","Response: Device asks for information for signing …","Request: Ask device to verify message @start @next Success …","Returns the value of <code>address</code>, or the default value if …","Coin address in Base58 encoding","address used to sign the message","address to verify","destination address in Base58 encoding; script_type must …","use only field 1 or fields 4+5, if fields 4+5 are used, …","BIP-32 path to derive the key from master node","BIP-32 path to derive the key from master node","BIP-32 path to derive the key from master node","BIP-32 path to derive the key from master node","BIP-32 path to derive the key from master node","BIP-32 path to derive the destination (used for change …","BIP-32 path to derive the key from master node","prefix of the BIP-32 path leading to the account (m / …","Returns the value of <code>amount</code>, or the default value if <code>amount</code>…","amount of previous transaction output","amount to spend in satoshis","amount sent to this output","the sum of the external output amounts requested, required …","Returns the enum value of <code>amount_unit</code>, or the default if …","Returns the enum value of <code>amount_unit</code>, or the default if …","show amounts in","show amounts in","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>branch_id</code>, or the default value if …","Returns the value of <code>branch_id</code>, or the default value if …","only for Zcash, BRANCH_ID","only for Zcash, BRANCH_ID","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>coin_name</code>, or the default value if …","Returns the value of <code>coin_name</code>, or the default value if …","Returns the value of <code>coin_name</code>, or the default value if …","Returns the value of <code>coin_name</code>, or the default value if …","Returns the value of <code>coin_name</code>, or the default value if …","Returns the value of <code>coin_name</code>, or the default value if …","Returns the value of <code>coin_name</code>, or the default value if …","Returns the value of <code>coin_name</code>, or the default value if …","coin to use for verifying","coin to use","coin to use","coin to use for signing","coin to use for verifying","coin to use","coin to use","coin to use","Returns the value of <code>commitment_data</code>, or the default value …","Returns the value of <code>commitment_data</code>, or the default value …","optional commitment data for the SLIP-0019 proof of …","additional data to which the proof should commit","coordinator identifier to approve as a prefix in …","Returns the value of <code>decred_script_version</code>, or the default …","only for Decred","Returns the enum value of <code>decred_staking_spend</code>, or the …","if not None this holds the type of stake spend: revocation …","Returns the value of <code>decred_staking_ticket</code>, or the default …","only for Decred, this is signing a ticket purchase","Returns the value of <code>decred_tree</code>, or the default value if …","Returns the value of <code>decred_tree</code>, or the default value if …","only for Decred, 0 is a normal transaction while 1 is a …","only for Decred","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","request for tx details","Returns the value of <code>ecdsa_curve_name</code>, or the default …","ECDSA curve name to use","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>expiry</code>, or the default value if <code>expiry</code>…","Returns the value of <code>expiry</code>, or the default value if <code>expiry</code>…","only for Decred and Zcash","only for Decred and Zcash","Returns the value of <code>extra_data_len</code>, or the default value …","only for Dash, Zcash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>InputScriptType</code>, or <code>None</code> if <code>value</code> is …","Converts an <code>i32</code> to a <code>OutputScriptType</code>, or <code>None</code> if <code>value</code> is …","Converts an <code>i32</code> to a <code>DecredStakingSpendType</code>, or <code>None</code> if …","Converts an <code>i32</code> to a <code>AmountUnit</code>, or <code>None</code> if <code>value</code> is not a …","","","","","Returns the value of <code>ignore_xpub_magic</code>, or the default …","Returns the value of <code>ignore_xpub_magic</code>, or the default …","ignore SLIP-0132 XPUB magic, use xpub/tpub prefix for all …","ignore SLIP-0132 XPUB magic, use xpub/tpub prefix for all …","number of transaction inputs","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>InputScriptType</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>OutputScriptType</code>.","Returns <code>true</code> if <code>value</code> is a variant of …","Returns <code>true</code> if <code>value</code> is a variant of <code>AmountUnit</code>.","Returns the value of <code>lock_time</code>, or the default value if …","transaction lock_time","","“m” from n, how many valid signatures is necessary for …","Returns the value of <code>mac</code>, or the default value if <code>mac</code> is …","Address authentication code","maximum coordination fee rate in units of 10^-8 percent","maximum mining fee rate in units of satoshis per 1000 …","maximum number of rounds that Trezor is authorized to take …","any memos that were signed as part of the request","message to be signed","message to verify","filled if we are showing a multisig address","filled if we are dealing with a multisig scriptPubKey","Filled if input is going to spend multisig tx","defines multisig address; script_type must be PAYTOMULTISIG","filled if proof is for a multisig address","Nested message and enum types in <code>MultisigRedeemScriptType</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>no_script_type</code>, or the default value …","don’t include script type information in the recovery …","BIP32 public node","simplified way how to specify pubkeys if they share the …","Returns the value of <code>nonce</code>, or the default value if <code>nonce</code> …","the nonce used in the signature computation","Returns the value of <code>op_return_data</code>, or the default value …","defines op_return data; script_type must be PAYTOOPRETURN, …","Returns the value of <code>orig_hash</code>, or the default value if …","Returns the value of <code>orig_hash</code>, or the default value if …","tx_hash of the original transaction where this input was …","tx_hash of the original transaction where this output was …","Returns the value of <code>orig_index</code>, or the default value if …","Returns the value of <code>orig_index</code>, or the default value if …","index of the input in the original transaction (used when …","index of the output in the original transaction (used when …","number of transaction outputs","","Returns the value of <code>overwintered</code>, or the default value if …","deprecated in 2.3.2, the field is not needed as it can be …","ownership identifier","list of ownership identifiers in case of multisig","Returns the value of <code>ownership_proof</code>, or the default value …","SLIP-0019 proof of ownership, only set for EXTERNAL inputs","SLIP-0019 proof of ownership","","","","","Returns the value of <code>payment_req_index</code>, or the default …","index of the PaymentRequest containing this output","hash of previous transaction output to spend by this input","hash of previous transaction output to spend by this input","index of previous output to spend","index of previous output to spend","pubkeys from multisig address (sorted lexicographically)","merchant’s name or coordinator’s name in case of …","Returns the enum value of <code>request_type</code>, or the default if …","what should be filled in TxAck message?","Returns the value of <code>root_fingerprint</code>, or the default …","master root node fingerprint","Returns the value of <code>script_pubkey</code>, or the default value …","scriptPubKey of the previous output spent by this input, …","scriptPubkey of this output","Returns the value of <code>script_sig</code>, or the default value if …","script signature, only set for EXTERNAL inputs","script signature","Returns the enum value of <code>script_type</code>, or the default if …","Returns the enum value of <code>script_type</code>, or the default if …","Returns the enum value of <code>script_type</code>, or the default if …","Returns the enum value of <code>script_type</code>, or the default if …","Returns the enum value of <code>script_type</code>, or the default if …","Returns the enum value of <code>script_type</code>, or the default if …","Returns the enum value of <code>script_type</code>, or the default if …","Returns the enum value of <code>script_type</code>, or the default if …","used to distinguish between various address formats …","used to distinguish between various address formats …","used to distinguish between various address formats …","used to distinguish between various address formats …","defines template of input script","output script type","used to distinguish between various scriptPubKey types","used to distinguish between various address formats …","Returns the value of <code>sequence</code>, or the default value if …","sequence","sequence","serialized data and request for next","Sets <code>amount_unit</code> to the provided enum value.","Sets <code>amount_unit</code> to the provided enum value.","Sets <code>decred_staking_spend</code> to the provided enum value.","Sets <code>request_type</code> to the provided enum value.","Sets <code>script_type</code> to the provided enum value.","Sets <code>script_type</code> to the provided enum value.","Sets <code>script_type</code> to the provided enum value.","Sets <code>script_type</code> to the provided enum value.","Sets <code>script_type</code> to the provided enum value.","Sets <code>script_type</code> to the provided enum value.","Sets <code>script_type</code> to the provided enum value.","Sets <code>script_type</code> to the provided enum value.","Returns the value of <code>show_display</code>, or the default value if …","Returns the value of <code>show_display</code>, or the default value if …","optionally show on display before sending the result","optionally show on display before sending the result","signature of the message","signature to verify","the trusted party’s signature of the paymentRequestDigest","signature of the proof","existing signatures for partially signed input","Returns the value of <code>timestamp</code>, or the default value if …","Returns the value of <code>timestamp</code>, or the default value if …","only for Peercoin","only for Peercoin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Nested message and enum types in <code>TxAck</code>.","Nested message and enum types in <code>TxAckInput</code>.","Nested message and enum types in <code>TxAckOutput</code>.","Nested message and enum types in <code>TxAckPaymentRequest</code>.","Nested message and enum types in <code>TxAckPrevExtraData</code>.","Nested message and enum types in <code>TxAckPrevInput</code>.","Nested message and enum types in <code>TxAckPrevOutput</code>.","Nested message and enum types in <code>TxRequest</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>user_confirmation</code>, or the default …","show a confirmation dialog and set the “user confirmation…","Returns the value of <code>version</code>, or the default value if …","transaction version","","Returns the value of <code>version_group_id</code>, or the default …","Returns the value of <code>version_group_id</code>, or the default …","only for Zcash, nVersionGroupId","only for Zcash, nVersionGroupId","Returns the value of <code>witness</code>, or the default value if …","witness data, only set for EXTERNAL inputs","serialized form of public node","Structure representing HDNode + Path","BIP-32 path to derive the key from node","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","BIP-32 node in deserialized form","","","","","Structure representing transaction","","","","Returns the value of <code>branch_id</code>, or the default value if …","only for Zcash, BRANCH_ID","","","","","","","Returns the value of <code>expiry</code>, or the default value if <code>expiry</code>…","only for Decred and Zcash","Returns the value of <code>extra_data</code>, or the default value if …","only for Dash, Zcash","Returns the value of <code>extra_data_len</code>, or the default value …","only for Dash, Zcash","","Returns the argument unchanged.","","Returns the value of <code>inputs_cnt</code>, or the default value if …","","Calls <code>U::from(self)</code>.","Returns the value of <code>lock_time</code>, or the default value if …","","","","Returns the value of <code>outputs_cnt</code>, or the default value if …","","Returns the value of <code>overwintered</code>, or the default value if …","Zcash only; deprecated in 2.3.2, the field is not needed, …","Returns the value of <code>timestamp</code>, or the default value if …","only for Peercoin","","Nested message and enum types in <code>TransactionType</code>.","","","","Returns the value of <code>version</code>, or the default value if …","","Returns the value of <code>version_group_id</code>, or the default …","only for Zcash, nVersionGroupId","Structure representing transaction input","Structure representing compiled transaction output","Structure representing transaction output","Returns the value of <code>address</code>, or the default value if …","target coin address in Base58 encoding","BIP-32 path to derive the key from master node","BIP-32 path to derive the key from master node; has higher …","Returns the value of <code>amount</code>, or the default value if <code>amount</code>…","amount of previous transaction output (for segwit only)","","amount to spend in satoshis","","","","","","","","","","","","","","","","Returns the value of <code>commitment_data</code>, or the default value …","optional commitment data for the SLIP-0019 proof of …","Returns the value of <code>decred_script_version</code>, or the default …","only for Decred, currently only 0 is supported","Returns the enum value of <code>decred_staking_spend</code>, or the …","if not None this holds the type of stake spend: revocation …","Returns the value of <code>decred_tree</code>, or the default value if …","only for Decred, 0 is a normal transaction while 1 is a …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Filled if input is going to spend multisig tx","defines multisig address; script_type must be PAYTOMULTISIG","","","","Returns the value of <code>op_return_data</code>, or the default value …","defines op_return data; script_type must be PAYTOOPRETURN, …","Returns the value of <code>orig_hash</code>, or the default value if …","Returns the value of <code>orig_hash</code>, or the default value if …","tx_hash of the original transaction where this input was …","optional uint32 decred_script_version = 7;      // only …","Returns the value of <code>orig_index</code>, or the default value if …","Returns the value of <code>orig_index</code>, or the default value if …","index of the input in the original transaction (used when …","index of the output in the original transaction (used when …","Returns the value of <code>ownership_proof</code>, or the default value …","SLIP-0019 proof of ownership, only set for EXTERNAL inputs","Returns the value of <code>payment_req_index</code>, or the default …","index of the PaymentRequest containing this output","hash of previous transaction output to spend by this input","index of previous output to spend","Returns the value of <code>script_pubkey</code>, or the default value …","scriptPubKey of the previous output spent by this input, …","","Returns the value of <code>script_sig</code>, or the default value if …","script signature, unset for tx to sign","Returns the enum value of <code>script_type</code>, or the default if …","Returns the enum value of <code>script_type</code>, or the default if …","defines template of input script","output script type","Returns the value of <code>sequence</code>, or the default value if …","sequence (default=0xffffffff)","Sets <code>decred_staking_spend</code> to the provided enum value.","Sets <code>script_type</code> to the provided enum value.","Sets <code>script_type</code> to the provided enum value.","","","","","","","","","","","","","Returns the value of <code>witness</code>, or the default value if …","optional uint32 decred_script_version = 10;                …","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","the address where the payment should be refunded if …","the address where the coin purchase will be delivered","the amount the address will receive as a human-readable …","","","","","","","","","","","","","","","","","","","","","","the SLIP-0044 coin type of the address","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","the MAC returned by GetAddress","the MAC returned by GetAddress","","","","","","plain-text note explaining the purpose of the payment …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Type of information required by transaction signing process","Structure representing request details","Structure representing serialized data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>extra_data_len</code>, or the default value …","length of requested extra data (only for Dash, Zcash)","Returns the value of <code>extra_data_offset</code>, or the default …","offset of requested extra data (only for Dash, Zcash)","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>RequestType</code>, or <code>None</code> if <code>value</code> is not …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>RequestType</code>.","","","","Returns the value of <code>request_index</code>, or the default value …","device expects TxAck message from the computer","Returns the value of <code>serialized_tx</code>, or the default value …","part of serialized and signed transaction","Returns the value of <code>signature</code>, or the default value if …","signature of the signature_index input","Returns the value of <code>signature_index</code>, or the default value …","‘signature’ field contains signed input of this index","","","","","","","","","","Returns the value of <code>tx_hash</code>, or the default value if …","tx_hash of requested transaction","","","","Request: Ask device to erase its firmware (so it can be …","Response: Ask for firmware chunk @next FirmwareUpload","Request: Send firmware in binary form to the device @next …","Request: Perform a device self-test @next Success @next …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the value of <code>hash</code>, or the default value if <code>hash</code> is …","hash of the payload","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the value of <code>length</code>, or the default value if <code>length</code>…","Returns the value of <code>length</code>, or the default value if <code>length</code>…","length of new firmware","length of requested firmware chunk","","","","","Returns the value of <code>offset</code>, or the default value if <code>offset</code>…","offset of requested firmware chunk","Returns the value of <code>payload</code>, or the default value if …","firmware to be loaded into device","payload to be used in self-test","","","","","","","","","","","","","","","","","","","","","","","","","","Request: Ask device for Cardano address @end","Structure to represent address parameters so they can be …","Values correspond to address header values given by the …","Request: Transaction output asset group data @next …","Structure representing cardano PointerAddress pointer, …","@embed","","","Request: Ask device for Cardano address @start @next …","Request: Ask device for Cardano native script hash @start …","Request: Ask device for public key corresponding to …","@embed","Request: Ask device for Cardano native script hash @end","","","Stake pool metadata parameters @embed","Request: Stake pool owner parameters @next CardanoTxItemAck","Stake pool parameters @embed","Request: Stake pool relay parameters @next CardanoTxItemAck","","Response: Contains public key derived from device private …","Response: Confirm the successful completion of the signing …","Request: Initiate the Cardano transaction signing process …","Request: Transaction output asset group token data @next …","Request: Transaction auxiliary data @next CardanoTxItemAck …","Response: Device-generated supplement for the auxiliary …","","Response: Hash of the serialized transaction body @next …","Request: Transaction certificate data @next …","Request: Transaction collateral input data @next …","Request: Acknowledgement of the last response received …","Request: Transaction input data @next CardanoTxItemAck","Response: Acknowledgement of the last transaction item …","Request: Transaction mint @next CardanoTxItemAck","Request: Transaction output data @next CardanoTxItemAck","Request: Transaction required signer @next CardanoTxItemAck","","Request: Transaction withdrawal data @next CardanoTxItemAck","Request: Ask the device to sign a witness path @next …","Response: Signature corresponding to the requested witness …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>address</code>, or the default value if …","Base58 cardano address","target coin address in bech32 or base58","BIP-32-style path to derive the spending key from master …","BIP-32 path to derive the key from master node","BIP-32-style path to derive staking key from master node","parameters used to derive the address","parameters used to derive the address","Returns the enum value of <code>address_type</code>, or the default if …","one of the CardanoAddressType-s","Returns the value of <code>amount</code>, or the default value if <code>amount</code>…","amount to spend","asset amount","","","","asset name as bytestring (may be either ascii string or …","Returns the value of <code>auxiliary_data_hash</code>, or the default …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>catalyst_signature</code>, or the default …","","","can be sent directly e.g. if it doesn’t belong to the …","","Returns the value of <code>chain_code</code>, or the default value if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cost in lovelace","Returns the value of <code>datum_hash</code>, or the default value if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>derivation_type</code>, or the default …","Returns the enum value of <code>derivation_type</code>, or the default …","Returns the enum value of <code>derivation_type</code>, or the default …","Returns the enum value of <code>derivation_type</code>, or the default …","","","","","Returns the enum value of <code>display_format</code>, or the default …","display hash as bech32 or policy id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","transaction fee - added in shelley","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>CardanoDerivationType</code>, or <code>None</code> if …","Converts an <code>i32</code> to a <code>CardanoAddressType</code>, or <code>None</code> if <code>value</code> …","Converts an <code>i32</code> to a <code>CardanoNativeScriptType</code>, or <code>None</code> if …","Converts an <code>i32</code> to a <code>CardanoNativeScriptHashDisplayFormat</code>, …","Converts an <code>i32</code> to a <code>CardanoCertificateType</code>, or <code>None</code> if …","Converts an <code>i32</code> to a <code>CardanoPoolRelayType</code>, or <code>None</code> if <code>value</code>…","Converts an <code>i32</code> to a <code>CardanoTxAuxiliaryDataSupplementType</code>, …","Converts an <code>i32</code> to a <code>CardanoTxSigningMode</code>, or <code>None</code> if <code>value</code>…","Converts an <code>i32</code> to a <code>CardanoTxWitnessType</code>, or <code>None</code> if <code>value</code>…","","Returns the value of <code>hash</code>, or the default value if <code>hash</code> is …","","","","","","","","","","stake pool metadata hash","","Returns the value of <code>host_name</code>, or the default value if …","relay host name given as URL, at most 64 characters","Returns the value of <code>include_network_id</code>, or the default …","network id included as tx body item","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the value of <code>invalid_before</code>, or the default value …","","Returns the value of <code>invalid_hereafter</code>, or the default …","","Returns the value of <code>ipv4_address</code>, or the default value if …","ipv4 address of the relay given as 4 bytes","Returns the value of <code>ipv6_address</code>, or the default value if …","ipv6 address of the relay given as 16 bytes","Returns <code>true</code> if <code>value</code> is a variant of <code>CardanoDerivationType</code>…","Returns <code>true</code> if <code>value</code> is a variant of <code>CardanoAddressType</code>.","Returns <code>true</code> if <code>value</code> is a variant of …","Returns <code>true</code> if <code>value</code> is a variant of …","Returns <code>true</code> if <code>value</code> is a variant of …","Returns <code>true</code> if <code>value</code> is a variant of <code>CardanoPoolRelayType</code>.","Returns <code>true</code> if <code>value</code> is a variant of …","Returns <code>true</code> if <code>value</code> is a variant of <code>CardanoTxSigningMode</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>CardanoTxWitnessType</code>.","Returns the value of <code>key_hash</code>, or the default value if …","Returns the value of <code>key_hash</code>, or the default value if …","Returns the value of <code>key_hash</code>, or the default value if …","Returns the value of <code>key_hash</code>, or the default value if …","","stake credential key hash","stake credential key hash","","","","pool margin denominator","pool margin numerator","repeated CardanoPoolOwner owners = 8;            // legacy …","Returns the value of <code>mint_amount</code>, or the default value if …","mint amount (can also be negative in which case the tokens …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","network id - mainnet or testnet","network id - mainnet or testnet","BIP-32 public node","","","number of pool owners","","","","","","","","","","stake credential key path","stake credential key path","","pledge amount in lovelace","asset group policy id","Returns the value of <code>pool</code>, or the default value if <code>pool</code> is …","pool hash","stake pool cold public key hash (28 bytes)","used for stake pool registration certificate","Returns the value of <code>port</code>, or the default value if <code>port</code> is …","relay port number in the range 0-65535","hash of previous transaction output to spend by this input","","index of previous output to spend","","network’s protocol magic - needed for Byron addresses on …","network’s protocol magic","","number of pool relays","Returns the value of <code>required_signatures_count</code>, or the …","","","bech32 reward address where the pool receives rewards","","","Returns the value of <code>script_data_hash</code>, or the default …","","Returns the value of <code>script_hash</code>, or the default value if …","Returns the value of <code>script_hash</code>, or the default value if …","","stake credential script hash","stake credential script hash","Returns the value of <code>script_payment_hash</code>, or the default …","","Returns the value of <code>script_staking_hash</code>, or the default …","","","Sets <code>address_type</code> to the provided enum value.","Sets <code>derivation_type</code> to the provided enum value.","Sets <code>derivation_type</code> to the provided enum value.","Sets <code>derivation_type</code> to the provided enum value.","Sets <code>derivation_type</code> to the provided enum value.","Sets <code>display_format</code> to the provided enum value.","Sets <code>signing_mode</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","Returns the value of <code>show_display</code>, or the default value if …","Returns the value of <code>show_display</code>, or the default value if …","repeated uint32 address_n = 1;                             …","optionally show on display before sending the result","","Returns the enum value of <code>signing_mode</code>, or the default if …","","Returns the value of <code>staking_key_hash</code>, or the default …","Returns the value of <code>staking_key_hash</code>, or the default …","staking key can be derived from address_n_staking, or","owner’s staking key if it is an external owner","BIP-32-style path to derive staking key of the owner","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>ttl</code>, or the default value if <code>ttl</code> is …","transaction ttl - added in shelley","","","Returns the enum value of <code>type</code>, or the default if the …","Returns the enum value of <code>type</code>, or the default if the …","Returns the enum value of <code>type</code>, or the default if the …","Returns the enum value of <code>type</code>, or the default if the …","Returns the enum value of <code>type</code>, or the default if the …","","pool relay type","certificate type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stake pool url hosting metadata, at most 64 characters","Returns the value of <code>validity_interval_start</code>, or the …","","","VRF key hash (32 bytes)","","","Xpub key","Request: Computer agrees to wait for HW button press …","Response: Device is waiting for HW button press. @auxstart …","Request: Send passphrase state back Deprecated in 2.3.0 …","Response: Device awaits passphrase state Deprecated in …","Response: Failure of the previous request @end","Structure representing BIP32 (hierarchical deterministic) …","Request: Send passphrase back @auxend","Response: Device awaits encryption passphrase @auxstart …","Request: Computer responds with encoded PIN @auxend","Response: Device is asking computer to show PIN matrix and …","Response: Success of the previous request @end","","","","","","","","","","","","","","","","","","","","","","","Nested message and enum types in <code>ButtonRequest</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>code</code>, or the default if the …","Returns the enum value of <code>code</code>, or the default if the …","computer-readable definition of the error state","enum identifier of the screen","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Nested message and enum types in <code>Failure</code>.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the value of <code>message</code>, or the default value if …","Returns the value of <code>message</code>, or the default value if …","human readable description of action or request-specific …","human-readable message of the error state","","","","","","","","","","Returns the value of <code>on_device</code>, or the default value if …","Returns the value of <code>on_device</code>, or the default value if …","&lt;2.3.0","user wants to enter passphrase on the device","Returns the value of <code>pages</code>, or the default value if <code>pages</code> …","if the screen is paginated, number of pages","Returns the value of <code>passphrase</code>, or the default value if …","","matrix encoded PIN entered by user","Nested message and enum types in <code>PinMatrixRequest</code>.","Returns the value of <code>private_key</code>, or the default value if …","","","Sets <code>code</code> to the provided enum value.","Sets <code>code</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","Returns the value of <code>state</code>, or the default value if <code>state</code> …","Returns the value of <code>state</code>, or the default value if <code>state</code> …","&lt;2.3.0","actual device state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>type</code>, or the default if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Type of button request","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>ButtonRequestType</code>, or <code>None</code> if <code>value</code> …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>ButtonRequestType</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>FailureType</code>, or <code>None</code> if <code>value</code> is not …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>FailureType</code>.","","","","","","","","","Type of PIN request","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>PinMatrixRequestType</code>, or <code>None</code> if <code>value</code>…","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>PinMatrixRequestType</code>.","","","","","","Request: “Press” the button on the device @start @next …","Request: Erase the SD card @start @next Success @next …","Request: Erase block of flash on device WARNING: Writing …","Request: Computer asks for device state @start @next …","Response: Device text layout @end","Response: Device wants host to log event @ignore","Response: Device sends memory back @end","Request: Read memory from device @start @next …","Request: Write memory to device. WARNING: Writing to the …","Request: Start or stop recording screen changes into given …","Request: Re-seed RNG with given value @start @next Success","Response: Device current state @end","Request: Ask device to restart @start","Request: Start or stop tracking layout changes @start …","Returns the value of <code>address</code>, or the default value if …","Returns the value of <code>address</code>, or the default value if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>bucket</code>, or the default value if <code>bucket</code>…","","Returns the enum value of <code>button</code>, or the default if the …","button press","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Nested message and enum types in <code>DebugLinkDecision</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>flash</code>, or the default value if <code>flash</code> …","","","","","","","","","","","","","","","","Returns the value of <code>format</code>, or the default value if <code>format</code>…","if true, the card will be formatted to FAT32.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the value of <code>hold_ms</code>, or the default value if …","touch hold duration","Returns the value of <code>input</code>, or the default value if <code>input</code> …","keyboard input","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the value of <code>layout</code>, or the default value if <code>layout</code>…","raw buffer of display","current layout text","Returns the value of <code>length</code>, or the default value if <code>length</code>…","","Returns the value of <code>level</code>, or the default value if <code>level</code> …","","","Returns the value of <code>matrix</code>, or the default value if <code>matrix</code>…","current PIN matrix","Returns the value of <code>memory</code>, or the default value if <code>memory</code>…","Returns the value of <code>memory</code>, or the default value if <code>memory</code>…","","","Returns the value of <code>mnemonic_secret</code>, or the default value …","current mnemonic secret","Returns the enum value of <code>mnemonic_type</code>, or the default if …","current mnemonic type (BIP-39/SLIP-39)","","","","","","","","","","","","","","current BIP-32 node","Returns the value of <code>passphrase_protection</code>, or the default …","is node/mnemonic encrypted using passphrase?","Returns the value of <code>pin</code>, or the default value if <code>pin</code> is …","current PIN, blank if PIN is not set/enabled","Returns the value of <code>recovery_fake_word</code>, or the default …","(fake) word on display during RecoveryDevice workflow","Returns the value of <code>recovery_word_pos</code>, or the default …","index of mnemonic word the device is expecting during …","Returns the value of <code>reset_entropy</code>, or the default value …","current entropy during ResetDevice workflow","Returns the value of <code>reset_word</code>, or the default value if …","word on device display during ResetDevice workflow","Returns the value of <code>reset_word_pos</code>, or the default value …","index of mnemonic word the device is expecting during …","Returns the value of <code>sector</code>, or the default value if <code>sector</code>…","","Sets <code>button</code> to the provided enum value.","Sets <code>mnemonic_type</code> to the provided enum value.","Sets <code>swipe</code> to the provided enum value.","Returns the enum value of <code>swipe</code>, or the default if the …","swipe direction","Returns the value of <code>target_directory</code>, or the default …","empty or missing to stop recording","Returns the value of <code>text</code>, or the default value if <code>text</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>value</code>, or the default value if <code>value</code> …","","Returns the value of <code>wait</code>, or the default value if <code>wait</code> is …","wait for layout change","Returns the value of <code>wait_layout</code>, or the default value if …","wait until current layout changes","Returns the value of <code>wait_word_list</code>, or the default value …","Trezor T only - wait until mnemonic words are shown","Returns the value of <code>wait_word_pos</code>, or the default value …","Trezor T only - wait until reset word position is requested","Returns the value of <code>watch</code>, or the default value if <code>watch</code> …","if true, start watching layout.","Returns the value of <code>x</code>, or the default value if <code>x</code> is unset.","touch X coordinate","Returns the value of <code>y</code>, or the default value if <code>y</code> is unset.","touch Y coordinate","Structure representing button presses","Structure representing swipe direction","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>DebugSwipeDirection</code>, or <code>None</code> if <code>value</code> …","Converts an <code>i32</code> to a <code>DebugButton</code>, or <code>None</code> if <code>value</code> is not …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>DebugSwipeDirection</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>DebugButton</code>.","","","","","","","","","","","Response: Contains an Ethereum address derived from device …","Request: Ask device for Ethereum address corresponding to …","Request: Ask device for public key corresponding to …","Response: Signed message @end","Response: Contains public key derived from device private …","Request: Ask device to sign message @start @next …","Request: Ask device to sign transaction gas_price, …","Request: Ask device to sign EIP1559 transaction Note: the …","Request: Ask device to sign hash of typed data @start …","Request: Transaction payload data. @next EthereumTxRequest","Response: Device asks for more data from transaction …","Response: Signed typed data @end","Request: Ask device to verify message @start @next Success …","Access List","Returns the value of <code>address</code>, or the default value if …","Ethereum address as hex-encoded string","address used to sign the message","address to verify","address used to sign the typed data","BIP-32 path to derive the key from master node","BIP-32 path to derive the key from master node","BIP-32 path to derive the key from master node","BIP-32 path to derive the key from master node","BIP-32 path to derive the key from master node","BIP-32 path to derive the key from master node","","","","","","","","","","","","","","","","","","","","","","","","","","","Chain Id for EIP 155","Chain Id for EIP 155","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bytes from transaction payload (&lt;= 1024 bytes)","Returns the value of <code>data_initial_chunk</code>, or the default …","Returns the value of <code>data_initial_chunk</code>, or the default …","The initial data chunk (&lt;= 1024 bytes)","The initial data chunk (&lt;= 1024 bytes)","Returns the value of <code>data_length</code>, or the default value if …","Returns the value of <code>data_length</code>, or the default value if …","Length of transaction payload","Length of transaction payload","Number of bytes being requested (&lt;= 1024)","","","","","","","","","","","","","","Hash of domainSeparator of typed data to be signed","","","","","","","","","","","","","","","","","","","","","","","","","","","Nested message and enum types in <code>EthereumSignTxEIP1559</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","&lt;=256 bit unsigned big endian","&lt;=256 bit unsigned big endian","&lt;=256 bit unsigned big endian (in wei)","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","&lt;=256 bit unsigned big endian (in wei)","&lt;=256 bit unsigned big endian (in wei)","message to be signed","message to verify","Returns the value of <code>message_hash</code>, or the default value if …","Hash of the data of typed data to be signed (empty if …","","","","","","","","","","","","","","BIP32 public node","Returns the value of <code>nonce</code>, or the default value if <code>nonce</code> …","&lt;=256 bit unsigned big endian","&lt;=256 bit unsigned big endian","Returns the value of <code>old_address</code>, or the default value if …","trezor &lt;1.8.0, &lt;2.1.0 - raw bytes of Ethereum address","Returns the value of <code>show_display</code>, or the default value if …","Returns the value of <code>show_display</code>, or the default value if …","optionally show on display before sending the result","optionally show on display before sending the result","signature of the message","signature to verify","signature of the typed data","Returns the value of <code>signature_r</code>, or the default value if …","Computed signature R component (256 bit)","Returns the value of <code>signature_s</code>, or the default value if …","Computed signature S component (256 bit)","Returns the value of <code>signature_v</code>, or the default value if …","Computed signature (recovery parameter, limited to 27 or …","Returns the value of <code>to</code>, or the default value if <code>to</code> is …","Returns the value of <code>to</code>, or the default value if <code>to</code> is …","recipient address","recipient address","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>tx_type</code>, or the default value if …","Used for Wanchain","","","","","","","","","","","","","","Returns the value of <code>value</code>, or the default value if <code>value</code> …","&lt;=256 bit unsigned big endian (in wei)","&lt;=256 bit unsigned big endian (in wei)","serialized form of public node","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Request: Ask device to sign typed data @start @next …","Request: Type information about a struct. @next …","Response: Device asks for type information about a struct. …","Request: Single value of a specific atomic field. @next …","Response: Device asks for data at the specific member path.","BIP-32 path to derive the key from master node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Nested message and enum types in <code>EthereumTypedDataStructAck</code>…","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","member path requested by device","","Returns the value of <code>metamask_v4_compat</code>, or the default …","use MetaMask v4 (see …","name of the requested struct","","","","","","name of the root message struct","","","","","","","","","","","","","","","","","","","","","atomic types: value of the member. Length must match the …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>data_type</code>, or the default if the …","","","","","","","for bytes types: size in bytes, or unset for dynamic for …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>EthereumDataType</code>, or <code>None</code> if <code>value</code> is …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>EthereumDataType</code>.","","","","","Sets <code>data_type</code> to the provided enum value.","Returns the value of <code>size</code>, or the default value if <code>size</code> is …","for integer types: size in bytes (uint8 has size 1, …","Returns the value of <code>struct_name</code>, or the default value if …","for structs: its name","","","","","","","","","","","","","","Request: set flags of the device @start @next Success …","Request: change language and/or label of the device @start …","Request: Perform backup of the device seed if not backed …","Type of the mnemonic backup given/received by the device …","also called “Single Backup”, see BIP-0039","Request: Abort last operation that required user …","Request: Cancel any outstanding authorization in the …","Request: Starts workflow for setting/changing/removing the …","Request: Starts workflow for setting/removing the wipe code","Request: Ask device to prepare for a preauthorized …","Request: end the current sesson. Following actions must …","Response: Reply with random data generated by internal RNG …","Request: Provide additional entropy for seed generation …","Response: Ask for additional entropy from host computer …","Response: Reports various information about the device @end","Response: firmware chunk. @next FirmwareChunkAck","Request: acknowledge firmware chunk. @next FirmwareChunk …","Response: Hash of the installed firmware combined with the …","Request: Request a sample of random data generated by …","Request: Ask for device details (no device reset) @start …","Request: get firmware image. The firmware will send all …","Request: Get a hash of the installed firmware combined …","Request: Set U2F counter @start @next NextU2FCounter","Request: Ask device to generate a random nonce and store …","Request: Reset device to default state and ask for device …","Request: Load seed and related internal settings from the …","Request: soft-lock the device. Following actions will …","Request: Set U2F counter @end","Response: Contains a random nonce @end","Request: Test if the device is alive, device sends back …","Request: Device awaits a preauthorized operation. @start …","ask user before unsafe action","like PromptAlways but reverts to Strict after reboot","Request: Reboot firmware to bootloader @start @next Success","Request: Start recovery workflow asking user for specific …","Request: Ask device to do initialization involving user …","Level of safety checks for unsafe actions like spending …","Request: Starts workflow for …","Request: Set U2F counter @start @next Success","also called “Super Shamir” or “Shamir with Groups”…","also called “Shamir Backup”, see SLIP-0039","disallow unsafe actions, this is the default","Request: Request device to wipe all sensitive data and …","Request: Computer replies with word from the mnemonic …","Response: Device is waiting for user to enter word of the …","Returns the value of <code>auto_lock_delay_ms</code>, or the default …","Returns the value of <code>auto_lock_delay_ms</code>, or the default …","number of milliseconds after which the device locks itself","","Returns the enum value of <code>backup_type</code>, or the default if …","Returns the enum value of <code>backup_type</code>, or the default if …","type of device backup (BIP-39 / SLIP-39 basic / SLIP-39 …","type of the mnemonic backup","Returns the value of <code>bootloader_hash</code>, or the default value …","hash of the bootloader","Returns the value of <code>bootloader_mode</code>, or the default value …","is device in bootloader mode?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>button_protection</code>, or the default …","ask for button press","Returns an iterator which yields the valid enum values …","list of supported capabilities","Returns the value of <code>challenge</code>, or the default value if …","Blake2s key up to 32 bytes in length.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>derive_cardano</code>, or the default value …","whether to derive Cardano Icarus root keys in this session","Returns the value of <code>device_id</code>, or the default value if …","device’s unique identifier","Returns the value of <code>display_random</code>, or the default value …","display entropy generated by the device before asking for …","Returns the value of <code>display_rotation</code>, or the default …","Returns the value of <code>display_rotation</code>, or the default …","in degrees from North","in degrees from North","Returns the value of <code>dry_run</code>, or the default value if …","perform dry-run recovery workflow (for safe mnemonic …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>enforce_wordlist</code>, or the default …","enforce BIP-39 wordlist during the process","chunk of random generated bytes","256 bits (32 bytes) of random data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>experimental_features</code>, or the default …","Returns the value of <code>experimental_features</code>, or the default …","are experimental message types enabled?","enable experimental message types","Nested message and enum types in <code>Features</code>.","Returns the value of <code>firmware_present</code>, or the default …","is valid firmware loaded?","Returns the value of <code>flags</code>, or the default value if <code>flags</code> …","device flags (equals to Storage.flags)","bitmask, can only set bits, not unset","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>BackupType</code>, or <code>None</code> if <code>value</code> is not a …","Converts an <code>i32</code> to a <code>SafetyCheckLevel</code>, or <code>None</code> if <code>value</code> is …","Returns the value of <code>fw_major</code>, or the default value if …","reported firmware version if in bootloader mode","Returns the value of <code>fw_minor</code>, or the default value if …","reported firmware version if in bootloader mode","Returns the value of <code>fw_patch</code>, or the default value if …","reported firmware version if in bootloader mode","Returns the value of <code>fw_vendor</code>, or the default value if …","reported firmware vendor if in bootloader mode","","","","Returns the value of <code>homescreen</code>, or the default value if …","","Returns the value of <code>imported</code>, or the default value if …","was storage imported from an external source?","Returns the value of <code>initialized</code>, or the default value if …","does device contain seed?","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>BackupType</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>SafetyCheckLevel</code>.","Returns the value of <code>label</code>, or the default value if <code>label</code> …","Returns the value of <code>label</code>, or the default value if <code>label</code> …","Returns the value of <code>label</code>, or the default value if <code>label</code> …","Returns the value of <code>label</code>, or the default value if <code>label</code> …","Returns the value of <code>label</code>, or the default value if <code>label</code> …","device description label","","device label","device label","device label","Returns the value of <code>language</code>, or the default value if …","Returns the value of <code>language</code>, or the default value if …","Returns the value of <code>language</code>, or the default value if …","Returns the value of <code>language</code>, or the default value if …","Returns the value of <code>language</code>, or the default value if …","device language","","device language (IETF BCP 47 language tag)","device language (IETF BCP 47 language tag)","device language (IETF BCP 47 language tag)","major version of the firmware/bootloader, e.g. 1","Returns the value of <code>message</code>, or the default value if …","message to send back in Success message","minor version of the firmware/bootloader, e.g. 0","seed encoded as mnemonic (12, 18 or 24 words for BIP39, 20 …","Returns the value of <code>model</code>, or the default value if <code>model</code> …","device hardware model","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>needs_backup</code>, or the default value if …","Returns the value of <code>needs_backup</code>, or the default value if …","does storage need backup? (equals to Storage.needs_backup)","set “needs backup” flag","Returns the value of <code>no_backup</code>, or the default value if …","Returns the value of <code>no_backup</code>, or the default value if …","Returns the value of <code>no_backup</code>, or the default value if …","report no backup (equals to Storage.no_backup)","indicate that no backup is going to be made","indicate that no backup is going to be made","a 32-byte random value generated by Trezor","Returns the enum value of <code>operation</code>, or the default if the …","","","","Returns the value of <code>passphrase_always_on_device</code>, or the …","Returns the value of <code>passphrase_always_on_device</code>, or the …","device enforces passphrase entry on Trezor","do not prompt for passphrase, enforce device entry","Returns the value of <code>passphrase_cached</code>, or the default …","is passphrase already cached in session?","Returns the value of <code>passphrase_protection</code>, or the default …","Returns the value of <code>passphrase_protection</code>, or the default …","Returns the value of <code>passphrase_protection</code>, or the default …","Returns the value of <code>passphrase_protection</code>, or the default …","is node/mnemonic encrypted using passphrase?","enable master node encryption using passphrase","enable master node encryption using passphrase","enable master node encryption using passphrase","Returns the value of <code>passphrase_source</code>, or the default …","ASK = 0; DEVICE = 1; HOST = 2;","patch version of the firmware/bootloader, e.g. 0","Returns the value of <code>pin</code>, or the default value if <code>pin</code> is …","set PIN protection","Returns the value of <code>pin_protection</code>, or the default value …","Returns the value of <code>pin_protection</code>, or the default value …","Returns the value of <code>pin_protection</code>, or the default value …","is device protected by PIN?","enable PIN protection","enable PIN protection","Appends the provided enum value to <code>capabilities</code>.","Nested message and enum types in <code>RecoveryDevice</code>.","Returns the value of <code>recovery_mode</code>, or the default value …","is recovery mode in progress","Returns the value of <code>remove</code>, or the default value if <code>remove</code>…","Returns the value of <code>remove</code>, or the default value if <code>remove</code>…","is PIN removal requested?","is wipe code removal requested?","Returns the value of <code>revision</code>, or the default value if …","SCM revision of firmware","Returns the enum value of <code>safety_checks</code>, or the default if …","Returns the enum value of <code>safety_checks</code>, or the default if …","safety check level, set to Prompt to limit path namespace …","Safety check level, set to Prompt to limit path namespace …","Returns the value of <code>sd_card_present</code>, or the default value …","is SD card present","Nested message and enum types in <code>SdProtect</code>.","Returns the value of <code>sd_protection</code>, or the default value …","is SD Protect enabled","Returns the value of <code>session_id</code>, or the default value if …","Returns the value of <code>session_id</code>, or the default value if …","assumed device session id; Trezor clears caches if it is …","","Sets <code>backup_type</code> to the provided enum value.","Sets <code>backup_type</code> to the provided enum value.","Sets <code>operation</code> to the provided enum value.","Sets <code>safety_checks</code> to the provided enum value.","Sets <code>safety_checks</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","size of requested entropy","Returns the value of <code>skip_backup</code>, or the default value if …","postpone seed backup to BackupDevice workflow","Returns the value of <code>skip_checksum</code>, or the default value …","do not test mnemonic for valid BIP-39 checksum","Returns the value of <code>skip_passphrase</code>, or the default value …","removed as part of passphrase redesign","Returns the value of <code>strength</code>, or the default value if …","strength of seed in bits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>type</code>, or the default if the …","Returns the enum value of <code>type</code>, or the default if the …","7 reserved for unused recovery method","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>u2f_counter</code>, or the default value if …","Returns the value of <code>u2f_counter</code>, or the default value if …","Returns the value of <code>u2f_counter</code>, or the default value if …","U2F counter","U2F counter","U2F counter","","","Returns the value of <code>unfinished_backup</code>, or the default …","optional bytes fw_vendor_keys = 26;      // obsoleted, use …","Returns the value of <code>unlocked</code>, or the default value if …","is the device unlocked? called “pin_cached” previously","Returns the value of <code>use_passphrase</code>, or the default value …","","Returns the value of <code>vendor</code>, or the default value if <code>vendor</code>…","name of the manufacturer, e.g. “trezor.io”","Returns the value of <code>wipe_code_protection</code>, or the default …","is wipe code protection enabled","one word of mnemonic on asked position","Returns the value of <code>word_count</code>, or the default value if …","number of words in BIP-39 mnemonic","Nested message and enum types in <code>WordRequest</code>.","","","Altcoins based on the Bitcoin source code","","","generic crypto operations for GPG, SSH, etc.","","","","","","the device is capable of passphrase entry directly on the …","","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Capability</code>, or <code>None</code> if <code>value</code> is not a …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Capability</code>.","","","","","","matrix recovery type","Type of recovery procedure. These should be used as …","use powers of two when extending this field","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>RecoveryDeviceType</code>, or <code>None</code> if <code>value</code> …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>RecoveryDeviceType</code>.","","","","","","","","","Structure representing SD card protection operation","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>SdProtectOperationType</code>, or <code>None</code> if …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of …","","","","","","","","","Type of Recovery Word request","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>WordRequestType</code>, or <code>None</code> if <code>value</code> is …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>WordRequestType</code>.","","","","","","Response: Response to Monero diagnosis protocol. @end","Request: Universal Monero protocol implementation …","","","Response: Contains Monero watch-only credentials derived …","Request: Ask device for public address derived from seed …","Response: Response with the re-encrypted private keys and …","Request: Decrypt tx private keys blob @next …","Request: Ask device for watch only credentials @start …","Response: Response to key image sync initialization. @next …","Request: Sub request of MoneroKeyImageSync. Initializing …","Response: Response to key image sync step. Contains …","Request: Sub request of MoneroKeyImageSync. Final message …","Response: Response to key image sync step. Contains …","Request: Sub request of MoneroKeyImageSync. Contains batch …","Response: Response on termination of live refresh mode. …","Request: Request terminating live refresh mode. @next …","Response after user gave permission @next …","Request: Starts live refresh flow. Asks user permission, …","Response: Response with the encrypted key image + signature","Request: Request to compute a single key image during live …","","Response: Response to after all inputs have been set. …","Request: Sub request of MoneroTransactionSign. Sent after …","Response: After all outputs are sent the initial RCT …","Request: Sub request of MoneroTransactionSign. Sent after …","Structure representing Monero transaction destination entry","Response: Contains transaction metadata and encryption …","Request: Sub request of MoneroTransactionSign. Final …","Response: Response to transaction signing initialization. …","Request: Sub request of MoneroTransactionSign. Initializes …","Response: Response to setting UTXO to the device @next …","Request: Sub request of MoneroTransactionSign. Sends one …","Range sig parameters / data. @embed","Response: Response to setting UTXO for signature. Contains …","Request: Sub request of MoneroTransactionSign. Sends one …","Response: Response to setting transaction destination. …","Request: Sub request of MoneroTransactionSign. Sends one …","Response: Contains full MG signature of the UTXO + …","Request: Sub request of MoneroTransactionSign. Sends UTXO …","Structure representing Monero transaction source entry, …","Response: Contains Monero watch-only credentials derived …","","","Returns the value of <code>account</code>, or the default value if …","Major subaddr index","","Returns the value of <code>address</code>, or the default value if …","Returns the value of <code>address</code>, or the default value if …","","","BIP-32 path to derive the key from master node","BIP-32 path to derive the key from master node","","BIP-32 path to derive the key from master node","BIP-32 path to derive the key from master node","BIP-32 path to derive the key from master node","Returns the value of <code>amount</code>, or the default value if <code>amount</code>…","Returns the value of <code>amount</code>, or the default value if <code>amount</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>bp_version</code>, or the default value if …","Bulletproof version","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>cout_key</code>, or the default value if …","","Returns the value of <code>data1</code>, or the default value if <code>data1</code> …","Returns the value of <code>data1</code>, or the default value if <code>data1</code> …","","","Returns the value of <code>data2</code>, or the default value if <code>data2</code> …","Returns the value of <code>data2</code>, or the default value if <code>data2</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>dst_entr_hmac</code>, or the default value …","","Returns the value of <code>ecdh_info</code>, or the default value if …","","Returns the value of <code>enc_key</code>, or the default value if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>extra</code>, or the default value if <code>extra</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>MoneroNetworkType</code>, or <code>None</code> if <code>value</code> …","Returns the value of <code>full_message_hash</code>, or the default …","","aggregation scheme for BP","","","","Returns the value of <code>ins</code>, or the default value if <code>ins</code> is …","Returns the value of <code>ins</code>, or the default value if <code>ins</code> is …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the value of <code>is_integrated</code>, or the default value …","","Returns the value of <code>is_offloaded_bp</code>, or the default value …","Extra message, with offloaded BP.","Returns the value of <code>is_subaddress</code>, or the default value …","","Returns <code>true</code> if <code>value</code> is a variant of <code>MoneroNetworkType</code>.","Returns the value of <code>key_image</code>, or the default value if …","","","Returns the value of <code>mask</code>, or the default value if <code>mask</code> is …","Returns the value of <code>mask</code>, or the default value if <code>mask</code> is …","","mask vector","Returns the value of <code>minor</code>, or the default value if <code>minor</code> …","Minor subaddr index","Nested message and enum types in …","Nested message and enum types in <code>MoneroKeyImageSyncStepAck</code>.","Nested message and enum types in …","Nested message and enum types in …","Nested message and enum types in …","Nested message and enum types in …","Nested message and enum types in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>network_type</code>, or the default if …","Returns the enum value of <code>network_type</code>, or the default if …","Returns the enum value of <code>network_type</code>, or the default if …","Returns the enum value of <code>network_type</code>, or the default if …","Returns the enum value of <code>network_type</code>, or the default if …","Returns the enum value of <code>network_type</code>, or the default if …","Network type","Network type","Network type","network type","network type","network type","","Returns the value of <code>offload_type</code>, or the default value if …","","Returns the value of <code>opening_key</code>, or the default value if …","enc master key to decrypt CLSAGs after protocol finishes …","Returns the value of <code>orig_idx</code>, or the default value if …","Returns the value of <code>orig_idx</code>, or the default value if …","original sort index, before sorting by key-images","original sort index, before sorting by key-images","Returns the value of <code>original</code>, or the default value if …","","","Returns the value of <code>out_pk</code>, or the default value if <code>out_pk</code>…","","all outputs including decoys (forms the ring)","Returns the value of <code>p1</code>, or the default value if <code>p1</code> is …","Returns the value of <code>p1</code>, or the default value if <code>p1</code> is …","","","Returns the value of <code>p2</code>, or the default value if <code>p2</code> is …","Returns the value of <code>p2</code>, or the default value if <code>p2</code> is …","","","","Returns the value of <code>payment_id</code>, or the default value if …","Payment ID for integrated address","","","Returns the value of <code>pseudo_out</code>, or the default value if …","Returns the value of <code>pseudo_out</code>, or the default value if …","Returns the value of <code>pseudo_out</code>, or the default value if …","Returns the value of <code>pseudo_out</code>, or the default value if …","","","","updated pseudo-out after mask correction","Returns the value of <code>pseudo_out_alpha</code>, or the default …","Returns the value of <code>pseudo_out_alpha</code>, or the default …","","","Returns the value of <code>pseudo_out_hmac</code>, or the default value …","Returns the value of <code>pseudo_out_hmac</code>, or the default value …","Returns the value of <code>pseudo_out_hmac</code>, or the default value …","","","","Returns the value of <code>rand_mult</code>, or the default value if …","","Returns the value of <code>rct</code>, or the default value if <code>rct</code> is …","is RingCT used (true for newer UTXOs)","additional tx keys if applicable","","Returns the value of <code>real_out_tx_key</code>, or the default value …","tx key located in the real output’s tx","Returns the value of <code>real_output</code>, or the default value if …","index denoting which item in <code>outputs</code> is our real output …","Returns the value of <code>real_output_in_tx_index</code>, or the …","index of our real output in the tx (aka which output was …","Returns the value of <code>reason</code>, or the default value if <code>reason</code>…","reason to display for user. e.g., tx_proof","","Returns the value of <code>rsig</code>, or the default value if <code>rsig</code> is …","range sig data, all of it or partial (based on rsig_parts)","","","","","","","Returns the value of <code>rsig_type</code>, or the default value if …","range signature (aka proof) type","xmrtypes.RctSig","Returns the value of <code>salt</code>, or the default value if <code>salt</code> is …","Returns the value of <code>salt</code>, or the default value if <code>salt</code> is …","Returns the value of <code>salt</code>, or the default value if <code>salt</code> is …","","","","","","Sets <code>network_type</code> to the provided enum value.","Sets <code>network_type</code> to the provided enum value.","Sets <code>network_type</code> to the provided enum value.","Sets <code>network_type</code> to the provided enum value.","Sets <code>network_type</code> to the provided enum value.","Sets <code>network_type</code> to the provided enum value.","Returns the value of <code>show_display</code>, or the default value if …","Optionally show on display before sending the result","Returns the value of <code>signature</code>, or the default value if …","","Returns the value of <code>spend_key</code>, or the default value if …","Returns the value of <code>spend_key</code>, or the default value if …","","","","","","","","Returns the value of <code>subaddr_minor</code>, or the default value …","minor subaddr index UTXO was sent to","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>tx_derivations</code>, or the default value …","","Returns the value of <code>tx_enc_keys</code>, or the default value if …","","","Returns the value of <code>tx_keys</code>, or the default value if …","","Returns the value of <code>tx_out</code>, or the default value if <code>tx_out</code>…","xmrtypes.TxOut","Returns the value of <code>tx_prefix_hash</code>, or the default value …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>version</code>, or the default value if …","","Returns the value of <code>view_public_key</code>, or the default value …","addr for derivation","Returns the value of <code>vini</code>, or the default value if <code>vini</code> is …","Returns the value of <code>vini</code>, or the default value if <code>vini</code> is …","Returns the value of <code>vini</code>, or the default value if <code>vini</code> is …","xmrtypes.TxinToKey","xmrtypes.TxinToKey","xmrtypes.TxinToKey","Returns the value of <code>vini_hmac</code>, or the default value if …","Returns the value of <code>vini_hmac</code>, or the default value if …","Returns the value of <code>vini_hmac</code>, or the default value if …","","","","Returns the value of <code>vouti_hmac</code>, or the default value if …","","Returns the value of <code>watch_key</code>, or the default value if …","","Structure representing Monero list of sub-addresses","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Structure representing Monero encrypted exported key image","Returns the value of <code>blob</code>, or the default value if <code>blob</code> is …","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns the value of <code>iv</code>, or the default value if <code>iv</code> is …","","","","","","","Structure representing Monero UTXO for key image sync","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Returns the value of <code>sub_addr_major</code>, or the default value …","","Returns the value of <code>sub_addr_minor</code>, or the default value …","","","","","","","Structure represents initial fields of the Monero RCT …","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns the value of <code>message</code>, or the default value if …","","","Returns the value of <code>rv_type</code>, or the default value if …","","","","","Returns the value of <code>txn_fee</code>, or the default value if …","","","Structure representing Monero public address","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Returns the value of <code>spend_public_key</code>, or the default …","","","","","","Returns the value of <code>view_public_key</code>, or the default value …","","Structure representing Monero initial transaction …","Returns the value of <code>account</code>, or the default value if …","","","","","","Returns the value of <code>client_version</code>, or the default value …","connected client version","","","","","","Returns the value of <code>fee</code>, or the default value if <code>fee</code> is …","","","Returns the argument unchanged.","Returns the value of <code>hard_fork</code>, or the default value if …","transaction hard fork number","","Calls <code>U::from(self)</code>.","","Returns the value of <code>mixin</code>, or the default value if <code>mixin</code> …","","Returns the value of <code>monero_version</code>, or the default value …","monero software version","","Returns the value of <code>num_inputs</code>, or the default value if …","","","Returns the value of <code>payment_id</code>, or the default value if …","","","","","","","Returns the value of <code>unlock_time</code>, or the default value if …","","Returns the value of <code>version</code>, or the default value if …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the value of <code>idx</code>, or the default value if <code>idx</code> is …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the value of <code>k</code>, or the default value if <code>k</code> is unset.","","","Returns the value of <code>ki</code>, or the default value if <code>ki</code> is …","","Returns the value of <code>l</code>, or the default value if <code>l</code> is unset.","","Nested message and enum types in <code>MoneroOutputEntry</code>.","","","Returns the value of <code>r</code>, or the default value if <code>r</code> is unset.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Response: Contains NEM address derived from device private …","Request: Ask device to decrypt NEM transaction payload …","Response: Contains decrypted NEM transaction payload @end","Request: Ask device for NEM address corresponding to …","Request: Ask device to sign transaction @start @next …","Response: Contains NEM transaction data and signature @end","NEM address in Base32 encoding","BIP-32 path to derive the key from master node","BIP-32 path to derive the key from master node","Aggregate modification part","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>cosigning</code>, or the default value if …","Whether cosigning or initiating the multisig transaction","Transaction data","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Importance transfer part","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Mosaic definition creation part","Common part of inner transaction for multisig transactions","","","","","","","Nested message and enum types in <code>NEMSignTx</code>.","Returns the value of <code>network</code>, or the default value if …","Returns the value of <code>network</code>, or the default value if …","Network ID (0x68 = Mainnet, 0x98 = Testnet, 0x60 = Mijin)","Network ID (0x68 = Mainnet, 0x98 = Testnet, 0x60 = Mijin)","Returns the value of <code>payload</code>, or the default value if …","Actual message data (encrypted)","Actual message data (unencrypted)","Provision namespace part","Returns the value of <code>public_key</code>, or the default value if …","Public key of the other party","Returns the value of <code>show_display</code>, or the default value if …","Optionally show on display before sending the result","Signature for the transaction","Mosaic supply change part","","","","","","","Common part of transaction","Transfer transaction part","","","","","","","","","","","","","","","","","","","Structure representing the aggregate modification part for …","Structure representing the importance transfer part for …","Structure representing the mosaic definition creation part …","Structure representing the mosaic supply change part for …","Structure representing the provision namespace part for …","Structure representing the common part for NEM transactions","Structure representing the transfer transaction part for …","BIP-32 path to derive the key from master node","Amount of micro NEM that is transferred","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Deadline of the transaction","","","","","","","","Mosaic definition","Supply delta","","","","","","","","","","","","","","","Fee for the transaction","Rental fee","Creation fee","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the enum value of <code>mode</code>, or the default if the …","Mode of importance transfer","Cosignatory modifications","Name of the mosaic definition","Attached mosaics","New part concatenated to the parent","Fully qualified name of the namespace","","","","","","","","Nested message and enum types in <code>NEMAggregateModification</code>.","Nested message and enum types in <code>NEMImportanceTransfer</code>.","Nested message and enum types in <code>NEMMosaicCreation</code>.","Nested message and enum types in <code>NEMMosaicSupplyChange</code>.","Nested message and enum types in <code>NEMTransfer</code>.","Returns the value of <code>network</code>, or the default value if …","Network ID (0x68 = Mainnet, 0x98 = Testnet, 0x60 = Mijin)","Returns the value of <code>parent</code>, or the default value if <code>parent</code>…","Parent namespace (for child namespaces)","Returns the value of <code>payload</code>, or the default value if …","Actual message data (unencrypted)","Returns the value of <code>public_key</code>, or the default value if …","Public key of the recipient (for encrypted payloads)","Public key of the remote account","Address of the recipient","Returns the value of <code>relative_change</code>, or the default value …","Relative change of the minimum cosignatories","Sets <code>mode</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","Returns the value of <code>signer</code>, or the default value if <code>signer</code>…","Public key of the account (for multisig transactions)","Rental fee sink address","Creation fee sink address","Number of seconds elapsed since the creation of the …","","","","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>type</code>, or the default if the …","Type of supply change","","","","","","","","Structure representing the cosignatory modification for …","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Nested message and enum types in <code>NEMCosignatoryModification</code>…","Public key of the cosignatory","Sets <code>type</code> to the provided enum value.","","","","Returns the enum value of <code>type</code>, or the default if the …","Type of cosignatory modification","","","","Type of cosignatory modification","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>NemModificationType</code>, or <code>None</code> if <code>value</code> …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>NemModificationType</code>.","","","","","","","","Mode of importance transfer","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>NemImportanceTransferMode</code>, or <code>None</code> if …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of …","","","","","","Structure representing a mosaic definition","","","","","","","Mosaic description","Returns the value of <code>divisibility</code>, or the default value if …","Number of decimal places that a mosaic can be divided into","","","Returns the value of <code>fee</code>, or the default value if <code>fee</code> is …","Levy fee (interpretation depends on levy type)","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns the enum value of <code>levy</code>, or the default if the …","Levy type","Returns the value of <code>levy_address</code>, or the default value if …","Levy address","Returns the value of <code>levy_mosaic</code>, or the default value if …","Name of the levy mosaic","Returns the value of <code>levy_namespace</code>, or the default value …","Fully qualified name of the namespace of the levy mosaic","Name of the mosaic definition","Returns the value of <code>mutable_supply</code>, or the default value …","Mutable supply","Returns the value of <code>name</code>, or the default value if <code>name</code> is …","User-friendly name of the mosaic (for whitelisted mosaics)","Fully qualified name of the namespace","","Nested message and enum types in <code>NEMMosaicDefinition</code>.","Networks that the mosaic is valid on (for whitelisted …","Sets <code>levy</code> to the provided enum value.","Returns the value of <code>supply</code>, or the default value if <code>supply</code>…","Initial supply to create, always given in entire units","Returns the value of <code>ticker</code>, or the default value if <code>ticker</code>…","Ticker of the mosaic (for whitelisted mosaics)","","Returns the value of <code>transferable</code>, or the default value if …","Mosaic allows transfers among accounts other than the …","","","","","","Type of levy which will be used for mosaic","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>NemMosaicLevy</code>, or <code>None</code> if <code>value</code> is …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>NemMosaicLevy</code>.","","","","","","Type of supply change which will be applied to mosaic","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>NemSupplyChangeType</code>, or <code>None</code> if <code>value</code> …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>NemSupplyChangeType</code>.","","","","","","Structure representing the mosaic attachment for NEM …","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Name of the mosaic definition","Fully qualified name of the namespace","","Mosaic quantity, always given in smallest units","","","","","Response: Address for the given index @end","Request: Address at the specified index @start @next …","Request: ask device to sign Ripple transaction @start …","Response: signature for transaction @end","Address in Ripple format (base58 of a pubkey with checksum)","BIP-32 path. For compatibility with other wallets, must be …","BIP-32 path. For compatibility with other wallets, must be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fee (in drops) for the transaction","Returns the value of <code>flags</code>, or the default value if <code>flags</code> …","transaction flags","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the value of <code>last_ledger_sequence</code>, or the default …","see …","","","","","Payment transaction type","Nested message and enum types in <code>RippleSignTx</code>.","transaction sequence number","","Returns the value of <code>show_display</code>, or the default value if …","optionally show on display before sending the result","","","","","","","","","","","","","","","","","","Payment transaction type","only XRP is supported at the moment so this an integer","","","","","","","destination account address","Returns the value of <code>destination_tag</code>, or the default value …","destination tag to identify payments","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","Request: ask device to confirm this operation type @next …","Response: Address for the given index @end","Request: ask device to confirm this operation type @next …","Describes a Stellar asset @embed","…","Request: ask device to confirm this operation type @next …","Request: ask device to confirm this operation type @next …","Request: ask device to confirm this operation type @next …","Request: ask device to confirm this operation type @next …","Request: Address at the specified index @start @next …","Request: ask device to confirm this operation type @next …","Request: ask device to confirm this operation type @next …","Request: ask device to confirm this operation type @next …","Request: ask device to confirm this operation type @next …","Request: ask device to confirm this operation type @next …","Request: ask device to confirm this operation type @next …","Request: ask device to confirm this operation type @next …","Request: ask device to sign Stellar transaction @start …","Response: signature for transaction @end","Response: device is ready for client to send the next …","Address in Stellar format (base32 of a pubkey with …","BIP-32 path. For compatibility with other wallets, must be …","BIP-32 path. For compatibility with other wallets, must be …","amount of the given asset to pay","","","","asset involved in the operation","","Returns the value of <code>asset_code</code>, or the default value if …","human-readable asset code","Returns the enum value of <code>asset_type</code>, or the default if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new sequence number","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>clear_flags</code>, or the default value if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>code</code>, or the default value if <code>code</code> is …","for non-native assets, string describing the code","","","","","","","","","","","","","","","","","","","","","destination account address","recipient of the payment","recipient of the payment","destination account address","amount they end up with","what they end up with","what they end up with","the minimum amount of dest asset to be received","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fee (in stroops) for the transaction","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>StellarAssetType</code>, or <code>None</code> if <code>value</code> is …","","Returns the value of <code>high_threshold</code>, or the default value …","","Returns the value of <code>home_domain</code>, or the default value if …","","Returns the value of <code>inflation_destination_account</code>, or the …","(optional) inflation destination address","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if <code>value</code> is a variant of <code>StellarAssetType</code>.","Returns the value of <code>issuer</code>, or the default value if <code>issuer</code>…","issuing address","","","Returns the value of <code>low_threshold</code>, or the default value …","","Returns the value of <code>master_weight</code>, or the default value …","","Returns the value of <code>medium_threshold</code>, or the default …","","Returns the value of <code>memo_hash</code>, or the default value if …","32 bytes representing a hash","Returns the value of <code>memo_id</code>, or the default value if …","8-byte uint64","Returns the value of <code>memo_text</code>, or the default value if …","up to 28 characters (4 bytes are for length)","Returns the enum value of <code>memo_type</code>, or the default if the …","type of memo attached to the transaction","","","","","","","","","","","","","","","","","","","passphrase for signing messages on the destination network","account address to create","number of operations in this transaction","Offer ID for updating an existing offer","Offer ID for updating an existing offer","","additional hops it must go through to get there","additional hops it must go through to get there","Price denominator","Price denominator","Price denominator","Price numerator","Price numerator","Price numerator","public key for the private key used to sign data","","","","amount of sendAsset to send (excluding fees)","asset we pay with","asset we pay with","the maximum amount of sendAsset to send (excluding fees)","transaction sequence number","Sets <code>asset_type</code> to the provided enum value.","Returns the value of <code>set_flags</code>, or the default value if …","","Sets <code>memo_type</code> to the provided enum value.","Sets <code>signer_type</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","Returns the value of <code>show_display</code>, or the default value if …","optionally show on display before sending the result","signature suitable for sending to the Stellar network","Returns the value of <code>signer_key</code>, or the default value if …","","Returns the enum value of <code>signer_type</code>, or the default if …","","Returns the value of <code>signer_weight</code>, or the default value …","","Returns the value of <code>source_account</code>, or the default value …","Returns the value of <code>source_account</code>, or the default value …","Returns the value of <code>source_account</code>, or the default value …","Returns the value of <code>source_account</code>, or the default value …","Returns the value of <code>source_account</code>, or the default value …","Returns the value of <code>source_account</code>, or the default value …","Returns the value of <code>source_account</code>, or the default value …","Returns the value of <code>source_account</code>, or the default value …","Returns the value of <code>source_account</code>, or the default value …","Returns the value of <code>source_account</code>, or the default value …","Returns the value of <code>source_account</code>, or the default value …","Returns the value of <code>source_account</code>, or the default value …","Returns the value of <code>source_account</code>, or the default value …","source account address","(optional) source account address","(optional) source account address","(optional) source address","(optional) source address","(optional) source account address","(optional) source account address","(optional) source account address","(optional) source account address","(optional) source account address","(optional) source account address","(optional) source account address","(optional) source account address","(optional) source account address","initial starting balance for the new account","Nested message and enum types in <code>StellarSetOptionsOp</code>.","Nested message and enum types in <code>StellarSignTx</code>.","unix timestamp (client must truncate this to 32 bytes)","unix timestamp (client must truncate this to 32 bytes)","","","","","","","","","","","","","","","","","","","","","The account being allowed to hold the asset","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>type</code>, or the default if the …","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>value</code>, or the default value if <code>value</code> …","64 bytes of arbitrary data","","","","…","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>StellarSignerType</code>, or <code>None</code> if <code>value</code> …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>StellarSignerType</code>.","","","","","","","","","","…","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>StellarMemoType</code>, or <code>None</code> if <code>value</code> is …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>StellarMemoType</code>.","","","","","","Response: Contains Tezos address derived from device …","Request: Ask device for Tezos address corresponding to …","Request: Ask device for Tezos public key corresponding to …","Response: Contains Tezos public key derived from device …","Request: Ask device to sign Tezos transaction @start @next …","Response: Contains Tezos transaction signature @end","Coin address in Base58 encoding","BIP-32 path to derive the key from master node","BIP-32 path to derive the key from master node","BIP-32 path to derive the key from master node","Tezos ballot operation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tezos delegation operation","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","b58 encoded hashed operation contents with prefix","Tezos origination operation","Tezos proposal operation","b58 encoded Tezos public key with prefix","Tezos reveal operation (may be bundled with other op)","Returns the value of <code>show_display</code>, or the default value if …","Returns the value of <code>show_display</code>, or the default value if …","optionally show on display before sending the result","Optionally show on display before sending the result","operation_bytes + signed operation_bytes","Tezos b58 encoded transaction signature with prefix","Nested message and enum types in <code>TezosSignTx</code>.","","","","","","","Tezos transaction operation","","","","","","","","","","","","","","","","","","","Structure representing information for ballot","Tezos contract ID","Structure representing information for delegation","Structure representing information for origination","Structure representing information for proposal","Structure representing information for reveal","Structure representing information for transaction","","","Returns the enum value of <code>ballot</code>, or the default if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>delegatable</code>, or the default value if …","","Returns the value of <code>delegate</code>, or the default value if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Implicit = 21B, originated = 20B + 1B padding","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the value of <code>manager_pubkey</code>, or the default value …","","","","","","","","","Returns the value of <code>parameters</code>, or the default value if …","","","","","","","","","Sets <code>ballot</code> to the provided enum value.","Sets <code>tag</code> to the provided enum value.","","","","","Contains only public_key_hash, not to be confused with …","Contains only public_key_hash, not to be confused with …","Returns the value of <code>spendable</code>, or the default value if …","","","","","","Returns the enum value of <code>tag</code>, or the default if the field …","","Nested message and enum types in <code>TezosBallotOp</code>.","Nested message and enum types in <code>TezosContractID</code>.","Nested message and enum types in <code>TezosTransactionOp</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>TezosBallotType</code>, or <code>None</code> if <code>value</code> is …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>TezosBallotType</code>.","","","","","","","","Type of Tezos Contract type","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>TezosContractType</code>, or <code>None</code> if <code>value</code> …","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>TezosContractType</code>.","","","","","","","","","Returns the value of <code>cancel_delegate</code>, or the default value …","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Returns the value of <code>set_delegate</code>, or the default value if …","","Nested message and enum types in <code>TezosParametersManager</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Request: Add resident credential @start @next Success …","Response: Resident credential list @start @next end","Request: List resident credentials @start @next …","Request: Remove resident credential @start @next Success …","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>credential_id</code>, or the default value …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the value of <code>index</code>, or the default value if <code>index</code> …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Nested message and enum types in <code>WebAuthnCredentials</code>.","","Returns the value of <code>algorithm</code>, or the default value if …","","","","","","","Returns the value of <code>creation_time</code>, or the default value …","","Returns the value of <code>curve</code>, or the default value if <code>curve</code> …","","","","","","Returns the argument unchanged.","Returns the value of <code>hmac_secret</code>, or the default value if …","","Returns the value of <code>id</code>, or the default value if <code>id</code> is …","","Returns the value of <code>index</code>, or the default value if <code>index</code> …","","Calls <code>U::from(self)</code>.","","Returns the value of <code>rp_id</code>, or the default value if <code>rp_id</code> …","","Returns the value of <code>rp_name</code>, or the default value if …","","","","","","Returns the value of <code>use_sign_count</code>, or the default value …","","Returns the value of <code>user_display_name</code>, or the default …","","Returns the value of <code>user_id</code>, or the default value if …","","Returns the value of <code>user_name</code>, or the default value if …",""],"if":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]],["messagetype",4]],[[["",0],["",0]]],[[["",0],["messagetype",4]],["ordering",4]],null,null,[[],["messagetype",4]],[[["",0],["messagetype",4]],["bool",0]],null,null,[[["",0],["formatter",3]],["result",6]],[[]],[[["i32",0]],["option",4,[["messagetype",4]]]],[[["",0],["",0]]],[[]],[[["i32",0]],["bool",0]],null,null,null,[[["",0],["messagetype",4]],["option",4,[["ordering",4]]]],null,null,null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["str",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["u64",0]],null,null,null,null,[[["",0]],["amountunit",4]],[[["",0]],["amountunit",4]],null,nullu32",0]],[[["",0]],["u32",0]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["multisigredeemscripttype",3]],[[["",0]],["getpublickey",3]],[[["",0]],["publickey",3]],[[["",0]],["getaddress",3]],[[["",0]],["address",3]],[[["",0]],["getownershipid",3]],[[["",0]],["ownershipid",3]],[[["",0]],["signmessage",3]],[[["",0]],["messagesignature",3]],[[["",0]],["verifymessage",3]],[[["",0]],["signtx",3]],[[["",0]],["txrequest",3]],[[["",0]],["txack",3]],[[["",0]],["txinput",3]],[[["",0]],["txoutput",3]],[[["",0]],["prevtx",3]],[[["",0]],["previnput",3]],[[["",0]],["prevoutput",3]],[[["",0]],["txackpaymentrequest",3]],[[["",0]],["txackinput",3]],[[["",0]],["txackoutput",3]],[[["",0]],["txackprevmeta",3]],[[["",0]],["txackprevinput",3]],[[["",0]],["txackprevoutput",3]],[[["",0]],["txackprevextradata",3]],[[["",0]],["getownershipproof",3]],[[["",0]],["ownershipproof",3]],[[["",0]],["authorizecoinjoin",3]],[[["",0]],["inputscripttype",4]],[[["",0]],["outputscripttype",4]],[[["",0]],["decredstakingspendtype",4]],[[["",0]],["amountunit",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["inputscripttype",4]],["ordering",4]],[[["",0],["outputscripttype",4]],["ordering",4]],[[["",0],["decredstakingspendtype",4]],["ordering",4]],[[["",0],["amountunit",4]],["ordering",4]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],null,null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],null,null,null,[[["",0]],["u32",0]],null,[[["",0]],["decredstakingspendtype",4]],null,[[["",0]],["bool",0]],null,[[["",0]],["u32",0]],[[["",0]],["u32",0]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["inputscripttype",4]],[[],["outputscripttype",4]],[[],["decredstakingspendtype",4]],[[],["amountunit",4]],null,[[["",0]],["str",0]],null,[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0],["multisigredeemscripttype",3]],["bool",0]],[[["",0],["getpublickey",3]],["bool",0]],[[["",0],["publickey",3]],["bool",0]],[[["",0],["getaddress",3]],["bool",0]],[[["",0],["address",3]],["bool",0]],[[["",0],["getownershipid",3]],["bool",0]],[[["",0],["ownershipid",3]],["bool",0]],[[["",0],["signmessage",3]],["bool",0]],[[["",0],["messagesignature",3]],["bool",0]],[[["",0],["verifymessage",3]],["bool",0]],[[["",0],["signtx",3]],["bool",0]],[[["",0],["txrequest",3]],["bool",0]],[[["",0],["txack",3]],["bool",0]],[[["",0],["txinput",3]],["bool",0]],[[["",0],["txoutput",3]],["bool",0]],[[["",0],["prevtx",3]],["bool",0]],[[["",0],["previnput",3]],["bool",0]],[[["",0],["prevoutput",3]],["bool",0]],[[["",0],["txackpaymentrequest",3]],["bool",0]],[[["",0],["txackinput",3]],["bool",0]],[[["",0],["txackoutput",3]],["bool",0]],[[["",0],["txackprevmeta",3]],["bool",0]],[[["",0],["txackprevinput",3]],["bool",0]],[[["",0],["txackprevoutput",3]],["bool",0]],[[["",0],["txackprevextradata",3]],["bool",0]],[[["",0],["getownershipproof",3]],["bool",0]],[[["",0],["ownershipproof",3]],["bool",0]],[[["",0],["authorizecoinjoin",3]],["bool",0]],[[["",0],["inputscripttype",4]],["bool",0]],[[["",0],["outputscripttype",4]],["bool",0]],[[["",0],["decredstakingspendtype",4]],["bool",0]],[[["",0],["amountunit",4]],["bool",0]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],null,null,[[["",0]],["u32",0]],null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",0]],["option",4,[["inputscripttype",4]]]],[[["i32",0]],["option",4,[["outputscripttype",4]]]],[[["i32",0]],["option",4,[["decredstakingspendtype",4]]]],[[["i32",0]],["option",4,[["amountunit",4]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",0]],["bool",0]],[[["i32",0]],["bool",0]],[[["i32",0]],["bool",0]],[[["i32",0]],["bool",0]],[[["",0]],["u32",0]],null,null,null,[[["",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["multisigredeemscripttype",3]],["bool",0]],[[["",0],["getpublickey",3]],["bool",0]],[[["",0],["publickey",3]],["bool",0]],[[["",0],["getaddress",3]],["bool",0]],[[["",0],["address",3]],["bool",0]],[[["",0],["getownershipid",3]],["bool",0]],[[["",0],["ownershipid",3]],["bool",0]],[[["",0],["signmessage",3]],["bool",0]],[[["",0],["messagesignature",3]],["bool",0]],[[["",0],["verifymessage",3]],["bool",0]],[[["",0],["signtx",3]],["bool",0]],[[["",0],["txrequest",3]],["bool",0]],[[["",0],["txack",3]],["bool",0]],[[["",0],["txinput",3]],["bool",0]],[[["",0],["txoutput",3]],["bool",0]],[[["",0],["prevtx",3]],["bool",0]],[[["",0],["previnput",3]],["bool",0]],[[["",0],["prevoutput",3]],["bool",0]],[[["",0],["txackpaymentrequest",3]],["bool",0]],[[["",0],["txackinput",3]],["bool",0]],[[["",0],["txackoutput",3]],["bool",0]],[[["",0],["txackprevmeta",3]],["bool",0]],[[["",0],["txackprevinput",3]],["bool",0]],[[["",0],["txackprevoutput",3]],["bool",0]],[[["",0],["txackprevextradata",3]],["bool",0]],[[["",0],["getownershipproof",3]],["bool",0]],[[["",0],["ownershipproof",3]],["bool",0]],[[["",0],["authorizecoinjoin",3]],["bool",0]],[[["",0]],["bool",0]],null,null,null,[[["",0]]],null,[[["",0]]],null,[[["",0]]],[[["",0]]],null,null,[[["",0]],["u32",0]],[[["",0]],["u32",0]],null,null,null,null,[[["",0]],["bool",0]],null,null,null,[[["",0]]],null,null,[[["",0],["inputscripttype",4]],["option",4,[["ordering",4]]]],[[["",0],["outputscripttype",4]],["option",4,[["ordering",4]]]],[[["",0],["decredstakingspendtype",4]],["option",4,[["ordering",4]]]],[[["",0],["amountunit",4]],["option",4,[["ordering",4]]]],[[["",0]],["u32",0]],null,null,null,null,null,null,null,[[["",0]],["requesttype",4]],null,[[["",0]],["u32",0]],null,[[["",0]]],null,null,[[["",0]]],null,null,[[["",0]],["inputscripttype",4]],[[["",0]],["inputscripttype",4]],[[["",0]],["inputscripttype",4]],[[["",0]],["inputscripttype",4]],[[["",0]],["inputscripttype",4]],[[["",0]],["outputscripttype",4]],[[["",0]],["inputscripttype",4]],[[["",0]],["inputscripttype",4]],null,null,null,null,null,null,null,null,[[["",0]],["u32",0]],null,null,null,[[["",0],["amountunit",4]]],[[["",0],["amountunit",4]]],[[["",0],["decredstakingspendtype",4]]],[[["",0],["requesttype",4]]],[[["",0],["inputscripttype",4]]],[[["",0],["inputscripttype",4]]],[[["",0],["inputscripttype",4]]],[[["",0],["inputscripttype",4]]],[[["",0],["inputscripttype",4]]],[[["",0],["outputscripttype",4]]],[[["",0],["inputscripttype",4]]],[[["",0],["inputscripttype",4]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,null,null,null,null,null,null,[[["",0]],["u32",0]],[[["",0]],["u32",0]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["bool",0]],null,[[["",0]],["u32",0]],null,null,[[["",0]],["u32",0]],[[["",0]],["u32",0]],null,null,[[["",0]]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]],["hdnodepathtype",3]],[[["",0],["",0]]],[[]],[[["",0]],["usize",0]],[[["",0],["hdnodepathtype",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0],["hdnodepathtype",3]],["bool",0]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["u32",0]],null,[[["",0]]],[[["",0]],["transactiontype",3]],[[["",0],["",0]]],[[]],[[["",0]],["usize",0]],[[["",0],["transactiontype",3]],["bool",0]],[[["",0]],["u32",0]],null,[[["",0]]],null,[[["",0]],["u32",0]],null,[[["",0],["formatter",3]],["result",6]],[[]],null,[[["",0]],["u32",0]],null,[[]],[[["",0]],["u32",0]],null,[[["",0],["transactiontype",3]],["bool",0]],null,[[["",0]],["u32",0]],null,[[["",0]],["bool",0]],null,[[["",0]],["u32",0]],null,[[["",0]]],null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["u32",0]],null,[[["",0]],["u32",0]],null,null,null,null,[[["",0]],["str",0]],null,null,null,[[["",0]],["u64",0]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["txinputtype",3]],[[["",0]],["txoutputbintype",3]],[[["",0]],["txoutputtype",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]]],null,[[["",0]],["u32",0]],null,[[["",0]],["decredstakingspendtype",4]],null,[[["",0]],["u32",0]],null,[[]],[[]],[[]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0],["txinputtype",3]],["bool",0]],[[["",0],["txoutputbintype",3]],["bool",0]],[[["",0],["txoutputtype",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["",0],["txinputtype",3]],["bool",0]],[[["",0],["txoutputbintype",3]],["bool",0]],[[["",0],["txoutputtype",3]],["bool",0]],[[["",0]]],null,[[["",0]]],[[["",0]]],null,null,[[["",0]],["u32",0]],[[["",0]],["u32",0]],null,null,[[["",0]]],null,[[["",0]],["u32",0]],null,null,null,[[["",0]]],null,null,[[["",0]]],null,[[["",0]],["inputscripttype",4]],[[["",0]],["outputscripttype",4]],null,null,[[["",0]],["u32",0]],null,[[["",0],["decredstakingspendtype",4]]],[[["",0],["inputscripttype",4]]],[[["",0],["outputscripttype",4]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]],["txackinputwrapper",3]],[[["",0],["",0]]],[[]],[[["",0]],["usize",0]],[[["",0],["txackinputwrapper",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],null,[[]],[[["",0],["txackinputwrapper",3]],["bool",0]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]],["txackoutputwrapper",3]],[[["",0],["",0]]],[[]],[[["",0]],["usize",0]],[[["",0],["txackoutputwrapper",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0],["txackoutputwrapper",3]],["bool",0]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["paymentrequestmemo",3]],[[["",0]],["textmemo",3]],[[["",0]],["refundmemo",3]],[[["",0]],["coinpurchasememo",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,[[]],[[]],[[]],[[]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0],["paymentrequestmemo",3]],["bool",0]],[[["",0],["textmemo",3]],["bool",0]],[[["",0],["refundmemo",3]],["bool",0]],[[["",0],["coinpurchasememo",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["",0],["paymentrequestmemo",3]],["bool",0]],[[["",0],["textmemo",3]],["bool",0]],[[["",0],["refundmemo",3]],["bool",0]],[[["",0],["coinpurchasememo",3]],["bool",0]],null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]],["txackprevextradatawrapper",3]],[[["",0],["",0]]],[[]],[[["",0]],["usize",0]],[[["",0],["txackprevextradatawrapper",3]],["bool",0]],null,[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0],["txackprevextradatawrapper",3]],["bool",0]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]],["txackprevinputwrapper",3]],[[["",0],["",0]]],[[]],[[["",0]],["usize",0]],[[["",0],["txackprevinputwrapper",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],null,[[]],[[["",0],["txackprevinputwrapper",3]],["bool",0]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]],["txackprevoutputwrapper",3]],[[["",0],["",0]]],[[]],[[["",0]],["usize",0]],[[["",0],["txackprevoutputwrapper",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0],["txackprevoutputwrapper",3]],["bool",0]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]]],[[["",0]],["txrequestdetailstype",3]],[[["",0]],["txrequestserializedtype",3]],[[["",0]],["requesttype",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["requesttype",4]],["ordering",4]],[[]],[[]],[[],["requesttype",4]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0],["txrequestdetailstype",3]],["bool",0]],[[["",0],["txrequestserializedtype",3]],["bool",0]],[[["",0],["requesttype",4]],["bool",0]],[[["",0]],["u32",0]],null,[[["",0]],["u32",0]],null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["i32",0]],["option",4,[["requesttype",4]]]],[[["",0],["",0]]],[[]],[[]],[[]],[[["i32",0]],["bool",0]],[[["",0],["txrequestdetailstype",3]],["bool",0]],[[["",0],["txrequestserializedtype",3]],["bool",0]],[[["",0],["requesttype",4]],["option",4,[["ordering",4]]]],[[["",0]],["u32",0]],null,[[["",0]]],null,[[["",0]]],null,[[["",0]],["u32",0]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["firmwareerase",3]],[[["",0]],["firmwarerequest",3]],[[["",0]],["firmwareupload",3]],[[["",0]],["selftest",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[]],[[]],[[]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0],["firmwareerase",3]],["bool",0]],[[["",0],["firmwarerequest",3]],["bool",0]],[[["",0],["firmwareupload",3]],["bool",0]],[[["",0],["selftest",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["",0]]],null,[[]],[[]],[[]],[[]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],null,null,[[["",0],["firmwareerase",3]],["bool",0]],[[["",0],["firmwarerequest",3]],["bool",0]],[[["",0],["firmwareupload",3]],["bool",0]],[[["",0],["selftest",3]],["bool",0]],[[["",0]],["u32",0]],null,[[["",0]]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["str",0]],null,null,null,null,null,null,null,[[["",0]],["cardanoaddresstype",4]],null,[[["",0]],["u64",0]],null,null,null,null,null,null,[[["",0]]],null,nullnull,[[["",0]]],null,null,null,null,[[["",0]]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["cardanoblockchainpointertype",3]],[[["",0]],["cardanonativescript",3]],[[["",0]],["cardanogetnativescripthash",3]],[[["",0]],["cardanonativescripthash",3]],[[["",0]],["cardanoaddressparameterstype",3]],[[["",0]],["cardanogetaddress",3]],[[["",0]],["cardanoaddress",3]],[[["",0]],["cardanogetpublickey",3]],[[["",0]],["cardanopublickey",3]],[[["",0]],["cardanosigntxinit",3]],[[["",0]],["cardanotxinput",3]],[[["",0]],["cardanotxoutput",3]],[[["",0]],["cardanoassetgroup",3]],[[["",0]],["cardanotoken",3]],[[["",0]],["cardanopoolowner",3]],[[["",0]],["cardanopoolrelayparameters",3]],[[["",0]],["cardanopoolmetadatatype",3]],[[["",0]],["cardanopoolparameterstype",3]],[[["",0]],["cardanotxcertificate",3]],[[["",0]],["cardanotxwithdrawal",3]],[[["",0]],["cardanocatalystregistrationparameterstype",3]],[[["",0]],["cardanotxauxiliarydata",3]],[[["",0]],["cardanotxmint",3]],[[["",0]],["cardanotxcollateralinput",3]],[[["",0]],["cardanotxrequiredsigner",3]],[[["",0]],["cardanotxitemack",3]],[[["",0]],["cardanotxauxiliarydatasupplement",3]],[[["",0]],["cardanotxwitnessrequest",3]],[[["",0]],["cardanotxwitnessresponse",3]],[[["",0]],["cardanotxhostack",3]],[[["",0]],["cardanotxbodyhash",3]],[[["",0]],["cardanosigntxfinished",3]],[[["",0]],["cardanoderivationtype",4]],[[["",0]],["cardanoaddresstype",4]],[[["",0]],["cardanonativescripttype",4]],[[["",0]],["cardanonativescripthashdisplayformat",4]],[[["",0]],["cardanocertificatetype",4]],[[["",0]],["cardanopoolrelaytype",4]],[[["",0]],["cardanotxauxiliarydatasupplementtype",4]],[[["",0]],["cardanotxsigningmode",4]],[[["",0]],["cardanotxwitnesstypecardanoderivationtype",4]],["ordering",4]],[[["",0],["cardanoaddresstype",4]],["ordering",4]],[[["",0],["cardanonativescripttype",4]],["ordering",4]],[[["",0],["cardanonativescripthashdisplayformat",4]],["ordering",4]],[[["",0],["cardanocertificatetype",4]],["ordering",4]],[[["",0],["cardanopoolrelaytype",4]],["ordering",4]],[[["",0],["cardanotxauxiliarydatasupplementtype",4]],["ordering",4]],[[["",0],["cardanotxsigningmode",4]],["ordering",4]],[[["",0],["cardanotxwitnesstype",4]],["ordering",4]],null,null,[[["",0]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["cardanoderivationtype",4]],[[],["cardanoaddresstype",4]],[[],["cardanonativescripttype",4]],[[],["cardanonativescripthashdisplayformat",4]],[[],["cardanocertificatetype",4]],[[],["cardanopoolrelaytype",4]],[[],["cardanotxauxiliarydatasupplementtype",4]],[[],["cardanotxsigningmode",4]],[[],["cardanotxwitnesstype",4]],[[["",0]],["cardanoderivationtype",4]],[[["",0]],["cardanoderivationtype",4]],[[["",0]],["cardanoderivationtype",4]],[[["",0]],["cardanoderivationtype",4]],null,null,null,null,[[["",0]],["cardanonativescripthashdisplayformat",4]],null,[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0],["cardanoblockchainpointertype",3]],["bool",0]],[[["",0],["cardanonativescript",3]],["bool",0]],[[["",0],["cardanogetnativescripthash",3]],["bool",0]],[[["",0],["cardanonativescripthash",3]],["bool",0]],[[["",0],["cardanoaddressparameterstype",3]],["bool",0]],[[["",0],["cardanogetaddress",3]],["bool",0]],[[["",0],["cardanoaddress",3]],["bool",0]],[[["",0],["cardanogetpublickey",3]],["bool",0]],[[["",0],["cardanopublickey",3]],["bool",0]],[[["",0],["cardanosigntxinit",3]],["bool",0]],[[["",0],["cardanotxinput",3]],["bool",0]],[[["",0],["cardanotxoutput",3]],["bool",0]],[[["",0],["cardanoassetgroup",3]],["bool",0]],[[["",0],["cardanotoken",3]],["bool",0]],[[["",0],["cardanopoolowner",3]],["bool",0]],[[["",0],["cardanopoolrelayparameters",3]],["bool",0]],[[["",0],["cardanopoolmetadatatype",3]],["bool",0]],[[["",0],["cardanopoolparameterstype",3]],["bool",0]],[[["",0],["cardanotxcertificate",3]],["bool",0]],[[["",0],["cardanotxwithdrawal",3]],["bool",0]],[[["",0],["cardanocatalystregistrationparameterstype",3]],["bool",0]],[[["",0],["cardanotxauxiliarydata",3]],["bool",0]],[[["",0],["cardanotxmint",3]],["bool",0]],[[["",0],["cardanotxcollateralinput",3]],["bool",0]],[[["",0],["cardanotxrequiredsigner",3]],["bool",0]],[[["",0],["cardanotxitemack",3]],["bool",0]],[[["",0],["cardanotxauxiliarydatasupplement",3]],["bool",0]],[[["",0],["cardanotxwitnessrequest",3]],["bool",0]],[[["",0],["cardanotxwitnessresponse",3]],["bool",0]],[[["",0],["cardanotxhostack",3]],["bool",0]],[[["",0],["cardanotxbodyhash",3]],["bool",0]],[[["",0],["cardanosigntxfinished",3]],["bool",0]],[[["",0],["cardanoderivationtype",4]],["bool",0]],[[["",0],["cardanoaddresstype",4]],["bool",0]],[[["",0],["cardanonativescripttype",4]],["bool",0]],[[["",0],["cardanonativescripthashdisplayformat",4]],["bool",0]],[[["",0],["cardanocertificatetype",4]],["bool",0]],[[["",0],["cardanopoolrelaytype",4]],["bool",0]],[[["",0],["cardanotxauxiliarydatasupplementtype",4]],["bool",0]],[[["",0],["cardanotxsigningmode",4]],["bool",0]],[[["",0],["cardanotxwitnesstype",4]],["bool",0]],null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",0]],["option",4,[["cardanoderivationtype",4]]]],[[["i32",0]],["option",4,[["cardanoaddresstype",4]]]],[[["i32",0]],["option",4,[["cardanonativescripttype",4]]]],[[["i32",0]],["option",4,[["cardanonativescripthashdisplayformat",4]]]],[[["i32",0]],["option",4,[["cardanocertificatetype",4]]]],[[["i32",0]],["option",4,[["cardanopoolrelaytype",4]]]],[[["i32",0]],["option",4,[["cardanotxauxiliarydatasupplementtype",4]]]],[[["i32",0]],["option",4,[["cardanotxsigningmode",4]]]],[[["i32",0]],["option",4,[["cardanotxwitnesstype",4]]]],null,[[["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,[[["",0]],["str",0]],null,[[["",0]],["bool",0]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["u64",0]],null,[[["",0]],["u64",0]],null,[[["",0]]],null,[[["",0]]],null,[[["i32",0]],["bool",0]],[[["i32",0]],["bool",0]],[[["i32",0]],["bool",0]],[[["i32",0]],["bool",0]],[[["i32",0]],["bool",0]],[[["i32",0]],["bool",0]],[[["i32",0]],["bool",0]],[[["i32",0]],["bool",0]],[[["i32",0]],["bool",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],null,null,null,null,null,null,null,null,null,[[["",0]],["i64",0]],null,null,[[["",0],["cardanoblockchainpointertype",3]],["bool",0]],[[["",0],["cardanonativescript",3]],["bool",0]],[[["",0],["cardanogetnativescripthash",3]],["bool",0]],[[["",0],["cardanonativescripthash",3]],["bool",0]],[[["",0],["cardanoaddressparameterstype",3]],["bool",0]],[[["",0],["cardanogetaddress",3]],["bool",0]],[[["",0],["cardanoaddress",3]],["bool",0]],[[["",0],["cardanogetpublickey",3]],["bool",0]],[[["",0],["cardanopublickey",3]],["bool",0]],[[["",0],["cardanosigntxinit",3]],["bool",0]],[[["",0],["cardanotxinput",3]],["bool",0]],[[["",0],["cardanotxoutput",3]],["bool",0]],[[["",0],["cardanoassetgroup",3]],["bool",0]],[[["",0],["cardanotoken",3]],["bool",0]],[[["",0],["cardanopoolowner",3]],["bool",0]],[[["",0],["cardanopoolrelayparameters",3]],["bool",0]],[[["",0],["cardanopoolmetadatatype",3]],["bool",0]],[[["",0],["cardanopoolparameterstype",3]],["bool",0]],[[["",0],["cardanotxcertificate",3]],["bool",0]],[[["",0],["cardanotxwithdrawal",3]],["bool",0]],[[["",0],["cardanocatalystregistrationparameterstype",3]],["bool",0]],[[["",0],["cardanotxauxiliarydata",3]],["bool",0]],[[["",0],["cardanotxmint",3]],["bool",0]],[[["",0],["cardanotxcollateralinput",3]],["bool",0]],[[["",0],["cardanotxrequiredsigner",3]],["bool",0]],[[["",0],["cardanotxauxiliarydatasupplement",3]],["bool",0]],[[["",0],["cardanotxwitnessrequest",3]],["bool",0]],[[["",0],["cardanotxwitnessresponse",3]],["bool",0]],[[["",0],["cardanotxbodyhash",3]],["bool",0]],null,null,null,null,null,null,[[["",0],["cardanoderivationtype",4]],["option",4,[["ordering",4]]]],[[["",0],["cardanoaddresstype",4]],["option",4,[["ordering",4]]]],[[["",0],["cardanonativescripttype",4]],["option",4,[["ordering",4]]]],[[["",0],["cardanonativescripthashdisplayformat",4]],["option",4,[["ordering",4]]]],[[["",0],["cardanocertificatetype",4]],["option",4,[["ordering",4]]]],[[["",0],["cardanopoolrelaytype",4]],["option",4,[["ordering",4]]]],[[["",0],["cardanotxauxiliarydatasupplementtype",4]],["option",4,[["ordering",4]]]],[[["",0],["cardanotxsigningmode",4]],["option",4,[["ordering",4]]]],[[["",0],["cardanotxwitnesstype",4]],["option",4,[["ordering",4]]]],null,null,null,null,null,[[["",0]]],null,null,null,[[["",0]],["u32",0]],null,null,null,null,null,null,null,null,null,[[["",0]],["u32",0]],null,null,null,null,null,[[["",0]]],null,[[["",0]]],[[["",0]]],null,null,null,[[["",0]]],null,[[["",0]]],null,null,[[["",0],["cardanoaddresstype",4]]],[[["",0],["cardanoderivationtype",4]]],[[["",0],["cardanoderivationtype",4]]],[[["",0],["cardanoderivationtype",4]]],[[["",0],["cardanoderivationtype",4]]],[[["",0],["cardanonativescripthashdisplayformat",4]]],[[["",0],["cardanotxsigningmode",4]]],[[["",0],["cardanonativescripttype",4]]],[[["",0],["cardanopoolrelaytype",4]]],[[["",0],["cardanocertificatetype",4]]],[[["",0],["cardanotxauxiliarydatasupplementtype",4]]],[[["",0],["cardanotxwitnesstype",4]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,null,null,[[["",0]],["cardanotxsigningmode",4]],null,[[["",0]]],[[["",0]]],null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["u64",0]],null,null,null,[[["",0]],["cardanonativescripttype",4]],[[["",0]],["cardanopoolrelaytype",4]],[[["",0]],["cardanocertificatetype",4]],[[["",0]],["cardanotxauxiliarydatasupplementtype",4]],[[["",0]],["cardanotxwitnesstype",4]],null,null,null,null,null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0]],["u64",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["success",3]],[[["",0]],["failure",3]],[[["",0]],["buttonrequest",3]],[[["",0]],["buttonack",3]],[[["",0]],["pinmatrixrequest",3]],[[["",0]],["pinmatrixack",3]],[[["",0]],["passphraserequest",3]],[[["",0]],["passphraseack",3]],[[["",0]],["deprecatedpassphrasestaterequest",3]],[[["",0]],["deprecatedpassphrasestateack",3]],[[["",0]],["hdnodetype",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]],["failuretype",4]],[[["",0]],["buttonrequesttype",4]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0],["success",3]],["bool",0]],[[["",0],["failure",3]],["bool",0]],[[["",0],["buttonrequest",3]],["bool",0]],[[["",0],["buttonack",3]],["bool",0]],[[["",0],["pinmatrixrequest",3]],["bool",0]],[[["",0],["pinmatrixack",3]],["bool",0]],[[["",0],["passphraserequest",3]],["bool",0]],[[["",0],["passphraseack",3]],["bool",0]],[[["",0],["deprecatedpassphrasestaterequest",3]],["bool",0]],[[["",0],["deprecatedpassphrasestateack",3]],["bool",0]],[[["",0],["hdnodetype",3]],["bool",0]],null,null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["str",0]],[[["",0]],["str",0]],null,null,[[["",0],["success",3]],["bool",0]],[[["",0],["failure",3]],["bool",0]],[[["",0],["buttonrequest",3]],["bool",0]],[[["",0],["pinmatrixrequest",3]],["bool",0]],[[["",0],["pinmatrixack",3]],["bool",0]],[[["",0],["passphraserequest",3]],["bool",0]],[[["",0],["passphraseack",3]],["bool",0]],[[["",0],["deprecatedpassphrasestaterequest",3]],["bool",0]],[[["",0],["hdnodetype",3]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,null,[[["",0]],["u32",0]],null,[[["",0]],["str",0]],null,null,null,[[["",0]]],null,null,[[["",0],["failuretype",4]]],[[["",0],["buttonrequesttype",4]]],[[["",0],["pinmatrixrequesttype",4]]],[[["",0]]],[[["",0]]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["pinmatrixrequesttype",4]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["buttonrequesttype",4]],[[["",0],["",0]]],[[["",0],["buttonrequesttype",4]],["ordering",4]],[[],["buttonrequesttype",4]],[[["",0],["buttonrequesttype",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[["i32",0]],["option",4,[["buttonrequesttype",4]]]],[[["",0],["",0]]],[[]],[[["i32",0]],["bool",0]],[[["",0],["buttonrequesttype",4]],["option",4,[["ordering",4]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["failuretype",4]],[[["",0],["",0]]],[[["",0],["failuretype",4]],["ordering",4]],[[],["failuretype",4]],[[["",0],["failuretype",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[["i32",0]],["option",4,[["failuretype",4]]]],[[["",0],["",0]]],[[]],[[["i32",0]],["bool",0]],[[["",0],["failuretype",4]],["option",4,[["ordering",4]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["pinmatrixrequesttype",4]],[[["",0],["",0]]],[[["",0],["pinmatrixrequesttype",4]],["ordering",4]],[[],["pinmatrixrequesttype",4]],[[["",0],["pinmatrixrequesttype",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[["i32",0]],["option",4,[["pinmatrixrequesttype",4]]]],[[["",0],["",0]]],[[]],[[["i32",0]],["bool",0]],[[["",0],["pinmatrixrequesttype",4]],["option",4,[["ordering",4]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["u32",0]],[[["",0]],["u32",0]],null,nullstr",0]],null,[[["",0]],["debugbutton",4]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["debuglinkdecision",3]],[[["",0]],["debuglinklayout",3]],[[["",0]],["debuglinkreseedrandom",3]],[[["",0]],["debuglinkrecordscreen",3]],[[["",0]],["debuglinkgetstate",3]],[[["",0]],["debuglinkstate",3]],[[["",0]],["debuglinkstop",3]],[[["",0]],["debuglinklog",3]],[[["",0]],["debuglinkmemoryread",3]],[[["",0]],["debuglinkmemory",3]],[[["",0]],["debuglinkmemorywrite",3]],[[["",0]],["debuglinkflasherase",3]],[[["",0]],["debuglinkerasesdcard",3]],[[["",0]],["debuglinkwatchlayout",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0],["debuglinkdecision",3]],["bool",0]],[[["",0],["debuglinklayout",3]],["bool",0]],[[["",0],["debuglinkreseedrandom",3]],["bool",0]],[[["",0],["debuglinkrecordscreen",3]],["bool",0]],[[["",0],["debuglinkgetstate",3]],["bool",0]],[[["",0],["debuglinkstate",3]],["bool",0]],[[["",0],["debuglinkstop",3]],["bool",0]],[[["",0],["debuglinklog",3]],["bool",0]],[[["",0],["debuglinkmemoryread",3]],["bool",0]],[[["",0],["debuglinkmemory",3]],["bool",0]],[[["",0],["debuglinkmemorywrite",3]],["bool",0]],[[["",0],["debuglinkflasherase",3]],["bool",0]],[[["",0],["debuglinkerasesdcard",3]],["bool",0]],[[["",0],["debuglinkwatchlayout",3]],["bool",0]],[[["",0]],["bool",0]],null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0]],["bool",0]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["u32",0]],null,[[["",0]],["str",0]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]]],null,null,[[["",0]],["u32",0]],null,[[["",0]],["u32",0]],null,null,[[["",0]],["str",0]],null,[[["",0]]],[[["",0]]],null,null,[[["",0]]],null,[[["",0]],["backuptype",4]],null,[[["",0],["debuglinkdecision",3]],["bool",0]],[[["",0],["debuglinklayout",3]],["bool",0]],[[["",0],["debuglinkreseedrandom",3]],["bool",0]],[[["",0],["debuglinkrecordscreen",3]],["bool",0]],[[["",0],["debuglinkgetstate",3]],["bool",0]],[[["",0],["debuglinkstate",3]],["bool",0]],[[["",0],["debuglinklog",3]],["bool",0]],[[["",0],["debuglinkmemoryread",3]],["bool",0]],[[["",0],["debuglinkmemory",3]],["bool",0]],[[["",0],["debuglinkmemorywrite",3]],["bool",0]],[[["",0],["debuglinkflasherase",3]],["bool",0]],[[["",0],["debuglinkerasesdcard",3]],["bool",0]],[[["",0],["debuglinkwatchlayout",3]],["bool",0]],null,[[["",0]],["bool",0]],null,[[["",0]],["str",0]],null,[[["",0]],["str",0]],null,[[["",0]],["u32",0]],null,[[["",0]]],null,[[["",0]],["str",0]],null,[[["",0]],["u32",0]],null,[[["",0]],["u32",0]],null,[[["",0],["debugbutton",4]]],[[["",0],["backuptype",4]]],[[["",0],["debugswipedirection",4]]],[[["",0]],["debugswipedirection",4]],null,[[["",0]],["str",0]],null,[[["",0]],["str",0]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["u32",0]],null,[[["",0]],["bool",0]],null,[[["",0]],["bool",0]],null,[[["",0]],["bool",0]],null,[[["",0]],["bool",0]],null,[[["",0]],["bool",0]],null,[[["",0]],["u32",0]],null,[[["",0]],["u32",0]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["debugswipedirection",4]],[[["",0]],["debugbutton",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["debugswipedirection",4]],["ordering",4]],[[["",0],["debugbutton",4]],["ordering",4]],[[],["debugswipedirection",4]],[[],["debugbutton",4]],[[["",0],["debugswipedirection",4]],["bool",0]],[[["",0],["debugbutton",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["i32",0]],["option",4,[["debugswipedirection",4]]]],[[["i32",0]],["option",4,[["debugbutton",4]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[]],[[["i32",0]],["bool",0]],[[["i32",0]],["bool",0]],[[["",0],["debugswipedirection",4]],["option",4,[["ordering",4]]]],[[["",0],["debugbutton",4]],["option",4,[["ordering",4]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["str",0]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["ethereumgetpublickey",3]],[[["",0]],["ethereumpublickey",3]],[[["",0]],["ethereumgetaddress",3]],[[["",0]],["ethereumaddress",3]],[[["",0]],["ethereumsigntx",3]],[[["",0]],["ethereumsigntxeip1559",3]],[[["",0]],["ethereumtxrequest",3]],[[["",0]],["ethereumtxack",3]],[[["",0]],["ethereumsignmessage",3]],[[["",0]],["ethereummessagesignature",3]],[[["",0]],["ethereumverifymessage",3]],[[["",0]],["ethereumsigntypedhash",3]],[[["",0]],["ethereumtypeddatasignature",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["",0]]],[[["",0]]],null,null,[[["",0]],["u32",0]],[[["",0]],["u32",0]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0],["ethereumgetpublickey",3]],["bool",0]],[[["",0],["ethereumpublickey",3]],["bool",0]],[[["",0],["ethereumgetaddress",3]],["bool",0]],[[["",0],["ethereumaddress",3]],["bool",0]],[[["",0],["ethereumsigntx",3]],["bool",0]],[[["",0],["ethereumsigntxeip1559",3]],["bool",0]],[[["",0],["ethereumtxrequest",3]],["bool",0]],[[["",0],["ethereumtxack",3]],["bool",0]],[[["",0],["ethereumsignmessage",3]],["bool",0]],[[["",0],["ethereummessagesignature",3]],["bool",0]],[[["",0],["ethereumverifymessage",3]],["bool",0]],[[["",0],["ethereumsigntypedhash",3]],["bool",0]],[[["",0],["ethereumtypeddatasignature",3]],["bool",0]],null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[["",0]]],null,[[["",0],["ethereumgetpublickey",3]],["bool",0]],[[["",0],["ethereumpublickey",3]],["bool",0]],[[["",0],["ethereumgetaddress",3]],["bool",0]],[[["",0],["ethereumaddress",3]],["bool",0]],[[["",0],["ethereumsigntx",3]],["bool",0]],[[["",0],["ethereumsigntxeip1559",3]],["bool",0]],[[["",0],["ethereumtxrequest",3]],["bool",0]],[[["",0],["ethereumtxack",3]],["bool",0]],[[["",0],["ethereumsignmessage",3]],["bool",0]],[[["",0],["ethereummessagesignature",3]],["bool",0]],[[["",0],["ethereumverifymessage",3]],["bool",0]],[[["",0],["ethereumsigntypedhash",3]],["bool",0]],[[["",0],["ethereumtypeddatasignature",3]],["bool",0]],null,[[["",0]]],null,null,[[["",0]]],null,[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,null,null,null,null,[[["",0]]],null,[[["",0]]],null,[[["",0]],["u32",0]],null,[[["",0]],["str",0]],[[["",0]],["str",0]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["u32",0]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]],["ethereumaccesslist",3]],[[["",0],["",0]]],[[]],[[["",0]],["usize",0]],[[["",0],["ethereumaccesslist",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0],["ethereumaccesslist",3]],["bool",0]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["ethereumsigntypeddata",3]],[[["",0]],["ethereumtypeddatastructrequest",3]],[[["",0]],["ethereumtypeddatastructack",3]],[[["",0]],["ethereumtypeddatavaluerequest",3]],[[["",0]],["ethereumtypeddatavalueack",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0],["ethereumsigntypeddata",3]],["bool",0]],[[["",0],["ethereumtypeddatastructrequest",3]],["bool",0]],[[["",0],["ethereumtypeddatastructack",3]],["bool",0]],[[["",0],["ethereumtypeddatavaluerequest",3]],["bool",0]],[[["",0],["ethereumtypeddatavalueack",3]],["bool",0]],null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["",0]],["bool",0]],null,null,[[["",0],["ethereumsigntypeddata",3]],["bool",0]],[[["",0],["ethereumtypeddatastructrequest",3]],["bool",0]],[[["",0],["ethereumtypeddatastructack",3]],["bool",0]],[[["",0],["ethereumtypeddatavaluerequest",3]],["bool",0]],[[["",0],["ethereumtypeddatavalueack",3]],["bool",0]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]]],[[["",0]],["ethereumstructmember",3]],[[["",0]],["ethereumfieldtype",3]],[[["",0]],["ethereumdatatype",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["ethereumdatatype",4]],["ordering",4]],[[["",0]],["ethereumdatatype",4]],null,[[]],[[]],[[],["ethereumdatatype",4]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],null,[[["",0],["ethereumstructmember",3]],["bool",0]],[[["",0],["ethereumfieldtype",3]],["bool",0]],[[["",0],["ethereumdatatype",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["i32",0]],["option",4,[["ethereumdatatype",4]]]],[[["",0],["",0]]],[[]],[[]],[[]],[[["i32",0]],["bool",0]],null,[[["",0],["ethereumstructmember",3]],["bool",0]],[[["",0],["ethereumfieldtype",3]],["bool",0]],[[["",0],["ethereumdatatype",4]],["option",4,[["ordering",4]]]],[[["",0],["ethereumdatatype",4]]],[[["",0]],["u32",0]],null,[[["",0]],["str",0]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["u32",0]],[[["",0]],["u32",0]],null,null,[[["",0]],["backuptype",4]],[[["",0]],["backuptype",4]],null,null,[[["",0]]],null,[[["",0]],["bool",0]],nullbool",0]],null,[[["",0]],["filtermap",3,[["cloned",3,[["iter",3,[["i32",0]]]]]]]],null,[[["",0]]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["initialize",3]],[[["",0]],["getfeatures",3]],[[["",0]],["features",3]],[[["",0]],["lockdevice",3]],[[["",0]],["endsession",3]],[[["",0]],["applysettings",3]],[[["",0]],["applyflags",3]],[[["",0]],["changepin",3]],[[["",0]],["changewipecode",3]],[[["",0]],["sdprotect",3]],[[["",0]],["ping",3]],[[["",0]],["cancel",3]],[[["",0]],["getentropy",3]],[[["",0]],["entropy",3]],[[["",0]],["getfirmwarehash",3]],[[["",0]],["firmwarehash",3]],[[["",0]],["getfirmware",3]],[[["",0]],["firmwarechunk",3]],[[["",0]],["firmwarechunkack",3]],[[["",0]],["wipedevice",3]],[[["",0]],["loaddevice",3]],[[["",0]],["resetdevice",3]],[[["",0]],["backupdevice",3]],[[["",0]],["entropyrequest",3]],[[["",0]],["entropyack",3]],[[["",0]],["recoverydevice",3]],[[["",0]],["wordrequest",3]],[[["",0]],["wordack",3]],[[["",0]],["setu2fcounter",3]],[[["",0]],["getnextu2fcounter",3]],[[["",0]],["nextu2fcounter",3]],[[["",0]],["dopreauthorized",3]],[[["",0]],["preauthorizedrequest",3]],[[["",0]],["cancelauthorization",3]],[[["",0]],["reboottobootloader",3]],[[["",0]],["getnonce",3]],[[["",0]],["nonce",3]],[[["",0]],["backuptype",4]],[[["",0]],["safetychecklevelbackuptype",4]],["ordering",4]],[[["",0],["safetychecklevel",4]],["ordering",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["backuptype",4]],[[],["safetychecklevel",4]],[[["",0]],["bool",0]],null,[[["",0]],["str",0]],null,[[["",0]],["bool",0]],null,[[["",0]],["u32",0]],[[["",0]],["u32",0]],null,null,[[["",0]],["bool",0]],null,[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["bool",0]],null,null,null,[[["",0],["initialize",3]],["bool",0]],[[["",0],["getfeatures",3]],["bool",0]],[[["",0],["features",3]],["bool",0]],[[["",0],["lockdevice",3]],["bool",0]],[[["",0],["endsession",3]],["bool",0]],[[["",0],["applysettings",3]],["bool",0]],[[["",0],["applyflags",3]],["bool",0]],[[["",0],["changepin",3]],["bool",0]],[[["",0],["changewipecode",3]],["bool",0]],[[["",0],["sdprotect",3]],["bool",0]],[[["",0],["ping",3]],["bool",0]],[[["",0],["cancel",3]],["bool",0]],[[["",0],["getentropy",3]],["bool",0]],[[["",0],["entropy",3]],["bool",0]],[[["",0],["getfirmwarehash",3]],["bool",0]],[[["",0],["firmwarehash",3]],["bool",0]],[[["",0],["getfirmware",3]],["bool",0]],[[["",0],["firmwarechunk",3]],["bool",0]],[[["",0],["firmwarechunkack",3]],["bool",0]],[[["",0],["wipedevice",3]],["bool",0]],[[["",0],["loaddevice",3]],["bool",0]],[[["",0],["resetdevice",3]],["bool",0]],[[["",0],["backupdevice",3]],["bool",0]],[[["",0],["entropyrequest",3]],["bool",0]],[[["",0],["entropyack",3]],["bool",0]],[[["",0],["recoverydevice",3]],["bool",0]],[[["",0],["wordrequest",3]],["bool",0]],[[["",0],["wordack",3]],["bool",0]],[[["",0],["setu2fcounter",3]],["bool",0]],[[["",0],["getnextu2fcounter",3]],["bool",0]],[[["",0],["nextu2fcounter",3]],["bool",0]],[[["",0],["dopreauthorized",3]],["bool",0]],[[["",0],["preauthorizedrequest",3]],["bool",0]],[[["",0],["cancelauthorization",3]],["bool",0]],[[["",0],["reboottobootloader",3]],["bool",0]],[[["",0],["getnonce",3]],["bool",0]],[[["",0],["nonce",3]],["bool",0]],[[["",0],["backuptype",4]],["bool",0]],[[["",0],["safetychecklevel",4]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,null,null,[[["",0]],["bool",0]],null,[[["",0]],["u32",0]],null,null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",0]],["option",4,[["backuptype",4]]]],[[["i32",0]],["option",4,[["safetychecklevel",4]]]],[[["",0]],["u32",0]],null,[[["",0]],["u32",0]],null,[[["",0]],["u32",0]],null,[[["",0]],["str",0]],null,[[["",0],["",0]]],[[["",0],["",0]]],null,[[["",0]]],null,[[["",0]],["bool",0]],null,[[["",0]],["bool",0]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",0]],["bool",0]],[[["i32",0]],["bool",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],null,null,null,null,null,[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],null,null,null,null,null,null,[[["",0]],["str",0]],null,null,null,[[["",0]],["str",0]],null,[[["",0],["initialize",3]],["bool",0]],[[["",0],["features",3]],["bool",0]],[[["",0],["applysettings",3]],["bool",0]],[[["",0],["applyflags",3]],["bool",0]],[[["",0],["changepin",3]],["bool",0]],[[["",0],["changewipecode",3]],["bool",0]],[[["",0],["sdprotect",3]],["bool",0]],[[["",0],["ping",3]],["bool",0]],[[["",0],["getentropy",3]],["bool",0]],[[["",0],["entropy",3]],["bool",0]],[[["",0],["getfirmwarehash",3]],["bool",0]],[[["",0],["firmwarehash",3]],["bool",0]],[[["",0],["firmwarechunk",3]],["bool",0]],[[["",0],["loaddevice",3]],["bool",0]],[[["",0],["resetdevice",3]],["bool",0]],[[["",0],["entropyack",3]],["bool",0]],[[["",0],["recoverydevice",3]],["bool",0]],[[["",0],["wordrequest",3]],["bool",0]],[[["",0],["wordack",3]],["bool",0]],[[["",0],["setu2fcounter",3]],["bool",0]],[[["",0],["nextu2fcounter",3]],["bool",0]],[[["",0],["nonce",3]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,null,[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,null,null,null,[[["",0]],["sdprotectoperationtype",4]],null,[[["",0],["backuptype",4]],["option",4,[["ordering",4]]]],[[["",0],["safetychecklevel",4]],["option",4,[["ordering",4]]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,null,[[["",0]],["bool",0]],null,[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,null,null,null,[[["",0]],["u32",0]],null,null,[[["",0]],["str",0]],null,[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,null,null,[[["",0],["capability",4]]],null,[[["",0]],["bool",0]],null,[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,null,[[["",0]]],null,[[["",0]],["safetychecklevel",4]],[[["",0]],["safetychecklevel",4]],null,null,[[["",0]],["bool",0]],null,null,[[["",0]],["bool",0]],null,[[["",0]]],[[["",0]]],null,null,[[["",0],["backuptype",4]]],[[["",0],["backuptype",4]]],[[["",0],["sdprotectoperationtype",4]]],[[["",0],["safetychecklevel",4]]],[[["",0],["safetychecklevel",4]]],[[["",0],["recoverydevicetype",4]]],[[["",0],["wordrequesttype",4]]],null,[[["",0]],["bool",0]],null,[[["",0]],["bool",0]],null,[[["",0]],["bool",0]],null,[[["",0]],["u32",0]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["recoverydevicetype",4]],[[["",0]],["wordrequesttype",4]],null,null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],null,null,null,null,null,[[["",0]],["bool",0]],null,[[["",0]],["bool",0]],null,[[["",0]],["bool",0]],null,[[["",0]],["str",0]],null,[[["",0]],["bool",0]],null,null,[[["",0]],["u32",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["capability",4]],[[["",0],["",0]]],[[["",0],["capability",4]],["ordering",4]],[[],["capability",4]],[[["",0],["capability",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[["i32",0]],["option",4,[["capability",4]]]],[[["",0],["",0]]],[[]],[[["i32",0]],["bool",0]],[[["",0],["capability",4]],["option",4,[["ordering",4]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["recoverydevicetype",4]],[[["",0],["",0]]],[[["",0],["recoverydevicetype",4]],["ordering",4]],[[],["recoverydevicetype",4]],[[["",0],["recoverydevicetype",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[["i32",0]],["option",4,[["recoverydevicetype",4]]]],[[["",0],["",0]]],[[]],[[["i32",0]],["bool",0]],[[["",0],["recoverydevicetype",4]],["option",4,[["ordering",4]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["sdprotectoperationtype",4]],[[["",0],["",0]]],[[["",0],["sdprotectoperationtype",4]],["ordering",4]],[[],["sdprotectoperationtype",4]],[[["",0],["sdprotectoperationtype",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[["i32",0]],["option",4,[["sdprotectoperationtype",4]]]],[[["",0],["",0]]],[[]],[[["i32",0]],["bool",0]],[[["",0],["sdprotectoperationtype",4]],["option",4,[["ordering",4]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["wordrequesttype",4]],[[["",0],["",0]]],[[["",0],["wordrequesttype",4]],["ordering",4]],[[],["wordrequesttype",4]],[[["",0],["wordrequesttype",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[["i32",0]],["option",4,[["wordrequesttype",4]]]],[[["",0],["",0]]],[[]],[[["i32",0]],["bool",0]],[[["",0],["wordrequesttype",4]],["option",4,[["ordering",4]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["u32",0]],null,null,[[["",0]]],[[["",0]]],null,null,null,null,null,null,null,null,[[["",0]],["u64",0]],[[["",0]],["u64",0]],null,nullu32",0]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["monerotransactionsourceentry",3]],[[["",0]],["monerotransactiondestinationentry",3]],[[["",0]],["monerotransactionrsigdata",3]],[[["",0]],["monerogetaddress",3]],[[["",0]],["moneroaddress",3]],[[["",0]],["monerogetwatchkey",3]],[[["",0]],["monerowatchkey",3]],[[["",0]],["monerotransactioninitrequest",3]],[[["",0]],["monerotransactioninitack",3]],[[["",0]],["monerotransactionsetinputrequest",3]],[[["",0]],["monerotransactionsetinputack",3]],[[["",0]],["monerotransactioninputvinirequest",3]],[[["",0]],["monerotransactioninputviniack",3]],[[["",0]],["monerotransactionallinputssetrequest",3]],[[["",0]],["monerotransactionallinputssetack",3]],[[["",0]],["monerotransactionsetoutputrequest",3]],[[["",0]],["monerotransactionsetoutputack",3]],[[["",0]],["monerotransactionalloutsetrequest",3]],[[["",0]],["monerotransactionalloutsetack",3]],[[["",0]],["monerotransactionsigninputrequest",3]],[[["",0]],["monerotransactionsigninputack",3]],[[["",0]],["monerotransactionfinalrequest",3]],[[["",0]],["monerotransactionfinalack",3]],[[["",0]],["monerokeyimageexportinitrequest",3]],[[["",0]],["monerokeyimageexportinitack",3]],[[["",0]],["monerokeyimagesyncsteprequest",3]],[[["",0]],["monerokeyimagesyncstepack",3]],[[["",0]],["monerokeyimagesyncfinalrequest",3]],[[["",0]],["monerokeyimagesyncfinalack",3]],[[["",0]],["monerogettxkeyrequest",3]],[[["",0]],["monerogettxkeyack",3]],[[["",0]],["moneroliverefreshstartrequest",3]],[[["",0]],["moneroliverefreshstartack",3]],[[["",0]],["moneroliverefreshsteprequest",3]],[[["",0]],["moneroliverefreshstepack",3]],[[["",0]],["moneroliverefreshfinalrequest",3]],[[["",0]],["moneroliverefreshfinalack",3]],[[["",0]],["debugmonerodiagrequest",3]],[[["",0]],["debugmonerodiagack",3]],[[["",0]],["moneronetworktypemoneronetworktype",4]],["ordering",4]],[[["",0]]],null,[[["",0]]],[[["",0]]],null,null,[[["",0]]],[[["",0]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["moneronetworktype",4]],null,[[["",0]]],null,[[["",0]]],null,[[["",0]]],null,[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0],["monerotransactionsourceentry",3]],["bool",0]],[[["",0],["monerotransactiondestinationentry",3]],["bool",0]],[[["",0],["monerotransactionrsigdata",3]],["bool",0]],[[["",0],["monerogetaddress",3]],["bool",0]],[[["",0],["moneroaddress",3]],["bool",0]],[[["",0],["monerogetwatchkey",3]],["bool",0]],[[["",0],["monerowatchkey",3]],["bool",0]],[[["",0],["monerotransactioninitrequest",3]],["bool",0]],[[["",0],["monerotransactioninitack",3]],["bool",0]],[[["",0],["monerotransactionsetinputrequest",3]],["bool",0]],[[["",0],["monerotransactionsetinputack",3]],["bool",0]],[[["",0],["monerotransactioninputvinirequest",3]],["bool",0]],[[["",0],["monerotransactioninputviniack",3]],["bool",0]],[[["",0],["monerotransactionallinputssetrequest",3]],["bool",0]],[[["",0],["monerotransactionallinputssetack",3]],["bool",0]],[[["",0],["monerotransactionsetoutputrequest",3]],["bool",0]],[[["",0],["monerotransactionsetoutputack",3]],["bool",0]],[[["",0],["monerotransactionalloutsetrequest",3]],["bool",0]],[[["",0],["monerotransactionalloutsetack",3]],["bool",0]],[[["",0],["monerotransactionsigninputrequest",3]],["bool",0]],[[["",0],["monerotransactionsigninputack",3]],["bool",0]],[[["",0],["monerotransactionfinalrequest",3]],["bool",0]],[[["",0],["monerotransactionfinalack",3]],["bool",0]],[[["",0],["monerokeyimageexportinitrequest",3]],["bool",0]],[[["",0],["monerokeyimageexportinitack",3]],["bool",0]],[[["",0],["monerokeyimagesyncsteprequest",3]],["bool",0]],[[["",0],["monerokeyimagesyncstepack",3]],["bool",0]],[[["",0],["monerokeyimagesyncfinalrequest",3]],["bool",0]],[[["",0],["monerokeyimagesyncfinalack",3]],["bool",0]],[[["",0],["monerogettxkeyrequest",3]],["bool",0]],[[["",0],["monerogettxkeyack",3]],["bool",0]],[[["",0],["moneroliverefreshstartrequest",3]],["bool",0]],[[["",0],["moneroliverefreshstartack",3]],["bool",0]],[[["",0],["moneroliverefreshsteprequest",3]],["bool",0]],[[["",0],["moneroliverefreshstepack",3]],["bool",0]],[[["",0],["moneroliverefreshfinalrequest",3]],["bool",0]],[[["",0],["moneroliverefreshfinalack",3]],["bool",0]],[[["",0],["debugmonerodiagrequest",3]],["bool",0]],[[["",0],["debugmonerodiagack",3]],["bool",0]],[[["",0],["moneronetworktype",4]],["bool",0]],[[["",0]]],null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",0]],["option",4,[["moneronetworktype",4]]]],[[["",0]]],null,null,[[["",0],["",0]]],null,null,[[["",0]],["u64",0]],[[["",0]],["u64",0]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],null,[[["",0]],["bool",0]],null,[[["",0]],["bool",0]],null,[[["i32",0]],["bool",0]],[[["",0]]],null,null,[[["",0]]],[[["",0]]],null,null,[[["",0]],["u32",0]],null,null,null,null,null,null,null,null,null,[[["",0],["monerotransactionsourceentry",3]],["bool",0]],[[["",0],["monerotransactiondestinationentry",3]],["bool",0]],[[["",0],["monerotransactionrsigdata",3]],["bool",0]],[[["",0],["monerogetaddress",3]],["bool",0]],[[["",0],["moneroaddress",3]],["bool",0]],[[["",0],["monerogetwatchkey",3]],["bool",0]],[[["",0],["monerowatchkey",3]],["bool",0]],[[["",0],["monerotransactioninitrequest",3]],["bool",0]],[[["",0],["monerotransactioninitack",3]],["bool",0]],[[["",0],["monerotransactionsetinputrequest",3]],["bool",0]],[[["",0],["monerotransactionsetinputack",3]],["bool",0]],[[["",0],["monerotransactioninputvinirequest",3]],["bool",0]],[[["",0],["monerotransactionallinputssetack",3]],["bool",0]],[[["",0],["monerotransactionsetoutputrequest",3]],["bool",0]],[[["",0],["monerotransactionsetoutputack",3]],["bool",0]],[[["",0],["monerotransactionalloutsetrequest",3]],["bool",0]],[[["",0],["monerotransactionalloutsetack",3]],["bool",0]],[[["",0],["monerotransactionsigninputrequest",3]],["bool",0]],[[["",0],["monerotransactionsigninputack",3]],["bool",0]],[[["",0],["monerotransactionfinalack",3]],["bool",0]],[[["",0],["monerokeyimageexportinitrequest",3]],["bool",0]],[[["",0],["monerokeyimagesyncsteprequest",3]],["bool",0]],[[["",0],["monerokeyimagesyncstepack",3]],["bool",0]],[[["",0],["monerokeyimagesyncfinalack",3]],["bool",0]],[[["",0],["monerogettxkeyrequest",3]],["bool",0]],[[["",0],["monerogettxkeyack",3]],["bool",0]],[[["",0],["moneroliverefreshstartrequest",3]],["bool",0]],[[["",0],["moneroliverefreshsteprequest",3]],["bool",0]],[[["",0],["moneroliverefreshstepack",3]],["bool",0]],[[["",0],["debugmonerodiagrequest",3]],["bool",0]],[[["",0],["debugmonerodiagack",3]],["bool",0]],[[["",0]],["moneronetworktype",4]],[[["",0]],["moneronetworktype",4]],[[["",0]],["moneronetworktype",4]],[[["",0]],["moneronetworktype",4]],[[["",0]],["moneronetworktype",4]],[[["",0]],["moneronetworktype",4]],null,null,null,null,null,null,null,[[["",0]],["u32",0]],null,[[["",0]]],null,[[["",0]],["u32",0]],[[["",0]],["u32",0]],null,null,[[["",0]]],null,null,[[["",0]]],null,null,[[["",0]],["u64",0]],[[["",0]],["u64",0]],null,null,[[["",0]],["u64",0]],[[["",0]],["u64",0]],null,null,[[["",0],["moneronetworktype",4]],["option",4,[["ordering",4]]]],[[["",0]]],null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],null,null,null,null,[[["",0]]],[[["",0]]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],null,null,null,[[["",0]]],null,[[["",0]],["bool",0]],null,null,null,[[["",0]]],null,[[["",0]],["u64",0]],null,[[["",0]],["u64",0]],null,[[["",0]],["u32",0]],null,null,[[["",0]]],null,null,null,null,null,null,null,[[["",0]],["u32",0]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],null,null,null,null,null,[[["",0],["moneronetworktype",4]]],[[["",0],["moneronetworktype",4]]],[[["",0],["moneronetworktype",4]]],[[["",0],["moneronetworktype",4]]],[[["",0],["moneronetworktype",4]]],[[["",0],["moneronetworktype",4]]],[[["",0]],["bool",0]],null,[[["",0]]],null,[[["",0]]],[[["",0]]],null,null,null,null,null,null,null,[[["",0]],["u32",0]],null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0]]],null,[[["",0]]],null,null,[[["",0]]],null,[[["",0]]],null,[[["",0]]],null,null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["u32",0]],null,[[["",0]]],null,[[["",0]]],[[["",0]]],[[["",0]]],null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],null,null,null,[[["",0]]],null,[[["",0]]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]],["monerosubaddressindiceslist",3]],[[["",0],["",0]]],[[]],[[["",0]],["usize",0]],[[["",0],["monerosubaddressindiceslist",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],null,[[["",0],["monerosubaddressindiceslist",3]],["bool",0]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]],["moneroexportedkeyimage",3]],[[["",0],["",0]]],[[]],[[["",0]],["usize",0]],[[["",0],["moneroexportedkeyimage",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0]]],null,[[["",0],["moneroexportedkeyimage",3]],["bool",0]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]],["monerotransferdetails",3]],[[["",0],["",0]]],[[]],[[["",0]],["usize",0]],[[["",0],["monerotransferdetails",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],null,[[]],[[["",0],["monerotransferdetails",3]],["bool",0]],null,[[["",0]],["u32",0]],null,[[["",0]],["u32",0]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],null,[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]],["moneroringctsig",3]],[[["",0],["",0]]],[[]],[[["",0]],["usize",0]],[[["",0],["moneroringctsig",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0]]],null,[[["",0],["moneroringctsig",3]],["bool",0]],[[["",0]],["u32",0]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["u64",0]],null,[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]],["moneroaccountpublicaddress",3]],[[["",0],["",0]]],[[]],[[["",0]],["usize",0]],[[["",0],["moneroaccountpublicaddress",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0],["moneroaccountpublicaddress",3]],["bool",0]],[[["",0]]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]]],null,null,[[["",0]],["u32",0]],null,[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]]],[[["",0]],["u32",0]],null,[[["",0]],["monerotransactiondata",3]],[[["",0],["",0]]],[[]],[[["",0]],["usize",0]],[[["",0],["monerotransactiondata",3]],["bool",0]],[[["",0]],["u64",0]],null,[[["",0],["formatter",3]],["result",6]],[[]],[[["",0]],["u32",0]],null,null,[[]],null,[[["",0]],["u32",0]],null,[[["",0]]],null,[[["",0],["monerotransactiondata",3]],["bool",0]],[[["",0]],["u32",0]],null,null,[[["",0]]],null,null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["u64",0]],null,[[["",0]],["u32",0]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]]],[[["",0]],["monerooutputentry",3]],[[["",0]],["moneromultisigklrki",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0],["monerooutputentry",3]],["bool",0]],[[["",0],["moneromultisigklrki",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0]],["u64",0]],null,[[]],[[]],[[["",0]]],null,null,[[["",0]]],null,[[["",0]]],null,null,[[["",0],["monerooutputentry",3]],["bool",0]],[[["",0],["moneromultisigklrki",3]],["bool",0]],[[["",0]]],null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]],["monerorctkeypublic",3]],[[["",0],["",0]]],null,[[]],null,[[["",0]],["usize",0]],[[["",0],["monerorctkeypublic",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0],["monerorctkeypublic",3]],["bool",0]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["nemgetaddress",3]],[[["",0]],["nemaddress",3]],[[["",0]],["nemsigntx",3]],[[["",0]],["nemsignedtx",3]],[[["",0]],["nemdecryptmessage",3]],[[["",0]],["nemdecryptedmessage",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]],["bool",0]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0],["nemgetaddress",3]],["bool",0]],[[["",0],["nemaddress",3]],["bool",0]],[[["",0],["nemsigntx",3]],["bool",0]],[[["",0],["nemsignedtx",3]],["bool",0]],[[["",0],["nemdecryptmessage",3]],["bool",0]],[[["",0],["nemdecryptedmessage",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["",0],["nemgetaddress",3]],["bool",0]],[[["",0],["nemaddress",3]],["bool",0]],[[["",0],["nemsigntx",3]],["bool",0]],[[["",0],["nemsignedtx",3]],["bool",0]],[[["",0],["nemdecryptmessage",3]],["bool",0]],[[["",0],["nemdecryptedmessage",3]],["bool",0]],null,[[["",0]],["u32",0]],[[["",0]],["u32",0]],null,null,[[["",0]]],null,null,null,[[["",0]]],null,[[["",0]],["bool",0]],null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["nemtransactioncommon",3]],[[["",0]],["nemtransfer",3]],[[["",0]],["nemprovisionnamespace",3]],[[["",0]],["nemmosaiccreation",3]],[[["",0]],["nemmosaicsupplychange",3]],[[["",0]],["nemaggregatemodification",3]],[[["",0]],["nemimportancetransfer",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0],["nemtransactioncommon",3]],["bool",0]],[[["",0],["nemtransfer",3]],["bool",0]],[[["",0],["nemprovisionnamespace",3]],["bool",0]],[[["",0],["nemmosaiccreation",3]],["bool",0]],[[["",0],["nemmosaicsupplychange",3]],["bool",0]],[[["",0],["nemaggregatemodification",3]],["bool",0]],[[["",0],["nemimportancetransfer",3]],["bool",0]],null,null,null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["nemimportancetransfermode",4]],null,null,null,null,null,null,[[["",0],["nemtransactioncommon",3]],["bool",0]],[[["",0],["nemtransfer",3]],["bool",0]],[[["",0],["nemprovisionnamespace",3]],["bool",0]],[[["",0],["nemmosaiccreation",3]],["bool",0]],[[["",0],["nemmosaicsupplychange",3]],["bool",0]],[[["",0],["nemaggregatemodification",3]],["bool",0]],[[["",0],["nemimportancetransfer",3]],["bool",0]],null,null,null,null,null,[[["",0]],["u32",0]],null,[[["",0]],["str",0]],null,[[["",0]]],null,[[["",0]]],null,null,null,[[["",0]],["i32",0]],null,[[["",0],["nemimportancetransfermode",4]]],[[["",0],["nemsupplychangetype",4]]],[[["",0]]],null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["nemsupplychangetype",4]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]],["nemcosignatorymodification",3]],[[["",0],["",0]]],[[]],[[["",0]],["usize",0]],[[["",0],["nemcosignatorymodification",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0],["nemcosignatorymodification",3]],["bool",0]],null,null,[[["",0],["nemmodificationtype",4]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["nemmodificationtype",4]],null,[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["nemmodificationtype",4]],[[["",0],["",0]]],[[["",0],["nemmodificationtype",4]],["ordering",4]],[[],["nemmodificationtype",4]],[[["",0],["nemmodificationtype",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[["i32",0]],["option",4,[["nemmodificationtype",4]]]],[[["",0],["",0]]],[[]],[[["i32",0]],["bool",0]],[[["",0],["nemmodificationtype",4]],["option",4,[["ordering",4]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["nemimportancetransfermode",4]],[[["",0],["",0]]],[[["",0],["nemimportancetransfermode",4]],["ordering",4]],[[],["nemimportancetransfermode",4]],[[["",0],["nemimportancetransfermode",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[["i32",0]],["option",4,[["nemimportancetransfermode",4]]]],[[["",0],["",0]]],[[]],[[["i32",0]],["bool",0]],[[["",0],["nemimportancetransfermode",4]],["option",4,[["ordering",4]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]],["nemmosaicdefinition",3]],[[["",0],["",0]]],[[]],null,[[["",0]],["u32",0]],null,[[["",0]],["usize",0]],[[["",0],["nemmosaicdefinition",3]],["bool",0]],[[["",0]],["u64",0]],null,[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0]],["nemmosaiclevy",4]],null,[[["",0]],["str",0]],null,[[["",0]],["str",0]],null,[[["",0]],["str",0]],null,null,[[["",0]],["bool",0]],null,[[["",0]],["str",0]],null,null,[[["",0],["nemmosaicdefinition",3]],["bool",0]],null,null,[[["",0],["nemmosaiclevy",4]]],[[["",0]],["u64",0]],null,[[["",0]],["str",0]],null,[[["",0]]],[[["",0]],["bool",0]],null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["nemmosaiclevy",4]],[[["",0],["",0]]],[[["",0],["nemmosaiclevy",4]],["ordering",4]],[[],["nemmosaiclevy",4]],[[["",0],["nemmosaiclevy",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[["i32",0]],["option",4,[["nemmosaiclevy",4]]]],[[["",0],["",0]]],[[]],[[["i32",0]],["bool",0]],[[["",0],["nemmosaiclevy",4]],["option",4,[["ordering",4]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["nemsupplychangetype",4]],[[["",0],["",0]]],[[["",0],["nemsupplychangetype",4]],["ordering",4]],[[],["nemsupplychangetype",4]],[[["",0],["nemsupplychangetype",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[["i32",0]],["option",4,[["nemsupplychangetype",4]]]],[[["",0],["",0]]],[[]],[[["i32",0]],["bool",0]],[[["",0],["nemsupplychangetype",4]],["option",4,[["ordering",4]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]],["nemmosaic",3]],[[["",0],["",0]]],[[]],[[["",0]],["usize",0]],[[["",0],["nemmosaic",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],null,null,[[["",0],["nemmosaic",3]],["bool",0]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["ripplegetaddress",3]],[[["",0]],["rippleaddress",3]],[[["",0]],["ripplesigntx",3]],[[["",0]],["ripplesignedtx",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[]],[[]],[[]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0],["ripplegetaddress",3]],["bool",0]],[[["",0],["rippleaddress",3]],["bool",0]],[[["",0],["ripplesigntx",3]],["bool",0]],[[["",0],["ripplesignedtx",3]],["bool",0]],null,[[["",0]],["u32",0]],null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["u32",0]],null,[[["",0],["ripplegetaddress",3]],["bool",0]],[[["",0],["rippleaddress",3]],["bool",0]],[[["",0],["ripplesigntx",3]],["bool",0]],[[["",0],["ripplesignedtx",3]],["bool",0]],null,null,null,null,[[["",0]],["bool",0]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]],["ripplepayment",3]],[[["",0],["",0]]],[[]],null,[[["",0]],["u32",0]],null,[[["",0]],["usize",0]],[[["",0],["ripplepayment",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0],["ripplepayment",3]],["bool",0]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["str",0]],null,[[["",0]],["stellarassettype",4]],nullnull,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["u32",0]],null,[[["",0]],["stellarasset",3]],[[["",0]],["stellargetaddress",3]],[[["",0]],["stellaraddress",3]],[[["",0]],["stellarsigntx",3]],[[["",0]],["stellartxoprequest",3]],[[["",0]],["stellarpaymentop",3]],[[["",0]],["stellarcreateaccountop",3]],[[["",0]],["stellarpathpaymentstrictreceiveop",3]],[[["",0]],["stellarpathpaymentstrictsendop",3]],[[["",0]],["stellarmanagesellofferop",3]],[[["",0]],["stellarmanagebuyofferop",3]],[[["",0]],["stellarcreatepassivesellofferop",3]],[[["",0]],["stellarsetoptionsop",3]],[[["",0]],["stellarchangetrustop",3]],[[["",0]],["stellarallowtrustop",3]],[[["",0]],["stellaraccountmergeop",3]],[[["",0]],["stellarmanagedataop",3]],[[["",0]],["stellarbumpsequenceop",3]],[[["",0]],["stellarsignedtx",3]],[[["",0]],["stellarassettype",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["stellarassettype",4]],["ordering",4]],[[["",0]],["str",0]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["stellarassettype",4]],null,null,null,null,null,null,null,null,[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0],["stellarasset",3]],["bool",0]],[[["",0],["stellargetaddress",3]],["bool",0]],[[["",0],["stellaraddress",3]],["bool",0]],[[["",0],["stellarsigntx",3]],["bool",0]],[[["",0],["stellartxoprequest",3]],["bool",0]],[[["",0],["stellarpaymentop",3]],["bool",0]],[[["",0],["stellarcreateaccountop",3]],["bool",0]],[[["",0],["stellarpathpaymentstrictreceiveop",3]],["bool",0]],[[["",0],["stellarpathpaymentstrictsendop",3]],["bool",0]],[[["",0],["stellarmanagesellofferop",3]],["bool",0]],[[["",0],["stellarmanagebuyofferop",3]],["bool",0]],[[["",0],["stellarcreatepassivesellofferop",3]],["bool",0]],[[["",0],["stellarsetoptionsop",3]],["bool",0]],[[["",0],["stellarchangetrustop",3]],["bool",0]],[[["",0],["stellarallowtrustop",3]],["bool",0]],[[["",0],["stellaraccountmergeop",3]],["bool",0]],[[["",0],["stellarmanagedataop",3]],["bool",0]],[[["",0],["stellarbumpsequenceop",3]],["bool",0]],[[["",0],["stellarsignedtx",3]],["bool",0]],[[["",0],["stellarassettype",4]],["bool",0]],null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",0]],["option",4,[["stellarassettype",4]]]],[[["",0],["",0]]],[[["",0]],["u32",0]],null,[[["",0]],["str",0]],null,[[["",0]],["str",0]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["i32",0]],["bool",0]],[[["",0]],["str",0]],null,null,null,[[["",0]],["u32",0]],null,[[["",0]],["u32",0]],null,[[["",0]],["u32",0]],null,[[["",0]]],null,[[["",0]],["u64",0]],null,[[["",0]],["str",0]],null,[[["",0]],["stellarmemotype",4]],null,[[["",0],["stellarasset",3]],["bool",0]],[[["",0],["stellargetaddress",3]],["bool",0]],[[["",0],["stellaraddress",3]],["bool",0]],[[["",0],["stellarsigntx",3]],["bool",0]],[[["",0],["stellarpaymentop",3]],["bool",0]],[[["",0],["stellarcreateaccountop",3]],["bool",0]],[[["",0],["stellarpathpaymentstrictreceiveop",3]],["bool",0]],[[["",0],["stellarpathpaymentstrictsendop",3]],["bool",0]],[[["",0],["stellarmanagesellofferop",3]],["bool",0]],[[["",0],["stellarmanagebuyofferop",3]],["bool",0]],[[["",0],["stellarcreatepassivesellofferop",3]],["bool",0]],[[["",0],["stellarsetoptionsop",3]],["bool",0]],[[["",0],["stellarchangetrustop",3]],["bool",0]],[[["",0],["stellarallowtrustop",3]],["bool",0]],[[["",0],["stellaraccountmergeop",3]],["bool",0]],[[["",0],["stellarmanagedataop",3]],["bool",0]],[[["",0],["stellarbumpsequenceop",3]],["bool",0]],[[["",0],["stellarsignedtx",3]],["bool",0]],null,null,null,null,null,[[["",0],["stellarassettype",4]],["option",4,[["ordering",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["stellarassettype",4]]],[[["",0]],["u32",0]],null,[[["",0],["stellarmemotype",4]]],[[["",0],["stellarsignertype",4]]],[[["",0],["stellarassettype",4]]],[[["",0]],["bool",0]],null,null,[[["",0]]],null,[[["",0]],["stellarsignertype",4]],null,[[["",0]],["u32",0]],null,[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["stellarassettype",4]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["stellarsignertype",4]],[[["",0],["",0]]],[[["",0],["stellarsignertype",4]],["ordering",4]],[[],["stellarsignertype",4]],[[["",0],["stellarsignertype",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[["i32",0]],["option",4,[["stellarsignertype",4]]]],[[["",0],["",0]]],[[]],[[["i32",0]],["bool",0]],[[["",0],["stellarsignertype",4]],["option",4,[["ordering",4]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["stellarmemotype",4]],[[["",0],["",0]]],[[["",0],["stellarmemotype",4]],["ordering",4]],[[],["stellarmemotype",4]],[[["",0],["stellarmemotype",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[["i32",0]],["option",4,[["stellarmemotype",4]]]],[[["",0],["",0]]],[[]],[[["i32",0]],["bool",0]],[[["",0],["stellarmemotype",4]],["option",4,[["ordering",4]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["tezosgetaddress",3]],[[["",0]],["tezosaddress",3]],[[["",0]],["tezosgetpublickey",3]],[[["",0]],["tezospublickey",3]],[[["",0]],["tezossigntx",3]],[[["",0]],["tezossignedtx",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0],["tezosgetaddress",3]],["bool",0]],[[["",0],["tezosaddress",3]],["bool",0]],[[["",0],["tezosgetpublickey",3]],["bool",0]],[[["",0],["tezospublickey",3]],["bool",0]],[[["",0],["tezossigntx",3]],["bool",0]],[[["",0],["tezossignedtx",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["tezosgetaddress",3]],["bool",0]],[[["",0],["tezosaddress",3]],["bool",0]],[[["",0],["tezosgetpublickey",3]],["bool",0]],[[["",0],["tezospublickey",3]],["bool",0]],[[["",0],["tezossigntx",3]],["bool",0]],[[["",0],["tezossignedtx",3]],["bool",0]],null,null,null,null,null,[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,[[["",0]],["tezosballottype",4]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["tezoscontractid",3]],[[["",0]],["tezosrevealop",3]],[[["",0]],["tezostransactionop",3]],[[["",0]],["tezosoriginationop",3]],[[["",0]],["tezosdelegationop",3]],[[["",0]],["tezosproposalop",3]],[[["",0]],["tezosballotop",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],null,[[["",0]]],null,null,null,[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0],["tezoscontractid",3]],["bool",0]],[[["",0],["tezosrevealop",3]],["bool",0]],[[["",0],["tezostransactionop",3]],["bool",0]],[[["",0],["tezosoriginationop",3]],["bool",0]],[[["",0],["tezosdelegationop",3]],["bool",0]],[[["",0],["tezosproposalop",3]],["bool",0]],[[["",0],["tezosballotop",3]],["bool",0]],null,null,null,null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]]],null,[[["",0],["tezoscontractid",3]],["bool",0]],[[["",0],["tezosrevealop",3]],["bool",0]],[[["",0],["tezostransactionop",3]],["bool",0]],[[["",0],["tezosoriginationop",3]],["bool",0]],[[["",0],["tezosdelegationop",3]],["bool",0]],[[["",0],["tezosproposalop",3]],["bool",0]],[[["",0],["tezosballotop",3]],["bool",0]],[[["",0]]],null,null,null,null,null,null,null,null,[[["",0],["tezosballottype",4]]],[[["",0],["tezoscontracttype",4]]],null,null,null,null,null,null,[[["",0]],["bool",0]],null,null,null,null,null,[[["",0]],["tezoscontracttype",4]],null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["tezosballottype",4]],[[["",0],["",0]]],[[["",0],["tezosballottype",4]],["ordering",4]],[[],["tezosballottype",4]],[[["",0],["tezosballottype",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[["i32",0]],["option",4,[["tezosballottype",4]]]],[[["",0],["",0]]],[[]],[[["i32",0]],["bool",0]],[[["",0],["tezosballottype",4]],["option",4,[["ordering",4]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["tezoscontracttype",4]],[[["",0],["",0]]],[[["",0],["tezoscontracttype",4]],["ordering",4]],[[],["tezoscontracttype",4]],[[["",0],["tezoscontracttype",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[["i32",0]],["option",4,[["tezoscontracttype",4]]]],[[["",0],["",0]]],[[]],[[["i32",0]],["bool",0]],[[["",0],["tezoscontracttype",4]],["option",4,[["ordering",4]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["bool",0]],null,[[["",0]]],[[["",0]],["tezosparametersmanager",3]],[[["",0],["",0]]],[[]],[[["",0]],["usize",0]],[[["",0],["tezosparametersmanager",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0],["tezosparametersmanager",3]],["bool",0]],[[["",0]]],null,null,[[["",0]]],null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]],["tezosmanagertransfer",3]],[[["",0],["",0]]],[[]],null,[[["",0]],["usize",0]],[[["",0],["tezosmanagertransfer",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0],["tezosmanagertransfer",3]],["bool",0]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["webauthnlistresidentcredentials",3]],[[["",0]],["webauthnaddresidentcredential",3]],[[["",0]],["webauthnremoveresidentcredential",3]],[[["",0]],["webauthncredentials",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]]],null,null,[[]],[[]],[[]],[[]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0],["webauthnlistresidentcredentials",3]],["bool",0]],[[["",0],["webauthnaddresidentcredential",3]],["bool",0]],[[["",0],["webauthnremoveresidentcredential",3]],["bool",0]],[[["",0],["webauthncredentials",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["",0]],["u32",0]],null,[[]],[[]],[[]],[[]],[[["",0],["webauthnaddresidentcredential",3]],["bool",0]],[[["",0],["webauthnremoveresidentcredential",3]],["bool",0]],[[["",0],["webauthncredentials",3]],["bool",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[["",0]],["i32",0]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]],["webauthncredential",3]],[[["",0],["",0]]],[[["",0]],["u32",0]],null,[[["",0]],["i32",0]],null,[[]],[[["",0]],["usize",0]],[[["",0],["webauthncredential",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[["",0]],["bool",0]],null,[[["",0]]],null,[[["",0]],["u32",0]],null,[[]],[[["",0],["webauthncredential",3]],["bool",0]],[[["",0]],["str",0]],null,[[["",0]],["str",0]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["bool",0]],null,[[["",0]],["str",0]],null,[[["",0]]],null,[[["",0]],["str",0]],null],"p":[[4,"MessageType"],[8,"TrezorMessage"],[4,"AmountUnit"],[4,"InputScriptType"],[4,"OutputScriptType"],[4,"DecredStakingSpendType"],[3,"TxOutput"],[3,"Address"],[3,"MessageSignature"],[3,"VerifyMessage"],[3,"MultisigRedeemScriptType"],[3,"GetPublicKey"],[3,"GetAddress"],[3,"GetOwnershipId"],[3,"SignMessage"],[3,"TxInput"],[3,"GetOwnershipProof"],[3,"AuthorizeCoinJoin"],[3,"TxAckPaymentRequest"],[3,"PrevOutput"],[3,"SignTx"],[3,"PublicKey"],[3,"OwnershipId"],[3,"TxRequest"],[3,"TxAck"],[3,"PrevTx"],[3,"PrevInput"],[3,"TxAckInput"],[3,"TxAckOutput"],[3,"TxAckPrevMeta"],[3,"TxAckPrevInput"],[3,"TxAckPrevOutput"],[3,"TxAckPrevExtraData"],[3,"OwnershipProof"],[3,"HdNodePathType"],[3,"TransactionType"],[3,"TxOutputType"],[3,"TxInputType"],[3,"TxOutputBinType"],[3,"TxAckInputWrapper"],[3,"TxAckOutputWrapper"],[3,"RefundMemo"],[3,"CoinPurchaseMemo"],[3,"PaymentRequestMemo"],[3,"TextMemo"],[3,"TxAckPrevExtraDataWrapper"],[3,"TxAckPrevInputWrapper"],[3,"TxAckPrevOutputWrapper"],[4,"RequestType"],[3,"TxRequestDetailsType"],[3,"TxRequestSerializedType"],[3,"FirmwareErase"],[3,"FirmwareRequest"],[3,"FirmwareUpload"],[3,"SelfTest"],[4,"CardanoNativeScriptType"],[4,"CardanoAddressType"],[4,"CardanoNativeScriptHashDisplayFormat"],[4,"CardanoTxWitnessType"],[4,"CardanoTxAuxiliaryDataSupplementType"],[4,"CardanoDerivationType"],[4,"CardanoPoolRelayType"],[4,"CardanoTxSigningMode"],[4,"CardanoCertificateType"],[3,"CardanoTxOutput"],[3,"CardanoAddress"],[3,"CardanoAddressParametersType"],[3,"CardanoGetPublicKey"],[3,"CardanoGetAddress"],[3,"CardanoToken"],[3,"CardanoTxWithdrawal"],[3,"CardanoTxMint"],[3,"CardanoTxAuxiliaryDataSupplement"],[3,"CardanoBlockchainPointerType"],[3,"CardanoNativeScript"],[3,"CardanoGetNativeScriptHash"],[3,"CardanoNativeScriptHash"],[3,"CardanoPublicKey"],[3,"CardanoSignTxInit"],[3,"CardanoTxInput"],[3,"CardanoAssetGroup"],[3,"CardanoPoolOwner"],[3,"CardanoPoolRelayParameters"],[3,"CardanoPoolMetadataType"],[3,"CardanoPoolParametersType"],[3,"CardanoTxCertificate"],[3,"CardanoCatalystRegistrationParametersType"],[3,"CardanoTxAuxiliaryData"],[3,"CardanoTxCollateralInput"],[3,"CardanoTxRequiredSigner"],[3,"CardanoTxItemAck"],[3,"CardanoTxWitnessRequest"],[3,"CardanoTxWitnessResponse"],[3,"CardanoTxHostAck"],[3,"CardanoTxBodyHash"],[3,"CardanoSignTxFinished"],[3,"Success"],[3,"Failure"],[3,"ButtonRequest"],[3,"ButtonAck"],[3,"PinMatrixRequest"],[3,"PinMatrixAck"],[3,"PassphraseRequest"],[3,"PassphraseAck"],[3,"DeprecatedPassphraseStateRequest"],[3,"DeprecatedPassphraseStateAck"],[3,"HdNodeType"],[4,"ButtonRequestType"],[4,"FailureType"],[4,"PinMatrixRequestType"],[3,"DebugLinkMemoryRead"],[3,"DebugLinkMemoryWrite"],[3,"DebugLinkDecision"],[3,"DebugLinkLayout"],[3,"DebugLinkReseedRandom"],[3,"DebugLinkRecordScreen"],[3,"DebugLinkGetState"],[3,"DebugLinkState"],[3,"DebugLinkStop"],[3,"DebugLinkLog"],[3,"DebugLinkMemory"],[3,"DebugLinkFlashErase"],[3,"DebugLinkEraseSdCard"],[3,"DebugLinkWatchLayout"],[4,"DebugSwipeDirection"],[4,"DebugButton"],[3,"EthereumSignTxEip1559"],[3,"EthereumAddress"],[3,"EthereumMessageSignature"],[3,"EthereumVerifyMessage"],[3,"EthereumTypedDataSignature"],[3,"EthereumGetPublicKey"],[3,"EthereumGetAddress"],[3,"EthereumSignTx"],[3,"EthereumSignMessage"],[3,"EthereumSignTypedHash"],[3,"EthereumPublicKey"],[3,"EthereumTxRequest"],[3,"EthereumTxAck"],[3,"EthereumAccessList"],[3,"EthereumSignTypedData"],[3,"EthereumTypedDataStructRequest"],[3,"EthereumTypedDataStructAck"],[3,"EthereumTypedDataValueRequest"],[3,"EthereumTypedDataValueAck"],[4,"EthereumDataType"],[3,"EthereumStructMember"],[3,"EthereumFieldType"],[4,"BackupType"],[4,"SafetyCheckLevel"],[3,"Features"],[3,"ApplySettings"],[3,"ResetDevice"],[3,"Initialize"],[3,"GetFeatures"],[3,"LockDevice"],[3,"EndSession"],[3,"ApplyFlags"],[3,"ChangePin"],[3,"ChangeWipeCode"],[3,"SdProtect"],[3,"Ping"],[3,"Cancel"],[3,"GetEntropy"],[3,"Entropy"],[3,"GetFirmwareHash"],[3,"FirmwareHash"],[3,"GetFirmware"],[3,"FirmwareChunk"],[3,"FirmwareChunkAck"],[3,"WipeDevice"],[3,"LoadDevice"],[3,"BackupDevice"],[3,"EntropyRequest"],[3,"EntropyAck"],[3,"RecoveryDevice"],[3,"WordRequest"],[3,"WordAck"],[3,"SetU2fCounter"],[3,"GetNextU2fCounter"],[3,"NextU2fCounter"],[3,"DoPreauthorized"],[3,"PreauthorizedRequest"],[3,"CancelAuthorization"],[3,"RebootToBootloader"],[3,"GetNonce"],[3,"Nonce"],[4,"Capability"],[4,"RecoveryDeviceType"],[4,"SdProtectOperationType"],[4,"WordRequestType"],[4,"MoneroNetworkType"],[3,"MoneroGetAddress"],[3,"MoneroTransactionDestinationEntry"],[3,"MoneroAddress"],[3,"MoneroWatchKey"],[3,"MoneroGetWatchKey"],[3,"MoneroTransactionInitRequest"],[3,"MoneroKeyImageExportInitRequest"],[3,"MoneroGetTxKeyRequest"],[3,"MoneroLiveRefreshStartRequest"],[3,"MoneroTransactionSourceEntry"],[3,"MoneroTransactionRsigData"],[3,"MoneroTransactionInitAck"],[3,"MoneroTransactionSetInputRequest"],[3,"MoneroTransactionSetInputAck"],[3,"MoneroTransactionInputViniRequest"],[3,"MoneroTransactionInputViniAck"],[3,"MoneroTransactionAllInputsSetRequest"],[3,"MoneroTransactionAllInputsSetAck"],[3,"MoneroTransactionSetOutputRequest"],[3,"MoneroTransactionSetOutputAck"],[3,"MoneroTransactionAllOutSetRequest"],[3,"MoneroTransactionAllOutSetAck"],[3,"MoneroTransactionSignInputRequest"],[3,"MoneroTransactionSignInputAck"],[3,"MoneroTransactionFinalRequest"],[3,"MoneroTransactionFinalAck"],[3,"MoneroKeyImageExportInitAck"],[3,"MoneroKeyImageSyncStepRequest"],[3,"MoneroKeyImageSyncStepAck"],[3,"MoneroKeyImageSyncFinalRequest"],[3,"MoneroKeyImageSyncFinalAck"],[3,"MoneroGetTxKeyAck"],[3,"MoneroLiveRefreshStartAck"],[3,"MoneroLiveRefreshStepRequest"],[3,"MoneroLiveRefreshStepAck"],[3,"MoneroLiveRefreshFinalRequest"],[3,"MoneroLiveRefreshFinalAck"],[3,"DebugMoneroDiagRequest"],[3,"DebugMoneroDiagAck"],[3,"MoneroSubAddressIndicesList"],[3,"MoneroExportedKeyImage"],[3,"MoneroTransferDetails"],[3,"MoneroRingCtSig"],[3,"MoneroAccountPublicAddress"],[3,"MoneroTransactionData"],[3,"MoneroOutputEntry"],[3,"MoneroMultisigKlRki"],[3,"MoneroRctKeyPublic"],[3,"NemAddress"],[3,"NemGetAddress"],[3,"NemDecryptMessage"],[3,"NemSignTx"],[3,"NemSignedTx"],[3,"NemDecryptedMessage"],[3,"NemTransactionCommon"],[3,"NemTransfer"],[3,"NemProvisionNamespace"],[3,"NemMosaicCreation"],[3,"NemMosaicSupplyChange"],[3,"NemAggregateModification"],[3,"NemImportanceTransfer"],[3,"NemCosignatoryModification"],[4,"NemModificationType"],[4,"NemImportanceTransferMode"],[3,"NemMosaicDefinition"],[4,"NemMosaicLevy"],[4,"NemSupplyChangeType"],[3,"NemMosaic"],[3,"RippleAddress"],[3,"RippleGetAddress"],[3,"RippleSignTx"],[3,"RippleSignedTx"],[3,"RipplePayment"],[4,"StellarAssetType"],[3,"StellarAddress"],[3,"StellarGetAddress"],[3,"StellarSignTx"],[3,"StellarPaymentOp"],[3,"StellarManageSellOfferOp"],[3,"StellarManageBuyOfferOp"],[3,"StellarCreatePassiveSellOfferOp"],[3,"StellarChangeTrustOp"],[3,"StellarAllowTrustOp"],[3,"StellarAsset"],[3,"StellarTxOpRequest"],[3,"StellarCreateAccountOp"],[3,"StellarPathPaymentStrictReceiveOp"],[3,"StellarPathPaymentStrictSendOp"],[3,"StellarSetOptionsOp"],[3,"StellarAccountMergeOp"],[3,"StellarManageDataOp"],[3,"StellarBumpSequenceOp"],[3,"StellarSignedTx"],[4,"StellarSignerType"],[4,"StellarMemoType"],[3,"TezosAddress"],[3,"TezosGetAddress"],[3,"TezosGetPublicKey"],[3,"TezosSignTx"],[3,"TezosPublicKey"],[3,"TezosSignedTx"],[3,"TezosTransactionOp"],[3,"TezosOriginationOp"],[3,"TezosBallotOp"],[3,"TezosContractId"],[3,"TezosRevealOp"],[3,"TezosDelegationOp"],[3,"TezosProposalOp"],[4,"TezosBallotType"],[4,"TezosContractType"],[3,"TezosParametersManager"],[3,"TezosManagerTransfer"],[3,"WebAuthnListResidentCredentials"],[3,"WebAuthnAddResidentCredential"],[3,"WebAuthnRemoveResidentCredential"],[3,"WebAuthnCredentials"],[3,"WebAuthnCredential"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};