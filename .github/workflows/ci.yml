on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

name: rust

jobs:
  # Build CLI tooling
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Configure caching
        uses: actions/cache@v2
        with:
          key: build
          path: |
            ${{ env.HOME }}/.cargo
            ./target

      - name: cargo build
        run: |
            cargo build --release

  # Lint pull requests
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: rustfmt, clippy
          override: true

      - name: Configure caching
        uses: actions/cache@v2
        with:
          key: lint
          path: |
            ${{ env.HOME }}/.cargo
            ./target

      - name: Check Format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Check clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features -- -D warnings


  # Build and publish rustdocs (only on main)
  docs:
    runs-on: ubuntu-latest
    if: github.ref_name == 'main'
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Fetch rust tooling
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Configure caching
        uses: actions/cache@v2
        with:
          key: docs
          path: |
            ${{ env.HOME }}/.cargo
            ./target

      - name: Build documentation
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: |
            --no-deps
            --package trezor-client
            --package trezor-protos

      - name: Deploy to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v3
        with:
          target_branch: gh-pages
          build_dir: target/doc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
